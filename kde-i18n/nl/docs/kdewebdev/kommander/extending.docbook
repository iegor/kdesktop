<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="extending">
<chapterinfo>
<title
>&kommander; uitbreiden</title>
<authorgroup>
<author
><firstname
></firstname
> <surname
></surname
> </author>

&Sander.Koning; 

</authorgroup>
</chapterinfo>

<title
>&kommander; uitbreiden</title>

<!-- (OPTIONAL, BUT RECOMMENDED) This chapter should list all of the
application windows and their menubar and toolbar commands for easy reference.
Also include any keys that have a special function but have no equivalent in the
menus or toolbars. This may not be necessary for small apps or apps with no tool
or menu bars. -->

<sect1 id="create-widgets">
<title
>&kommander;-widgets maken</title>
<para
>Met Kommander kunt u vrij eenvoudig nieuwe widgets maken die gebaseerd zijn op niet-&kommander;-widgets. De aanpak is om uw nieuwe &kommander;-widgetklasse af te leiden van de &Qt;-/&kde;-widget die u met &kommander; wilt integreren, en dan oko van de klasse KommanderWidget. Methoden uit deze klasse herdefiniÃ«ren geeft de &kommander;-widget zijn functionaliteit. </para>
<para
>De meeste code van een &kommander;-widget is sjablooncode. Daarom kunt u het &kommander;-dialoogvenster widgetgenerator.kmdr gebruiken om de meeste &kommander;-widgetcode voor u te genereren. Al wat u hoeft te doen is de delen invullen die voor uw widget van belang zijn zoals staatinformatie, widgettekst, enzovoort. </para>
<para
>Stel dat we een nieuwe regelbewerk-widget voor &kommander; willen maken, gebaseerd op het &kde;-widget KLineEdit. Door het widgetgenerator-dialoogvenster van &kommander; te gebruiken krijgen we iets als het volgende in het uitgevoerde headerbestand: </para>
</sect1>

</chapter>

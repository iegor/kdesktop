<?xml version="1.0"  encoding="UTF-8" ?>

<sect1 id="widgets">
<sect1info>
<title
>Elementos ('Widgets')</title>
<authorgroup>
<author
><firstname
></firstname
> <surname
></surname
> <affiliation
><address
> <email
></email>
</address
></affiliation>
</author>

<othercredit role="translator"
><firstname
>Marcus</firstname
><surname
>Gama</surname
><affiliation
><address
><email
>marcus_gama@uol.com.br</email
></address
></affiliation
><contrib
>Tradução</contrib
></othercredit
> 

</authorgroup>
</sect1info>

<title
>Elementos ('Widgets')</title>

<para
>Os blocos de construção de um diálogo do &kommander; são os elementos gráficos ou 'widgets'. Eles são como qualquer um dos elementos gráficos do Qt; e do &kde;, exceto no fato de terem algum recurso extra, que lhes permite ter uma <quote
>associação de texto</quote
>. O texto é associado com um estado do elemento gráfico ou com o seu 'slot' de população. O número de estado depende do elemento gráfico. Se um elemento só tiver um estado, este é chamado de 'estado padrão'. </para>

<para
>Texto do elemento blá blá</para>

<para
>O diálogo possui dois estados especiais para o texto do &kommander;. Eles são o Initiate e o Destroy. Eles são executados quando o diálogo é inicializado e quando é destruído. Eles protegem contra situações conhecidas por <quote
>race conditions</quote
> (condições de corrida) e significam que você não precisa de nenhum procedimento especial ao fechar para 'manter a casa em ordem'.</para>


<variablelist>
<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="buttongroup.png" format="PNG"/>
</imageobject
></inlinemediaobject
> ButtonGroup </term>
<listitem>
<para
>Um elemento contentor para organizar os botões num grupo. Poderá ser definido um título opcional com a propriedade 'title'. O contorno da área poderá ser ajustado com a propriedade 'lineWidth'. O grupo de botões poderá ser exclusivo se disser que a propriedade 'exclusive' é verdadeira. Isto significa que, quando um botão está clicado, todos os outros ficarão desligados, com a exceção dos RadioButton's, que são sempre mutuamente exclusivos, mesmo que o grupo não seja. Estes botões poderão deixar de ser exclusivos com a propriedade 'radioButtonExclusive'. (Não tenho certeza se esta propriedade funciona de fato.) </para>
<para
>O ButtonGroup tem um estado, o estado padrão.</para>
<para
>O texto do elemento de um ButtonGroup são as associações de texto para cada um dos botões, na ordem que aparecem no ButtonGroup. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="checkbox.png" format="PNG"/>
</imageobject
></inlinemediaobject
> CheckBox </term>
<listitem>
<para
>Um botão que poderá ser ligado e desligado. Também poderá ser semi-ligado se a propriedade 'tristate' estiver ativada. A legenda associada ao CheckBox é definida na propriedade 'text'. Se ativar a propriedade 'checked', ficará com o elemento ligado inicialmente. </para>
<para
>Um CheckBox tem 3 estados: 'checked' (ligado), 'semichecked' (semi-ligado) e 'unchecked' (desligado). </para>
<para
>O texto do elemento CheckBox é o valor da propriedade 'text'. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="pushbutton.png" format="PNG"/>
</imageobject
></inlinemediaobject
> CloseButton </term>
<listitem>
<para
>Um botão que, quando for clicado, executa a sua associação de texto e fecha então o diálogo. O texto no botão é definido com a propriedade 'text'. O resultado da associação de texto será emitido para o 'stdout' se a propriedade 'writeStdout' estiver ativa. O botão poderá ser a ação padrão para o diálogo, se a propriedade 'default' for verdadeira. </para>
<para
>O CloseButton tem um estado, o padrão. </para>
<para
>Não existe nenhum texto de elemento associado a um CloseButton. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="combobox.png" format="PNG"/>
</imageobject
></inlinemediaobject
> ComboBox </term>
<listitem>
<para
>O ComboBox é um elemento de seleção que combina um botão com um menu. Ele mostra a escolha atual do usuário, a partir de uma lista de opções, num espaço mínimo. Os itens são adicionados à lista com o diálogo de edição. Se a propriedade 'editable' for verdadeira, o usuário poderá inserir textos arbitrários. </para>
<para
>O ComboBox tem um estado, o padrão. </para>
<para
>O texto do elemento para uma ComboBox é o texto do item selecionado. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="pushbutton.png" format="PNG"/>
</imageobject
></inlinemediaobject
> ExecButton </term>
<listitem>
<para
>Um botão que, quando for clicado, executa a sua associação de texto. A legenda do botão é definida com a propriedade 'text'. O resultado da associação de texto será emitido no 'stdout', se a propriedade 'writeStdout' for verdadeira. O botão poderá ser a ação padrão, se a propriedade 'default' for verdadeira. </para>
<para
>O ExecButton tem um estado, o padrão. </para>
<para
>Não existe nenhum texto do elemento gráfico associado ao ExecButton. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="lineedit.png" format="PNG"/>
</imageobject
></inlinemediaobject
> FileChooser </term>
<listitem>
<para
>O elemento FileChooser combina uma LineEdit com um botão que, quando clicado, irá apresentar ao usuário um diálogo para poder selecionar arquivos/pastas. O arquivo/pasta selecionado é guardado no LineEdit. O tipo do FileChooser é definido com a propriedade 'selectionType'. Os tipos disponíveis são o Open, o Save e o Directory. Podem ser selecionados vários arquivos/pastas se a propriedade 'selectionOpenMultiple' for verdadeira. Poderá ser definido um título para o FileChooser com a propriedade 'selectionCaption'. Isto é mostrado como o título do diálogo. Se não for indicado nenhum título, o tipo de seleção será mostrado no título. Os arquivos mostrados no diálogo poderão ser limitados com a propriedade 'selectionFilter'. </para>
<para
>O FileChooser tem um estado, o padrão. </para>
<para
>O texto do elemento FileChoose é o texto contido no LineEdit (o arquivo selecionado pelo usuário). </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="groupbox.png" format="PNG"/>
</imageobject
></inlinemediaobject
> GroupBox </term>
<listitem>
<para
>Um elemento que contém outros elementos. O contorno da sua área é ajustado com a propriedade 'lineWidth'. Pode ser adicionado um título com a propriedade 'title'. </para>
<para
>O GroupBox tem um estado, o padrão. </para>
<para
>O texto do elemento GroupBox são as associações de texto de cada um dos elementos que ele contém, combinados em conjunto. Eles estarão na ordem pela qual aparecem no GroupBox. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="lineedit.png" format="PNG"/>
</imageobject
></inlinemediaobject
> LineEdit </term>
<listitem>
<para
>Um elemento LineEdit é um campo de texto de uma linha. Permite ao usuário inserir e modificar uma única linha de texto. O texto inicial do campo pode ser definido com a propriedade 'text'. O elemento poderá ser configurado como sendo apenas para leitura com a propriedade 'readOnly'. Existem três modos para o elemento: Normal, NoEcho e Password. O modo é definido com a propriedade 'echoMode'. </para>
<para
>O LineEdit tem um estado, o padrão. </para>
<para
>O texto do elemento LineEdit é o texto escrito no próprio campo. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="listbox.png" format="PNG"/>
</imageobject
></inlinemediaobject
> ListBox </term>
<listitem>
<para
>Um elemento ListBox contém uma lista de itens selecionáveis. Normalmente, só está um ou zero elementos selecionados. Este comportamento poderá ser alterado com a propriedade 'selectionMode'. Os itens são adicionados à ListBox usando o diálogo de edição. </para>
<para
>Uma ListBox só tem um estado, o padrão. </para>
<para
>O texto do elemento para uma ListBox são os itens contidos na ListBox. O @selectedWidgetText irá devolver apenas os itens que estão selecionados atualmente. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="listview.png" format="PNG"/>
</imageobject
></inlinemediaobject
> ListView </term>
<listitem>
<para
>Este elemento não está ativo no &kommander;. É funcionalmente igual ao elemento em árvore, por isso baseie-se nele. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="pixlabel.png" format="PNG"/>
</imageobject
></inlinemediaobject
> PixmapLabel </term>
<listitem>
<para
>Um elemento simples que contém uma legenda de texto ou imagem. A imagem mostrada é definida na propriedade 'pixmap'. O texto é definido na propriedade 'text'. Só uma destas propriedades poderá ser definida ao mesmo tempo (pelo menos o editor se recusa configurar ambas ao mesmo tempo). Se o 'scaledContents' for verdadeiro, então a imagem será ajustada para caber no elemento. O formato do texto poderá ser definido com a propriedade 'textFormat'. </para>
<para
>Este elemento não está ativo no &kommander; e não tem nenhum estado ou texto associado. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="radiobutton.png" format="PNG"/>
</imageobject
></inlinemediaobject
> RadioButton </term>
<listitem>
<para
>Um botão que poderá ser ligado e desligado, usado normalmente no ButtonGroup para criar uma opção exclusiva. A legenda associada ao CheckBox é definida na propriedade 'text'. Se ativar a propriedade 'checked', ficará com o elemento ligado inicialmente. Se todos os RadioButton's de um ButtonGroup tiverem a propriedade 'checked' verdadeira, então será usado o último botão. </para>
<para
>O RadioButton tem 2 estados: ligado e desligado. </para>
<para
>Não existe nenhum texto de elemento associado a um RadioButton. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="richtextedit.png" format="PNG"/>
</imageobject
></inlinemediaobject
> RichTextEditor </term>
<listitem>
<para
>Este elemento contém um editor de texto que permite alguma formatação simples de texto. </para>
<para
>O RichTextEditor tem um estado, o padrão. </para>
<para
>O texto do elemento RichTextEditor é o texto contido no editor, num formato de texto formatado. O texto selecionado poderá ser devolvido com o @selectedWidgetText. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="spinbox.png" format="PNG"/>
</imageobject
></inlinemediaobject
> SpinBoxInt </term>
<listitem>
<para
>Um elemento que permite ao usuário alterar um valor inteiro, pressionando nas setas para cima ou para baixo ou inserindo um valor no campo de texto. Os valores mínimo e máximo poderão ser definidos com as propriedades 'minValue' e 'maxValue'. A propriedade 'specialValueText' é usada para configurar um valor de texto que será mostrado em vez do valor mínimo. </para>
<para
>Este elemento só tem um estado, o padrão. </para>
<para
>O texto do elemento SpinBoxInt é o número mostrado atualmente. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="frame.png" format="PNG"/>
</imageobject
></inlinemediaobject
> SubDialog </term>
<listitem>
<para
>Um botão que roda outro diálogo do &kommander;, quando for pressionado. O diálogo a rodar é definido na propriedade 'kmdrFile'. Se a propriedade 'default' for verdadeira, o diálogo será executado, quando o Enter for pressionado enquanto o diálogo está em primeiro plano. Acredito que poderá também ser usado como contentor (possuir outros elementos dentro dele). </para>
<para
>O SubDialog tem um estado, o padrão. </para>
<para
>O texto do elemento SubDialog é a associação de texto do diálogo que executa. </para>
<note
><para
>Isto pretendia conter o diálogo, mas foi desatualizado com o novo conceito de projeto. Deverá ainda ficar com o <function
>@dialog()</function
> no seu texto do &kommander; ou deverá ser eliminado? Tal como está, fica incorreto.</para
></note>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="tabwidget.png" format="PNG"/>
</imageobject
></inlinemediaobject
> TabWidget </term>
<listitem>
<para
>Um elemento que contém várias páginas, que por sua vez podem conter outros elementos. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="multilineedit.png" format="PNG"/>
</imageobject
></inlinemediaobject
> TextEdit </term>
<listitem>
<para
>Um campo de texto simples com várias linhas. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="label.png" format="PNG"/>
</imageobject
></inlinemediaobject
> TextLabel </term>
<listitem>
<para
>Um elemento simples que contém algum texto. Este elemento permite-lhe também definir uma imagem. Ok, o editor diz que eles são ambos QLabel's. Porque existem 2 elementos que parecem fazer a mesma coisa, mas com nomes diferentes? - Isto pretende ser corrigido na Alpha 7. </para>
<para
>Desde a versão Alpha 6 este item está parcialmente ativado e poderá ser configurado através de chamadas de DCOP externas. </para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<inlinemediaobject
><imageobject>
<imagedata fileref="listview.png" format="PNG"/>
</imageobject
></inlinemediaobject
> TreeWidget </term>
<listitem>
<para
>Um elemento que oferece uma lista com uma estrutura em árvore. Este elemento gráfico está agora completamente ativo para adicionar e remover itens, desde a versão Alpha 6. Você poderá adicionar itens-filhos e dados em várias colunas. A limitação atual é que você não poderá modificar as colunas. Para adicionar um item-filho, use o <quote
>/</quote
> como separador. Para adicionar dados nas colunas, use o caractere de tabulação<quote
>\t</quote
> entre as colunas. </para>
</listitem>
</varlistentry>
</variablelist>
</sect1>

<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="introduction">
<chapterinfo>
<title
>Introdução</title>
<authorgroup>
<author
><firstname
>Eric</firstname
> <surname
>Laffoon</surname
> <affiliation
> <address
><email
>sequitur@kde.org</email
></address>
</affiliation>
</author>

<othercredit role="translator"
><firstname
>Marcus</firstname
><surname
>Gama</surname
><affiliation
><address
><email
>marcus_gama@uol.com.br</email
></address
></affiliation
><contrib
>Tradução</contrib
></othercredit
> 

</authorgroup>
</chapterinfo>

<title
>Introdução</title>

<para
>O &kommander; é uma ferramenta visual de criação de diálogos que poderá ser expandida para criar aplicativos gráficos completos. O objetivo principal é criar tantos recursos quanto possíveis com qualquer linguagem de 'scripting'. Isto é conseguido através das seguintes funcionalidades: </para>

<itemizedlist>


  <listitem
><para
>Os especiais são antecedidos com um <quote
>@</quote
> como o @textoElemento. Eles oferecem recursos especiais como o valor de um elemento gráfico, funções, nomes alternativos, variáveis globais, entre outras coisas.</para
></listitem>


<listitem
><para
>A integração com o &DCOP; permite aos diálogos do &kommander; controlarem e serem controladas nas interações com outros aplicativos do &kde;. É um recurso muito poderoso!</para
></listitem>

<listitem
><para
>Os 'signals' e os 'slots' são uma forma um pouco menos intuitiva para um usuário novo. Está em revisão a forma como se processam as coisas na primeira versão importante. Estes itens oferecem um modelo de eventos limitado para quando é clicado um botão ou um elemento gráfico mudou. Combinado com o <quote
>Texto de População</quote
> é bastante poderoso.</para
></listitem>
</itemizedlist>

<para
>O recurso central dos diálogos do &kommander; é a possibilidade de associar texto (o Text do &kommander;) a um elemento gráfico. Por isso, se você tiver o @elemento1 e o @elemento2 e forem campos de texto, você poderá dizer ao &kommander; para mostrar o seu conteúdo, inserindo o @widgetText na área de Texto do &kommander;. Então, escreva 'olá' no @elemento1 e 'mundo' no @elemento2. Um botão poderá então ter o texto 'O meu primeiro programa @widget1 @widget2' no &kommander; Se executar este diálogo num console, ele irá mostrar 'O meu primeiro programa olá mundo' no &kommander; </para>

<para
>Felizmente, você começa a ver uma pequena amostra do potencial. O &kommander; possibilita um modelo de desenho muito mais rápido para os aplicativos mais simples, porque permite-lhe parar de pensar tanto na linguagem e voltar-se para modelo conceitual mais básico e natural. Nos computadores, a linguagem é uma forma de definir os conceitos e, como tal, é uma camada entre o conceito e a implementação, o que poderá impedir um progresso minucioso. O &kommander; procura minimizar essa camada. </para>

<para
>O &kommander; também procura basear-se em padrões. É criado sobre a plataforma do &Qt; Designer e cria arquivos *.ui, mudando seus nomes para *.kmdr. Ele poderá importar facilmente qualquer elemento gráfico do &kde; e isso poderá ser feito sem ter que recompilar o &kommander;, recorrendo a 'plugins'. </para>

<para
>O outro fator significativo do &kommander; é como ele se ajusta aos requisitos da linguagem. As linguagens de programação podem ser coisas maravilhosas, mas tendem a ter os seus próprios dogmas e particularidades, procurando muitas vezes oferecer um avanço no desenho de &GUI;s num ambiente de desenvolvimento integrado. Ironicamente, a aceitação desses &IDE;s é limitada pelo número de pessoas que estão dispostas a adotar uma nova linguagem para obter acesso a um determinado recurso. Não é, de fato, razoável esperar que as pessoas necessitem mudar para uma dúzia de novas linguagens para acessar aos vários conjuntos de recursos. Sendo neutro em relação à linguagem e permitindo a uma janela do &kommander; ser extendida com qualquer linguagem de 'scripting', o &kommander; posiciona-se num nível único para uma adoção vasta. Podem ser usadas várias linguagens de 'scripting' numa única janela e os aplicativos podem ser adquiridos por pessoas que usem uma linguagem diferente da que o programador original usou e convertê-la ou extendê-la gradualmente. Poderão ser utilizados novos elementos gráficos e recursos por todas as linguagens disponíveis. </para>

<para
>Esperamos que o &kommander; comece a ter suporte do programador e o reconhecimento necessário para atingir o potencial que oferece. O objetivo final é tornar o &kommander; útil para os usuários novatos para extenderem e mesclares os seus aplicativos. Ao mesmo tempo, deverá tornar-se uma boa ferramenta de prototipagem. Também abre a porta à promessa do código aberto de uma nova forma. Sabe-se que as pessoas podem extender os nossos programas em GPL, mas mantém-se o fato de muito poucas pessoas terem o conhecimento. Com o &kommander; estes números vêem um grande multiplicador! Alguns aplicativos poderão ser mais lógicos se forem um aplicativo do &kommander;. Isto já é usado nas áreas em que se pretende permitir alguma flexibilidade no &quantaplus;. </para>

<para
>Esperemos que goste do &kommander;. Por favor, ajude-nos com relatórios de erros e diálogos de exemplo, assim como quaisquer pedidos que possa ter. Você poderá juntar-se à nossa lista de usuários para ajudar a desenvolver aplicativos para o &kommander; em http://mail.kdewebdev.org/mailman/listinfo/kommander </para>

<para
>Cumprimentos da equipe de desenvolvimento do &kommander;!</para>

</chapter>

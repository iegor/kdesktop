<!-- <?xml version="1.0" ?>
<!DOCTYPE chapter PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd">
To validate or process this file as a standalone document, uncomment
this prolog. Be sure to comment it out again when you are done -->

<chapter id="midi">
<title
>&MIDI;</title>

<sect1 id="midi-overview">
<title
>Introdução</title>

<!-- what-to-say-here: aRts has three roles
  * moving midi events around between applications
  * abstracting the hardware
  * synthesizer -->

<para
>O suporte ao &MIDI; no &arts; pode fazer uma grande quantidade de coisas. Antes de mais nada, permite a <emphasis
>comunicação</emphasis
> entre as diversas peças de software que produzem ou consomem eventos &MIDI;. Se você, por exemplo, tiver uma sequenciador e um reprodutor que funcionem com o &arts;, o &arts; poderá enviar os eventos &MIDI; do sequenciador para o reprodutor. </para>

<para
>Por outro lado, o &arts; pode também ajudar os aplicativos a <emphasis
>interagir com o hardware</emphasis
>. Se uma determinada parte de um software (como, por exemplo, o suporte de amostragem) funcionar com o &arts;, ela será capaz de receber os eventos &MIDI; de um teclado &MIDI; externo, da mesma forma. </para>

<para
>Finalmente, o &arts; fornece um excelente <emphasis
>sintetizador modular</emphasis
>. Ele está desenhado para fazer exatamente isso. Por isso, você poderá criar instrumentos a partir de pequenos módulos com o artsbuilder, e usar depois esses instrumentos para compor ou tocar música. A síntese poderá não ser pura, uma vez que existem módulos que você poderá usar para tocar amostras. Por isso, o &arts; poderá ser um reprodutor de amostras, um sintetizador, entre outras coisas e, sendo completamente modular, é muito fácil de extender, muito fácil de experimentar, além de ser poderoso e flexível. </para>
</sect1>

<sect1 id="midi-manager">
<title
>O Gerenciador de &MIDI;</title>
<!-- what-to-say-here:
  * how to use artscontrol - view midimanager
  * what does autorestore do? (not yet implemented - so not yet documented) -->

<para
>A componente central no &arts; que mantém o registo dos aplicativos que estão conectados e como os eventos deverão ser passados entre eles é o gerenciador MIDI. Para ver ou influenciar o que ele faz, inicie o artscontrol. Depois, escolha <menuchoice
><guilabel
>Ver</guilabel
><guilabel
>Ver o Gerenciador de MIDI</guilabel
> </menuchoice
> no menu. </para>

<para
>Do lado esquerdo, você verá as <guilabel
>Entradas MIDI</guilabel
>. Aqui, todos os objetos que produzem eventos &MIDI;, como por exemplo uma porta &MIDI; que envie dados vindos de um teclado &MIDI; conectado, um sequenciador que toque uma música, entre outras coisas, serão listados. Do lado direito, você verá as <guilabel
>Saídas MIDI</guilabel
>. Aqui, todas as coisas que consumam eventos &MIDI;, como um reprodutor de amostras simulado (como software) ou a porta &MIDI; externa onde o seu reprodutor por hardware estará conectado, serão listadas. Os aplicativos novos, como os sequenciadores se registarão eles próprios, de modo que a lista vá sendo atualizada ao longo do tempo. </para>

<para
>Você poderá conectar as entradas às saídas se você marcar a entrada do lado esquerdo e a saída do lado direito, escolhendo em seguida <guilabel
>Conectar</guilabel
> com o botão abaixo. O <guilabel
>Desconectar</guilabel
> funciona da mesma forma. Você irá ver o que está conectado como pequenas linhas entre as entradas e as saídas, no meio da janela. Observe que você poderá conectar um emissor a mais de um receptor (e vice-versa). </para>

<para
>Os programas (como o sequenciador Brahms) se adicionarão eles próprios quando são iniciados e serão removidos da lista quando terminarem. Mas você também poderá adicionar itens novos no menu <guilabel
>Adicionar</guilabel
>: </para>

<variablelist>
<varlistentry>
<term
><guimenuitem
>Porta MIDI do Sistema (OSS)</guimenuitem
></term>
<listitem>
<para
>Isto irá criar um novo objeto do &arts; que conversa com uma porta MIDI externa. </para>

<para
>Uma vez que as portas MIDI externas podem fazer ambas as coisas (enviar e receber dados), a escolha desta opção irá adicionar uma entrada e uma saída MIDI. No &Linux;, você deverá ter um controlador <acronym
>OSS</acronym
> (ou <acronym
>OSS</acronym
>/Free, que vem com o kernel do seu &Linux;) ou um <acronym
>ALSA</acronym
> instalado para a sua placa de som, para que isto funcione. Ele irá perguntar o nome do dispositivo. Normalmente, é o <filename class="devicefile"
>/dev/midi</filename
> ou o <filename class="devicefile"
>/dev/midi00</filename
>. </para>

<para
>Contudo, se você tiver mais de um dispositivo &MIDI; ou &MIDI; local instalado, poderão existir mais opções. Para ver mais informações sobre as suas portas &MIDI;, inicie o &kcontrolcenter; e escolha <menuchoice
><guilabel
>Informação</guilabel
> <guilabel
>Som</guilabel
></menuchoice
>. </para>
</listitem>
</varlistentry>

<varlistentry>
<term
><guimenuitem
>Saída MIDI de Sintetização do aRts</guimenuitem
></term>
<listitem>
<para
>Isto irá adicionar uma nova saída &MIDI; com um instrumento sintetizado do &arts;. Se você escolher o item do menu, aparecerá uma janela que lhe permite escolher um instrumento. Você poderá criar instrumentos novos com o artsbuilder. Todos os arquivos <literal role="extension"
>.arts</literal
> com um nome que comece por <filename
>instrument_</filename
> irão aparecer aqui. </para>
</listitem>
</varlistentry>
</variablelist>

</sect1>

<sect1 id="brahms">
<title
>Usando o &arts; &amp; o Brahms</title>

<para
>Atualmente, começar é bastante fácil. Você irá precisar de uma versão para o &kde; 2.1 ou superior do &brahms;, que poderá ser encontrada no módulo <literal
>kmusic</literal
> do <acronym
>CVS</acronym
>. Existe também algumas informações sobre como obter o &brahms; na <ulink url="http://www.arts-project.org/"
>Página Pessoal do aRts</ulink
> na seção Download. </para>

<para
>Quando você o iniciar, ele irá aparecer no gerenciador de &MIDI;. Se você quiser fazer síntese, basta adicionar um instrumento sintetizado &MIDI; através da opção <menuchoice
><guilabel
>Adicionar</guilabel
><guilabel
>Saída MIDI de Síntese do aRts</guilabel
></menuchoice
>. </para>

<para
>Escolha um instrumento (por exemplo, o <guilabel
>organ2</guilabel
>). Conecte-os com o botão <guilabel
>Ligar</guilabel
>. Finalmente, poderá começar a compor no &brahms;, para que o resultado seja sintetizado com o &arts;. </para>

<para
>Normalmente, é uma boa ideia ter a janela do &artscontrol; aberta e ver se o volume não está muito alto (a qualidade piora quando as barras tocam no limite superior). Agora, você poderá começar a trabalhar em uma música de demonstração do &arts; e, se estiver pronta, poderá publicá-la no aRts-project.org ;-). </para>

<!-- TODO: how to do more than one instrument in Brahms (hm, not implemented
     yet, not documented yet), how to use samples, mapping and so on. These
  	 things need to be implemented, too. -->

</sect1>

<sect1 id="midisend">
<title
>midisend</title>

<para
>O <command
>midisend</command
> é um pequeno aplicativo que lhe permitirá enviar eventos de &MIDI; a partir da linha de comando. Ele se registará como cliente, tal como acontece com os outras aplicativos. A forma mais simples de usá-lo é <screen
><prompt
>&percnt;</prompt
> <userinput
><command
>midisend</command
> <option
>-f</option
> <parameter
><replaceable
>/dev/midi00</replaceable
></parameter
></userinput
> </screen
>, o que irá fazer mais ou menos o mesmo que adicionar uma porta &MIDI; do sistema no &artscontrol;. (Não somente isso, porque o <command
>midisend</command
> só envia eventos). A diferença é que é fácil, por exemplo, iniciar o <command
>midisend</command
> em vários computadores diferentes (e, por isso, usar a transparência na rede). </para>

<para
>Também é possível fazer com que o <command
>midisend</command
> envie os dados a partir do <filename class="devicefile"
>stdin</filename
>, que poderá usar para encaminhar os dados dos aplicativos que não conhecem o &arts;, como a seguir: <screen
><prompt
>&percnt;</prompt
> <userinput
><command
><replaceable
>aplicacao_que_produz_eventos_midi_no_stdout</replaceable
></command
> | <command
>midisend</command
> <option
>-f</option
> <option
><replaceable
>-</replaceable
></option
></userinput
></screen>
<!-- TODO: document all options -->
</para>

</sect1>

<sect1 id="midi-creating-instruments">
<title
>Criar Instrumentos</title>
 
<para
>A forma como o &arts; faz a síntese de &MIDI; é a seguinte: você tem uma estrutura com algumas portas de entrada, onde ele vai obter a frequência, a velocidade (volume) e um parâmetro que indica se a nota ainda continua pressionada. A estrutura deverá agora sintetizar exatamente a nota com esse volume e reagir ao parâmetro 'pressed' (pressionado) (onde o 'pressed' = 1 significa que o usuário ainda mantém essa tecla carregada e o 'pressed' = 0 significa que o usuário soltou a tecla). </para>

<para
>Quando os eventos &MIDI; chegam, o &arts; irá criar novas estruturas para as notas à medida das necessidades, passar-lhes os parâmetros, e limpá-las quando terminar. </para>

<para
>Para criar e usar uma dessas estruturas, você deverá fazer o seguinte: </para>

<itemizedlist>
<listitem>
<para
>Para começar, a forma mais conveniente é abrir o arquivo <filename
>template_Instrument.arts</filename
> no &arts-builder;. </para>

<para
>Isto poderá ser obtido se usar o <menuchoice
><guimenu
>Arquivo</guimenu
><guimenuitem
>Abrir um Exemplo...</guimenuitem
></menuchoice
> e escolher o <guimenuitem
>template_Instrument</guimenuitem
> no selector de arquivos. Isto irá fornecer-lhe uma estrutura vazia com os parâmetros necessários, os quais você só terá de <quote
>preencher</quote
>. </para>
</listitem>

<listitem>
<para
>Para processar o parâmetro pressed, é conveniente usar o Synth&lowbar;ENVELOPE&lowbar;ADSR, ou, no caso de tocar apenas um WAV de uma bateria, simplesmente tocá-lo, ignorando deste modo o parâmetro pressed. </para>
</listitem>

<listitem>
<para
>A estrutura deverá indicar quando já não é necessária na saída <quote
>done</quote
> (pronto). Se o done for igual a <returnvalue
>1</returnvalue
>, o &arts; irá assumir que pode remover a estrutura. Convenientemente, o envelope de ADSR fornece um parâmetro quando tiver terminado, por isso você só precisa conectar isto à saída done da estrutura. </para>
</listitem>

<listitem>
<para
>Você deverá mudar o nome da sua estrutura para algum nome que comece por <filename
>instrument_</filename
>, como por exemplo <filename
>instrument_piano.arts</filename
> - você deverá gravar o arquivo com o mesmo nome na sua pasta <filename class="directory"
>$<envar
>HOME</envar
>/arts/structures</filename
> (que é onde o artsbuilder normalmente deseja gravar os arquivos). </para>
</listitem>

<listitem>
<para
>Finalmente, logo que o tenha salvo, você será capaz de usá-lo com o &artscontrol; no gerenciador de &MIDI;.</para>
</listitem>

<listitem>
<para
>Ah, é claro que a sua estrutura deverá tocar os dados de áudio que gera nas saídas esquerda e direita da estrutura, que serão por sua vez tocadas no gerenciador de áudio (você poderá ver isso no &artscontrol;), para que o consiga ouvir finalmente (ou processá-lo posteriormente com efeitos). </para>
</listitem>
</itemizedlist>

<para
>Uma boa forma de aprender como criar instrumentos é abrir um instrumento existente através da opção <menuchoice
><guilabel
>Arquivo</guilabel
><guilabel
>Abrir um Exemplo</guilabel
> </menuchoice
> e ver como funciona ;) </para>
</sect1>

<sect1 id="mapped-instruments">
<title
>Instrumentos Mapeados</title>

<para
>Os instrumentos mapeados são os que se comportam de forma diferente, dependendo da frequência, do programa, do canal ou da velocidade. Você poderá ter por exemplo um piano de 5 oitavas, usando uma amostra por cada oitava (ajustando a frequência, de acordo com isso). Isto irá soar bastante melhor do que usar apenas uma amostra. </para>

<para
>Você poderá criar também um mapa de bateria, que toca uma amostra específica da bateria por tecla. </para>

<para
>Finalmente, é muito útil se você tocar vários sons diferentes num instrumento mapeado em programas diferentes. Desta forma, você poderá usar o seu sequenciador, teclado externo ou outra fonte &MIDI; para mudar de sons sem ter de ajustar o &arts; à medida que trabalha. </para>

<para
>Um bom exemplo para isso é o instrumento <filename
>arts_all</filename
>, o qual apenas reune todos os instrumentos que vêm com o &arts; num mapa. Desta forma, você apenas terá de configurar uma vez o &artscontrol; para usar este <quote
>instrumento</quote
>, e assim, poderá compor uma música inteira num sequenciador sem ter de se incomodar com o &arts;. Precisa de outro som? Basta escolher o programa no sequenciador, para que o &arts; lhe dê outro som. </para>

<para
>Criar esses mapas é relativamente simples. Você apenas precisa de criar um arquivo de texto e escrever regras que se assemelhem a isto: </para>

<programlisting
>ON <replaceable
>[ condições ...]</replaceable
> DO structure=<replaceable
>uma_estrutura</replaceable
>.arts
</programlisting>

<para
>As condições poderão ser uma ou mais das seguintes: </para>

<variablelist>

<varlistentry>
<term
><option
>pitch</option
></term>

<listitem>
<para
>A frequência ou tom que é tocado. Você poderá usar isto se quiser dividir o seu instrumento com base no tom. No exemplo inicial, um piano que use amostras diferentes para as várias oitavas iria usar isto como condição. Você poderá indicar uma frequência única, como por exemplo <userinput
><option
>pitch</option
>=<parameter
>62</parameter
></userinput
> ou um intervalo de frequências, como por exemplo <userinput
><option
>pitch</option
>=<parameter
>60</parameter
>-<parameter
>72</parameter
></userinput
>. Os tons possíveis situam-se entre <parameter
>0</parameter
> e <parameter
>127</parameter
>. </para>
</listitem>
</varlistentry>

<varlistentry>
<term
><option
>program</option
></term>
<listitem>
<para
>O programa que está ativo no canal para onde a nota vai ser enviada. Normalmente, os sequenciadores permitem-lhe escolher o <quote
>instrumento</quote
> através da opção program. São permitidos programas únicos ou intervalos de programas, isto é, por exemplo, <userinput
><option
>program</option
>=<parameter
>3</parameter
></userinput
> ou <userinput
><option
>program</option
>=<parameter
>3</parameter
>-<parameter
>6</parameter
></userinput
>. Os programas possíveis situam-se entre <parameter
>0</parameter
> e <parameter
>127</parameter
>. </para>
</listitem>
</varlistentry>

<varlistentry>
<term
><option
>channel</option
></term>
<listitem>
<para
>O canal para onde a nota vai ser enviada. São permitidos canais únicos ou intervalos, isto é, por exemplo, <userinput
><option
>channel</option
>=<parameter
>0</parameter
></userinput
> ou <userinput
><option
>channel</option
>=<parameter
>0</parameter
>-<parameter
>8</parameter
></userinput
>. Os canais possíveis situam-se entre <parameter
>0</parameter
> e <parameter
>15</parameter
>. </para>
</listitem>

</varlistentry>
<varlistentry>
<term
><option
>velocity</option
></term>
<listitem>
<para
>A velocidade (volume) que a nota tem. São permitidas velocidades únicas (quem irá usar isso?) ou intervalos, como por exemplo <userinput
><option
>velocity</option
>=<parameter
>127</parameter
></userinput
> ou <userinput
><option
>velocity</option
>=<parameter
>64</parameter
>-<parameter
>127</parameter
></userinput
>. As velocidades possíveis situam-se entre <parameter
>0</parameter
> e <parameter
>127</parameter
>. </para>
</listitem>
</varlistentry>
</variablelist>

<para
>Um exemplo completo para um mapa seria (este é extraído do arquivo <filename
>instrument_arts_all.arts-map</filename
> atual): </para>

<programlisting
>ON program=0 DO structure=instrument_tri.arts
ON program=1 DO structure=instrument_organ2.arts
ON program=2 DO structure=instrument_slide1.arts
ON program=3 DO structure=instrument_square.arts
ON program=4 DO structure=instrument_neworgan.arts
ON program=5 DO structure=instrument_nokind.arts
ON program=6 DO structure=instrument_full_square.arts
ON program=7 DO structure=instrument_simple_sin.arts
ON program=8 DO structure=instrument_simple_square.arts
ON program=9 DO structure=instrument_simple_tri.arts
ON program=10 DO structure=instrument_slide.arts
ON program=11 pitch=60 DO structure=instrument_deepdrum.arts
ON program=11 pitch=61 DO structure=instrument_chirpdrum.arts
</programlisting>

<para
>Como você poderá ver, a estrutura é selecionada, dependendo do programa. No programa 11, você vê um <quote
>mapa de bateria</quote
> (com dois itens), que irá tocar um <quote
>bombo</quote
> com o C-5 (pitch=60), e um <quote
>prato de choque</quote
> com o C#5 (pitch=61). </para>
 
<para
>Para fazer com que os arquivos dos mapas apareçam automaticamente no &artscontrol; como opções dos instrumentos, terão de se chamar <filename
>instrument_<replaceable
>qualquercoisa</replaceable
>.arts-map</filename
> e estarem na sua Pasta Pessoal, em <filename class="directory"
>$<envar
>HOME</envar
>/arts/structures</filename
>, ou na pasta do &kde; em <filename class="directory"
>$<envar
>KDEDIR</envar
>/usr/local/kde/share/apps/artsbuilder/examples</filename
>. As estruturas que são usadas no mapa poderão ser indicadas com seu caminho completo ou então relativo à pasta onde o arquivo de mapa se encontra. </para>

<para
>Extender o mapa arts_all map ou mesmo criar um mapa geral &MIDI; completo para o &arts; é uma boa idéia para tornar o &arts; mais simples de usar por si só. Pense por favor em contribuir com instrumentos interessantes que crie, de modo a que possam ser incluídos nas versões futuras do &arts;. </para>
</sect1>

<!-- TODO: Maybe helpful
 * using an external keyboard
 * loopback midi device

<sect1 id="quick-start">
<title
>Quick Start</title>
 
</sect1>
<sect1 id="internal-details">
<title
>More Internal Details</title>
 
</sect1>

<sect1 id="other-considerations">
<title
>Other Considerations</title>
 
</sect1>
-->

</chapter>

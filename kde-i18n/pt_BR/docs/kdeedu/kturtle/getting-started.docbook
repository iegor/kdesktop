<!--Dear translator: please NEVER translate the id or anything inside the tags as they are needed in english by the application
     Thanks a lot in advance.-->
<chapter id="getting-started">
<title
>Começando</title>
<para
>Quando você inicia o &kturtle; você irá ver algo semelhante a isto: <screenshot
> <screeninfo
>Aqui está uma imagem do &kturtle; quando o inicia pela primeira vez</screeninfo
> <mediaobject
> <imageobject
> <imagedata fileref="mainwindow.png" format="PNG"/> </imageobject
> <textobject
> <phrase
>Janela principal do &kturtle;</phrase
> </textobject
> </mediaobject
> </screenshot
> Neste guia introdutório, iremos assumir que o idioma dos comandos é o Inglês. Você poderá mudar este idioma em <menuchoice
><guimenu
>Configurações</guimenu
><guimenuitem
>Configurar o &kturtle;...</guimenuitem
></menuchoice
>, mais precisamente na seção <guilabel
>Idioma</guilabel
>. Observe que o idioma que definir para o &kturtle; precisa ser o mesmo idioma que usa para digitar os comandos de &logo;.</para>

<sect1 id="first-steps">
<title
>Primeiros passos no &logo;: apresentamos a Tartaruga!</title>
<para
>Você já deve ter reparado que a tartaruga está no meio da área de desenho: você está agora prestes a aprender como controlá-la, usando os comandos no editor de código.</para>

<sect2 id="the-turtle-moves">
<title
>A Tartaruga se Move</title>
<para
>Vamos começar colocando a tartaruga para andar. A nossa tartaruga tem 3 tipos de movimentos: (1) pode ir para a frente e para trás, (2) pode virar à esquerda ou à direita e (3) poderá ir diretamente para uma posição da tela. Tente isto, por exemplo:</para>
<para>
<screen
>forward 100
turnleft 90 
</screen>
Digita ou copie e cole o código no editor e execute-o (usando o <link linkend="file-execute"
><menuchoice
><guimenu
>Arquivo</guimenu
><guimenuitem
>Executar Comandos</guimenuitem
></menuchoice
></link
>) para ver o resultado.</para>

<para
>Quando tiver digitado e executado os comandos acima no editor de código, você irá reparar em uma ou mais das seguintes coisas:</para>
<orderedlist>
<listitem
><para
>Que &mdash; depois de executar os comandos &mdash; a tartaruga vai mover-se, desenhar uma linha e depois dar um quarto de volta para a esquerda. Isto acontece porque você usou os comandos <link linkend="forward"
><userinput
>forward</userinput
></link
> e <link linkend="turnleft"
><userinput
>turnleft</userinput
></link
>.</para>
</listitem>
<listitem>
<para
>Que a cor do código mudou à medida que o foi digitando; este recurso chama-se <emphasis
>realce intuitivo</emphasis
> &mdash; os diferentes tipos de comandos são realçados de forma diferente. Isto torna a leitura de grandes blocos de código mais fácil.</para>
</listitem>
<listitem>
<para
>Que a tartaruga desenha uma linha preta fina.</para>
</listitem>
<listitem>
<para
>Talvez tenha obtido uma mensagem de erro. Isto poderá simplesmente significar duas coisas: você poderá ter cometido um erro ao copiar os comandos, ou você precisa de definir o idioma correto para os comandos de &logo; (o que você pode fazer isso escolhendo <menuchoice
><guimenu
>Configurações</guimenu
><guimenuitem
>Configurar o &kturtle;</guimenuitem
></menuchoice
> na seção <guilabel
>Idioma</guilabel
>).</para>
</listitem>
</orderedlist>

<para
>Você irá da mesma forma perceber que o <userinput
>forward 100</userinput
> mandou a tartaruga andar em frente, deixando uma linha, e que o <userinput
>turnleft 90</userinput
> disse à tartaruga para virar 90 <glossterm linkend="degrees"
>graus</glossterm
> à esquerda.</para>

<para
>Por favor, veja as seguintes referências para o manual para uma explicação completa dos comandos inseridos: <userinput
>forward</userinput
>, <userinput
>backward</userinput
>, <userinput
>turnleft</userinput
> e <userinput
>turnright</userinput
>.</para>
</sect2>

<sect2 id="more-examples">
<title
>Mais exemplos</title>
<para
>O primeiro exemplo foi muito simples, por isso vamos continuar!</para>

<para>
<!--translators: if it's not already there, you can copy/paste the translated code below and save it in arrow.logo in your examples folder: kde-i18n/language-code/data/kdeedu/kturtle/ -->
<screen
>canvassize 200,200
canvascolor 0,0,0
pencolor 255,0,0
penwidth 5
clear

go 20,20
direction 135

forward 200
turnleft 135
forward 100
turnleft 135
forward 141
turnleft 135
forward 100
turnleft 45

go 40, 100
</screen>
Mais uma vez, você deverá digitar ou copiar e colar o código para o editor ou abrir o arquivo <filename
>arrow.logo</filename
> na pasta <guimenu
>Abrir exemplos</guimenu
> e executá-lo (usando a opção <link linkend="file-execute"
><menuchoice
><guimenu
>Arquivo</guimenu
><guimenuitem
>Executar Comandos</guimenuitem
></menuchoice
></link
>) para ver o resultado. Nos próximos exemplos, iremos considerar que você já sabe a mecânica do assunto.</para>

<para
>Você já deve ter notado que este segundo exemplo usa muito mais código. Você deve ter visto também um conjunto de comandos novos. Aqui está uma breve explicação de todos os comandos novos:</para>

<para
>O <userinput
>canvassize 200,200</userinput
> configura a largura e a altura da área de desenho para 200 <glossterm linkend="pixels"
>pontos</glossterm
>. A largura e a altura são iguais em tamanho, o que significa que a área de desenho deverá ser agora um quadrado.</para>

<para
>O <userinput
>canvascolor 0,0,0</userinput
> deixa a área de desenho em preto. O <userinput
>0,0,0</userinput
> é uma <glossterm linkend="rgb"
>combinação RGB</glossterm
> onde todos os valores ficam iguais a <userinput
>0</userinput
>, o que corresponde a preto.</para>

<para
>O <userinput
>pencolor 255,0,0</userinput
> deixa a cor do traço em vermelho. O <userinput
>255,0,0</userinput
> é uma <glossterm linkend="rgb"
>combinação RGB</glossterm
> em que só o valor do 'vermelho' fica igual a <userinput
>255</userinput
> enquanto que os outros (verde e azul) ficam a <userinput
>0</userinput
>, o que resulta num tom claro de vermelho.</para>

<para
>Se não compreender os valores das cores, tente por favor ler o glossário sobre as <glossterm linkend="rgb"
>combinações RGB</glossterm
></para>

<para
>O <userinput
>penwidth 5</userinput
> configura a espessura (ou tamanho) do traço a <userinput
>5</userinput
> <glossterm linkend="pixels"
>pontos</glossterm
>. A partir de agora, todas as linhas que a tartaruga desenhar irão ter uma espessura de <userinput
>5</userinput
> pontos, até que se mude o <userinput
>penwidth</userinput
> para outra coisa qualquer.</para>

<para
>O <userinput
>clear</userinput
> limpa a área de desenho, e é tudo o que faz.</para>

<para
>O <userinput
>go 20,20</userinput
> manda a tartaruga ir para um determinado lugar da área de desenho. A contar do canto superior esquerdo, este lugar fica a 20 <glossterm linkend="pixels"
>pontos</glossterm
> a contar da esquerda e a 20 <glossterm linkend="pixels"
>pontos</glossterm
> da parte superior. Lembre-se que, ao usar o comando <userinput
>go</userinput
>, a tartaruga não irá desenhar uma linha.</para>

<para
>O <userinput
>direction 135</userinput
> define a direção da tartaruga. O <userinput
>turnleft</userinput
> e o <userinput
>turnright</userinput
> mudam o ângulo da tartaruga a partir da direção atual dela. O <userinput
>direction</userinput
> muda o ângulo da tartaruga a partir do zero e, como tal, não é relativo à posição anterior da tartaruga.</para>

<para
>Depois do comando de direção, segue-se um conjunto de comandos <userinput
>forward</userinput
> e <userinput
>turnleft</userinput
>. Estes comandos fazem, de fato, o desenho.</para>

<para
>Por fim, é usado outro comando <userinput
>go</userinput
> para mover a tartaruga para o lado.</para>

<para
>Certifique-se de seguir as referências. Elas explicam cada comando em mais detalhes.</para>


</sect2>
</sect1>



<!--        EXTRA SECTIONS CAN BE ADDED TO THE "GETTING STARTED"

<sect1 id="calculations">
<title
>Simple Calculations</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="using_variables">
<title
>Using Variables: creating 'number containers'</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="using_strings">
<title
>Using strings: creating 'text containers'</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="logic">
<title
>Logic: asking the computer simple questions</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="recursion">
<title
>Recursion: the Turtle is using itself</title>
<para>
Draw a maze for example
</para>
</sect1>
-->


</chapter>
<sect1 id="tool-scriptbuilder">
<title
>Der Skriptbaukasten</title>
<indexterm
><primary
>Hilfsmittel</primary>
<secondary
>Skriptbaukasten</secondary>
</indexterm>

<para
>KDE-Anwendungen können extern von einem anderen Programm von der Kommandozeile aus kontrolliert werden oder von einem Shell-Skript, das das Desktop COmmunication-Protokoll (<abbrev
>DCOP</abbrev
>) benutzt. KStars benutzt diese Funktionen, um wirklich komplexe Verhaltensweisen in Skripte zu integrieren und zu jeder Zeit aufrufen zu können. Das kann dafür genutzt werden, um zum Beispiel eine Demonstration für ein astronomisches Konzept in der Schule zu erstellen. </para>
<para
>Das Problem mit DCOP-Skripten ist, dass das Erstellen ein bisschen wie Programmieren ist und dass es ein entmutigende Aufgabe für Menschen sein kann, die damit keine Erfahrung haben. Das Hilfsmittel Skriptbaukasten bietet eine Oberfläche zum klicken und ziehen, um KStars-DCOP-Skripte zu erstellen und macht es dadurch sehr einfach, komplexe Skripte zu erstellen. </para>

<sect2 id="sb-intro">
<title
>Einführung in den Skriptbaukasten</title>

<para
>Bevor erklärt wird, wie Sie den Skriptbaukasten benutzen, gebe ich hier eine sehr einfache Einführung in alle Oberflächenkomponenten. Für weitere Informationen benutzen Sie die Funktion "Was ist das?". </para>

<screenshot>
<screeninfo
>Das Hilfsmittel "Skriptbaukasten" </screeninfo>
<mediaobject>
  <imageobject>
    <imagedata fileref="scriptbuilder.png" format="PNG"/>
  </imageobject>
  <textobject>
    <phrase
>Hilfsmittel "Skriptbaukasten"</phrase>
  </textobject>
</mediaobject>
</screenshot>

<para
>Der Skriptbaukasten wird im obigen Bildschirmfoto gezeigt. Auf der linken Seite sehen Sie das Feld <firstterm
>Aktuelles Skript</firstterm
>; mit der Liste der Befehle, die das aktuelle Skript umfasst. Das Feld auf der rechten Seite ist die <firstterm
>Funktionsauswahl</firstterm
>, sie zeigt eine Liste aller verfügbaren Skriptfunktionen an. Unter der Funktionsauswahl ist ein kleines Feld, das eine kurze Dokumentation über die Skriptfunktion anzeigt, die in der Funktionsauswahl ausgewählt ist. Das Feld unter dem aktuellen Skript ist das <firstterm
>Feld für Funktionsargumente</firstterm
>, wenn eine Funktion im Feld "Aktuelles Skript" ausgewählt ist, enthält dieses Feld Einträge, um die Argumente der hervorgehobenen Funktion zu bearbeiten. </para
><para
>Oben im Fenster ist eine Reihe von Knöpfen, um ein Skript insgesamt zu bearbeiten. Von links nach rechts gibt es: <guibutton
>Neues Skript</guibutton
>, <guibutton
>Skript öffnen</guibutton
>, <guibutton
>Skript speichern</guibutton
>, <guibutton
>Skript speichern unter ...</guibutton
> und <guibutton
>Skript testen</guibutton
>, was das aktuelle Skript im KStars-Fenster ausführt. Sie sollten das Skriptbaukasten-Fenster zur Seite schieben, bevor Sie diesen Knopf drücken, damit Sie die Ergebnisse sehen können. </para
><para
>In der Mitte des Fenster finden Sie eine Spalte mit Knöpfen, die die einzelnen Skriptfunktionen steuern. Von oben nach unten sind es: <guibutton
>Funktion hinzufügen</guibutton
>, <guibutton
>Funktion entfernen</guibutton
>, <guibutton
>Funktion kopieren</guibutton
>, <guibutton
>Nach oben verschieben</guibutton
> und <guibutton
>Nach unten verschieben</guibutton
>. <guibutton
>Funktion hinzufügen</guibutton
> fügt die aktuell ausgewählte Funktion in der Funktionsauswahl zu dem aktuellen Skript hinzu (Sie können die Funktion auch durch einen Doppelklick hinzufügen). Die übrigen Knöpfe bearbeiten die Funktion, die im aktuellen Skript ausgewählt ist. Sie entfernen sie, duplizieren sie oder ändern ihre Position im Skript. </para>
</sect2>

<sect2 id="sb-using">
<title
>Den Skriptbaukasten benutzen</title>
<para
>Um die Benutzung des Skriptbaukastens vorzustellen, präsentieren wir ein kleines Beispiel, in dem wir ein Skript erstellen, das den Mond verfolgt, während die Zeit beschleunigt abläuft. </para
><para
>Wenn wir den Mond verfolgen wollen, wir müssen die Anzeige darauf zentrieren. Die Funktion <firstterm
>lookToward</firstterm
> wird dazu benutzt. Wählen Sie diese Funktion in der Funktionsauswahl und beachten Sie die Beschreibung im Feld unter der Auswahl. Drücken Sie den Knopf <guibutton
>Funktion hinzufügen</guibutton
>, um diese Funktion in das Feld "aktuelles Skript" einzufügen. Das Feld für die Funktionsargumente wird nun ein Auswahlfeld namens <quote
>Richtung</quote
> haben. Das ist die Richtung, in die die Anzeige zeigen soll. Das Auswahlfeld enthält nur kardinale Kompasspunkte, nicht den Mond oder andere Objekte. Sie können entweder <quote
>Moon</quote
> (engl. für Mond) in das Feld manuell eingeben oder den Knopf <guibutton
>Objekt</guibutton
> drücken und das Fenster <guilabel
>Objekt suchen</guilabel
> benutzen, um den Mond aus der Liste der bekannten Objekte auszuwählen. Beachten Sie, dass als Standard bei der Zentrierung automatisch die Objektverfolgung angeschaltet wird, also muss die Funktion <firstterm
>setTracking</firstterm
> nicht nochmal benutzt werden. </para
><para
>Da jetzt die Verfolgung auf den Mond eingestellt ist, soll als nächstes der Zeitablauf beschleunigt werden. Benutzen Sie die Funktion <firstterm
>setClockScale</firstterm
> dafür. Fügen Sie sie dem Skript durch ein Doppelklick darauf in der Funktionsauswahl hinzu. Das Funktionsargumentefeld enthält ein Einstellfeld für den gewünschten Zeitschritt. Ändern Sie den Zeitschritt in 3 Stunden. </para
><para
>Nun haben wir die Anzeige auf den Mond gerichtet und die Uhr beschleunigt. Nun möchten wir, dass das Skript einfach eine Weile wartet, während die Anzeige die Spur des Mondes verfolgt. Fügen Sie die Funktion <firstterm
>waitFor</firstterm
> zum Skript hinzu und benutzen Sie das Feld "Funktionsargumente" um anzugeben, dass es 20 Sekunden warten soll, ehe der nächste Schritt ausgeführt wird. </para
><para
>Um das Ganze abzuschließen, lassen Sie uns den Zeitschritt auf den normalen Wert von einer Sekunde zurücksetzen. Fügen Sie eine weitere Funktion "setClockScale" hinzu und setzen Sie den Wert auf eine Sekunde. </para
><para
>Wir sind noch nicht ganz fertig. Wir sollten vielleicht sicherstellen, das die Ansicht auf äquatoriale Koordinaten geschaltet ist, bevor das Skript dem Mond Folgt. Wenn die Ansicht auf horizontale Koordinaten geschaltet ist, wird sich die Anzeige sehr schnell um große Winkel drehen, wenn der Mond auf- und untergeht. Das kann sehr verwirrend sein und wird vermieden, indem die Ansichtsoption <firstterm
>UseAltAz</firstterm
> auf <quote
>false</quote
> gesetzt wird. Um die Ansichtseinstellungen zu verändern, benutzen Sie die Funktion <firstterm
>changeViewOption</firstterm
>. Fügen Sie diese Funktion Ihrem Skript hinzu und schauen Sie in das Argumentefeld. Hier ist ein Auswahlfeld, das alle Anzeigeeinstellungen enthält, die von "changeViewOption" verändert werden können. Da wir wissen, dass wir die Einstellung "UseAltAz" benutzen, können wir sie einfach auswählen. Jedoch ist die Liste sehr lang und es gibt keine Erklärung für jeden Eintrag. Deshalb ist es vielleicht einfacher, mit dem Knopf <guibutton
>Baum durchforsten</guibutton
> ein Fenster mit einer Baumliste aller Anzeigeeinstellungen, geordnet nach Themen, zu öffnen. Zusätzlich hat jeder Eintrag eine kurze Erklärung über die Einstellung und den Datentyp des Einstellungswertes. Wir finden UseAltAz in der Kategorie <guilabel
>Himmelskarteneinstellungen</guilabel
>. Wählen Sie einfach den Eintrag und drücken Sie <guibutton
>Ok</guibutton
> und er wird im Feld "Funktionsargumente" ausgewählt. Zum Schluss setzen Sie den Wert auf <quote
>false</quote
> (falsch) oder <quote
>0</quote
>. </para
><para
>Ein weiterer Schritt: Das Ändern von UseAltAz am Ende des Skriptes hat keine Auswirkungen, da UseAltAz geändert werden muss, bevor andere Funktionen aufgerufen werden. Also wählen Sie diese Funktion in der Feld "Aktuelles Skript" und drücken solange den Knopf <guibutton
>Nach oben verschieben</guibutton
>, bis die Funktion an erster Stelle steht. </para
><para
>Nun da wir das erste Skript erstellt haben, sollten wir es speichern. Drücken Sie den Knopf <guibutton
>Skript speichern</guibutton
>. Das öffnet zuerst ein Fenster, in das Sie den Namen für das Skript und Ihren Namen als Autor eintragen können. Geben Sie <quote
>Verfolgung des Mondes</quote
> als Namen und Ihren Namen als Autor ein und drücken <guibutton
>OK</guibutton
>. Als Nächstes sehen Sie einen &kde;-Speichern-Dialog. Geben Sie einen Dateinamen für das Skript an und drücken <guibutton
>Ok</guibutton
>, um es zu speichern. Wenn Ihr Dateiname nicht mit <quote
>.stars</quote
> endet, wird diese Erweiterung wird automatisch angefügt. Wenn Sie neugierig sind, können Sie die Skriptdatei mit jedem Texteditor ansehen. </para
><para
>Nun haben wir ein komplettes Skript, wir können es auf verschieden Wegen starten. Von einer Kommandozeile können Sie einfach das Skript ausführen, während KStars läuft. Alternativ können Sie das Skript aus KStars mit dem Eintrag <guimenuitem
>Skript ausführen</guimenuitem
> aus dem Menü <guimenu
>Datei</guimenu
> starten. </para>
</sect2>

<sect2 id="sb-indi">
  <title
>Geräte-Kontrolle mit INDI</title>
  <para
>Ablaufplanung und Automation wird für alle <link linkend="what-is-indi"
> INDI</link
>-kompatiblen Gräte unterstützt. Sie können eine beliebige Zahl von Geräten koordinieren, um komplizierte Abläufe mit &kstars; <link linkend="sb-intro"
> Skriptbaukasten</link
> auszuführen. Dies erreichen Sie mit &kstars; INDI-DCOP- Schnittstelle, die verschiedene Arten von Funktionen für die Aufgaben zu Verfügung stellt. Es gibt fünf verschiedene Arten von INDI-DCOP-Funktionen. Im Folgenden finden Sie eine Übersicht der in &kstars; unterstützen Funktionen und deren Argumente. Lesen Sie unbedingt den Abschnitt <link linkend="indi-concepts"
>INDI-Konzepte</link
>, da sie in dieser Einführung angewendet werden.</para>
  <orderedlist>
    <listitem
><para
>Allgemeine Grätefunktionen: Funktionen, um Geräte zu verbinden und zu trennen &etc;.</para>
      <itemizedlist>
	<listitem
><para
><function
>startINDI (QString deviceName, bool useLocal)</function
> : Richtet einen INDI-Dienst entweder lokal oder als Server ein.</para
></listitem>
	<listitem
><para
><function
>shutdownINDI (QString deviceName)</function
> : Beendet den INDI-Dienst.</para
></listitem>
	<listitem
><para
><function
>switchINDI(QString deviceName, bool turnOn)</function
> : Verbindet zu einem INDI-Gerät oder entfernt diese Verbindung.</para
></listitem>
	<listitem
><para
><function
>setINDIPort(QString deviceName, QString port)</function
>: Stellt den Verbindungsport des Geräts ein.</para
></listitem>
	<listitem
><para
><function
>setINDIAction(QString deviceName, QString action)</function
> : Startet eine INDI Aktion. Die Aktion kann jedes beliebige <emphasis
>Element</emphasis
> einer <emphasis
>Schaltereigenschaft</emphasis
> sein.</para
></listitem>
	<listitem
><para
><function
>waitForINDIAction(QString deviceName, QString action)</function
> : Hält die Ausführung des Skripts an, bis die angegebene Aktion <emphasis
>Eigenschaft</emphasis
> mit erfolgreich beendet ist. </para
></listitem>
      </itemizedlist>
    </listitem>
    <listitem
><para
>Teleskop Funktionen: Funktionen, um die Bewegung und den Zustand von Teleskopen zu kontrollieren.</para>
      <itemizedlist>
	<listitem
><para
><function
>setINDIScopeAction(QString deviceName, QString action)</function
> : Stellt den Modus oder eine Aktion für das Teleskop. Mögliche Optionen sind SLEW, TRACK, SYNC, PARK, und ABORT.</para
></listitem>
	<listitem
><para
><function
>setINDITargetCoord(QString deviceName, double RA, double DEC)</function
> : Stellt die Zielkoordinaten des Teleskops auf <emphasis
>RA</emphasis
> und <emphasis
>DEC</emphasis
>.</para
></listitem>
	<listitem
><para
><function
>setINDITargetName(QString deviceName, QString objectName)</function
> : Stellt die Zielkoordinaten des Teleskops auf die Koordinaten von <emphasis
>objectName</emphasis
>. KStars sucht den Namen des Objekts in der Datenbank und gibt Rekt und Dekl zurück, wenn das Objekt gefunden wurde.</para
></listitem>
	<listitem
><para
><function
>setINDIGeoLocation(QString deviceName, double longitude, double latitude)</function
> : Stellt den Standort des Teleskops auf den angegebenen Längen- und Breitengrad. Der Längengrad wird von Greenwich in Großbritannien in östlicher Richtung gemessen. Während es jedoch üblich ist, negative Längengrade für die westliche Halbkugel zu verwenden, müssen die Längengrade für INDI zwischen 0 und 360 Grad eingegeben werden. Bei negativen Längengraden addieren Sie 360 Grad hinzu, um dien Eingabewert für INDI anzupassen. Zum Beispiel Calgary in Kanada hat in KStars die Koordinaten Längengrad : -114 04 58; Breitengrad : 51 02 58. Für INDI geben Sie als Längengrad 360 - 114.083 = 245,917 Grad an.</para
></listitem>
	<listitem
><para
><function
>setINDIUTC(QString ddeviceName, QString UTCDateTime)</function
> : Stellt das Teleskop auf UTC - Datum und Zeit im Format ISO 8601. Das Format ist YYYY-MM-DDTHH:MM:SS (z. B.. 2004-07-12T22:05:32).</para
></listitem>
      </itemizedlist>
    </listitem>
    <listitem
><para
>Kamera/CCD Funktionen: Funktionen zur Kontrolle der Eigenschaften von Kamera/CCD und deren Zustand.</para>
      <itemizedlist>
	<listitem
><para
><function
>setINDICCDTemp(QString deviceName, int temp)</function
> : Stellt die CCD-Chip Zieltemperatur in Grad Celsius.</para
></listitem>
	<listitem
><para
><function
>setINDIFrameType(QString deviceName, QString type)</function
> : Stellt den CCD-Rahmentyp. Mögliche Optionen sind FRAME_LIGHT, FRAME_BIAS, FRAME_DARK, und FRAME_FLAT.</para
></listitem>
	<listitem
><para
><function
>startINDIExposure(QString deviceName, int timeout)</function
> : Startet die Belichtung von CCD/Camera mit der durch <emphasis
>timeout</emphasis
> in Sekunden angegebenen Zeitdauer.</para
></listitem>
      </itemizedlist>
    </listitem
>    
   <listitem
><para
>Focussierer Funktionen: Funktionen, um die Bewegung und den Zustand von Focussierern zu kontrollieren.</para>
      <itemizedlist>
      <listitem
><para
><function
>setINDIFocusSpeed(QString deviceName, QString action)</function
> : Stellt die Geschwindigkeit des Focussierers. Mögliche Optionen sind FOCUS_HALT, FOCUS_SLOW, FOCUS_MEDIUM, und FOCUS_FAST.</para
></listitem>
      <listitem
><para
><function
>setINDIFocusTimeout(QString deviceName, int timeout)</function
> : Stellt die Dauer in Sekunden für alle nachfolgenden startINDIFocus-Operationen.</para
></listitem>
      <listitem
><para
><function
>startINDIFocus(QString deviceName, int focusDir)</function
> : Bewegt den Focussierer entweder einwärts (focusDir = 0) oder auswärts (focusDir = 1). Die Geschwindigkeit und  Dauer dieser Operation wird mit den Funktionen <function
>setINDIFocusSpeed()</function
> und <function
>setINDIFocusTimeout()</function
> eingestellt.</para
></listitem>
    </itemizedlist>
    </listitem>
   <listitem
><para
>Filter-Funktionen: Funktionen, um die Position von Filtern einzustellen.</para>
      <itemizedlist>
      <listitem
><para
><function
>setINDIFilterNum(QString deviceName, int filter_num)</function
> : Ändert die Filterposition auf <varname
>filter_num</varname
>. Symbolische Namen (Alias) für Filternummern können Sie im Dialog <guimenuitem
>INDI einrichten</guimenuitem
> aus dem Menü <guimenu
>Geräte</guimenu
> (z. B. Filter 1 = Rot, Filter 2 = Grün &etc;).</para
></listitem>
    </itemizedlist>
    </listitem>
    
  </orderedlist>
  
<para
>Beachten Sie, dass der Name des Gerätes das erste Argument in allen INDI-Funktionen ist. Dadurch können Sie verschiedene Befehle für unterschiedliche INDI-Geräte im gleichen Skript in beliebiger Reihenfolge benutzen. Im "Skriptbaukasten" finden Sie zwei Optionen für die Erstellung und Bearbeitung von INDI-Skripten:</para>
<itemizedlist>
  <listitem
><para
><option
>Fügen Sie "WaitForINDIAction" nach jeder INDI-Aktion hinzu</option
> : Wenn diese Option ausgewählt ist, wird im Skriptbaukasten automatisch <function
>waitForINDIAction()</function
> nach jeder erkannten Funktion hinzugefügt. Wenn Sie zum Beispiel die Funktion <function
>switchINDI()</function
> einfügen und diese Option ausgewählt ist, wird direkt anschließend "waitForINDIAction CONNECTION" in der Skriptdatei angefügt. Damit wartet das Skript nach <function
>switchINDI()</function
>, bis diese Funktion den Status OK zurückgibt (d. h. die Verbindung ist hergestellt). Es ist sehr wichtig zu wissen, dass im Skriptbaukasten nicht automatisch für allgemeine Aktionen, die mit der Funktion <function
>setINDIAction()</function
> eingegeben wurden, <function
>waitForINDIAction()</function
> hinzugefügt werden kann. Die Ursache liegt darin, dass KStars nicht automatisch die übergeordneten Eigenschaften allgemeiner Funktionen erkennen kann. Daher müssen Sie nach allgemeinen Aktionen manuell <function
>waitForINDIAction()</function
> eingeben, wenn das beabsichtigt ist.</para>
  </listitem>
  <listitem
><para
><option
>INDI-Gerätenamen wiederbenutzen</option
> : Ist diese Option angekreuzt, dann wird als Gerätename aller folgenden Funktionen automatisch der letzte Gerätename eingesetzt. Der letzte Gerätename wird immer dann neu gesetzt, wenn Sie die Funktion <function
>startINDI()</function
> zum aktuellen Skript hinzufügen. Wenn Sie ein Skript für mehreren Geräte schreiben, sollten Sie diese Option abschalten.</para>
  </listitem>
</itemizedlist>

<para
>Jetzt können Sie ein Demo-Skript schreiben, dass ein LX200 GPS Teleskop und zusätzlich eine Finger Lakes CCD-Kamera steuert. Diese Aufgabe ist einfach. Das Teleskop soll auf den Mars schwenken und ihn verfolgen, dann soll die Kamera drei Photos von 10 Sekunden Dauer im Abstand von 20 Sekunden aufnehmen.</para>
<important
><para
>Da es über die INDI-DCOP Schnittstelle keine direkte Rückmeldung über Fortschritt, Wert oder Status einer Geräteoperation und über Parameter (außer für <function
>waitForINDIAction()</function
>) gibt, ist Geräteautomation in KStars etwa ein Steuerungssystem mit offener Schleife. In so einem System gibt es normalerweise keine direkte Rückkopplung, um den Fortschritt des Systems zu messen und Fehler zu korrigieren. Daher müssen Sie Ihre Skripte zur Geräteansteuerung sorgfältig entwerfen. Vor der Anwendung sollten Sie alle Skripte gründlich überprüfen.</para
></important>

<screenshot>
  <screeninfo
>Das Hilfsmittel "Skriptbaukasten" </screeninfo>
  <mediaobject>
    <imageobject>
      <imagedata fileref="indiscript.png" format="PNG"/>
    </imageobject>
    <textobject>
      <phrase
>Hilfsmittel "Skriptbaukasten"</phrase>
    </textobject>
  </mediaobject>
</screenshot>

<para
>Das Demo-Skript wird im obigen Bildschirmphoto angezeigt. Beachten Sie, dass <option
>Append waitForINDIAction after any INDI action</option
> angekreuzt ist, <option
>Reuse INDI device name</option
> aber nicht. Zuerst müssen Sie die Funktion <function
>startINDI()</function
> einfügen. Das Gerät soll lokal betrieben werden, daher müssen Sie den Dienstemodus im Fenster für die Funktionsargumente nicht ändern. Geben Sie den Gerätenamen ein und beginnen Sie mit dem Teleskop "LX200 GPS". Wiederholen Sie die Eingabe für "FLI CCD". Anschließend folgt die Funktion <function
>waitFor()</function
>. Es ist allgemein erforderlich, die Funktion <function
>waitFor()</function
> direkt nach <function
>startINDI()</function
> anzuwenden, um die Ausführung des Skripts für 1-5 Sekunden anzuhalten. Damit wird sichergestellt, dass alle Eigenschaften aufgebaut und bereit für die Annahme von Befehlen sind. Es ist außerdem sinnvoll für die Steuerung entfernter Geräte, weil das Auffinden und der Aufbau von Eigenschaften einige Zeit beanspruchen kann. Mit der nächsten Funktion <function
>switchINDI()</function
> stellen Sie die Verbindung mit jedem Gerät her.</para>

<para
>Da <option
>Fügen Sie "WaitForINDIAction" nach jeder INDI-Aktion hinzu</option
> angekreuzt ist, müssen Sie nach <function
>switchINDI()</function
> nicht noch <function
>waitForINDIAction()</function
> hinzufügen, um sicherzustellen, dass das Skript nur nach erfolgreich aufgebauter Verbindung ausgeführt wird. Der Skriptbaukasten führt dies automatisch aus, wenn Sie das Skript speichern. Stellen Sie jetzt den Modus des Teleskops auf Verfolgung, klicken Sie auf die Funktion <function
>setINDIScopeAction()</function
> und wählen Sie TRACK. Beachten Sie, dass Sie den Teleskopmodus auf Verfolgung stellen müssen, <emphasis
>bevor</emphasis
> Sie die Koordinaten des Objektes zur Verfolgung eingeben. Die Funktion <function
>setINDIScopeAction()</function
> ist nicht zwingend nötig, da damit in diesem Beispiel nur die allgemeine Funktion <function
>setINDIAction()</function
> mit dem Schlüsselwort TRACK eingefügt wird. Der Vorteil bei der Verwendung von <function
>setINDIScopeAction()</function
> liegt darin, dass KStars automatisch <function
>waitForINDIAction()</function
> anfügen kann, falls erforderlich.Diese Möglichkeit gibt es nicht automatisch für allgemeine Aktionen, wie bereits vorher erklärt.</para>

<para
>Dann benutzen Sie die Funktion <function
>setINDITargetName()</function
> mit Mars als Parameter. Schließlich starten Sie die Bildaufnahme mit der Funktion <function
>startINDIExposure()</function
> und stellen die Wartezeit zwischen den Aufnahmen auf 20 Sekunden mit der Funktion <function
>waitFor()</function
> und dem Wert 20.</para>

<para
>Sie können jetzt Ihr Skript speichern, damit Sie es jederzeit wieder ausführen können. Das Skript sollte etwa folgendermaßen aussehen:</para>
<blockquote
><programlisting
>#!/bin/bash
    #KStars DCOP script: Demo Script
    #by Jasem Mutlaq
    #last modified: Thu Jan 6 2005 09:58:26
    #
    KSTARS=`dcopfind -a 'kstars*'`
    MAIN=KStarsInterface
    CLOCK=clock#1
    dcop $KSTARS $MAIN  startINDI "LX200 GPS" true
    dcop $KSTARS $MAIN  startINDI "FLI CCD" true
    dcop $KSTARS $MAIN  waitFor 3
    dcop $KSTARS $MAIN  switchINDI "LX200 GPS" true
    dcop $KSTARS $MAIN  waitForINDIAction "LX200 GPS" CONNECTION
    dcop $KSTARS $MAIN  switchINDI "FLI CCD" true
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" CONNECTION
    dcop $KSTARS $MAIN  setINDIScopeAction "LX200 GPS" TRACK
    dcop $KSTARS $MAIN  waitForINDIAction "LX200 GPS" ON_COORD_SET
    dcop $KSTARS $MAIN  setINDITargetName "LX200 GPS" Mars
    dcop $KSTARS $MAIN  waitForINDIAction "LX200 GPS" EQUATORIAL_EOD_COORD
    dcop $KSTARS $MAIN  startINDIExposure "FLI CCD" 10
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" EXPOSE_DURATION
    dcop $KSTARS $MAIN  waitFor 20
    dcop $KSTARS $MAIN  startINDIExposure "FLI CCD" 10
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" EXPOSE_DURATION
    dcop $KSTARS $MAIN  waitFor 20
    dcop $KSTARS $MAIN  startINDIExposure "FLI CCD" 10
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" EXPOSE_DURATION
</programlisting>
</blockquote>

<note>
<para
>In der INDI-Bibliothek finden Sie robuste Funktionen, mit denen Entwickler sehr komplexe Skripte erstellen können. Weiter Einzelheiten finden Sie im <ulink url="http://indi.sourceforge.net/manual/book1.html"
>Entwicklerhandbuch für INDI</ulink
>.</para>
</note>
</sect2>
</sect1>


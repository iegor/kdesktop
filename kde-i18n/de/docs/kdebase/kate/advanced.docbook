<chapter id="advanced-editing-tools">
<chapterinfo>
<authorgroup>
<author
>&Anders.Lund; &Anders.Lund.mail;</author>
<author
>&Dominik.Haumann; &Dominik.Haumann.mail;</author>
<othercredit role="translator"
> <firstname
>Thomas</firstname
> <surname
>Diehl</surname
> <affiliation
> <address
><email
>thd@kde.org</email
></address
> </affiliation
> <contrib
>GUI-Übersetzung</contrib
></othercredit
> <othercredit role="translator"
> <firstname
>Matthias</firstname
><surname
>Schulz</surname
> <affiliation
> <address
><email
>matthias.schulz@kdemail.net</email
></address
> </affiliation
> <contrib
>Deutsche Übersetzung</contrib
></othercredit
> 
</authorgroup>
</chapterinfo>
<title
>Weitentwickelte Editierwerkzeuge</title>

<sect1 id="advanced-editing-tools-comment">

<title
>Kommentar/Kommentar entfernen</title>

<para
>Die Befehle Kommentar und Kommentar entfernen im Menü <guimenu
>Bearbeiten</guimenu
> erlauben das Hinzufügen oder Entfernen von Kommentarzeichen zur Auswahl, oder der aktuellen Textzeile, wenn kein Text markiert wurde. Diese Funktionen stehen nur zur Verfügung, wenn das benutzte Textformat Kommentare unterstützt.</para>

<para
>Die Regeln für Kommentare werden in den Definitionen für die Syntax festgelegt, wenn Hervorhebungen für Syntax nicht benutzt werden, ist die Nutzung der Befehle also nicht möglich. </para>

<para
>Einige Formate nutzen Kommentarzeichen für einzelne Zeilen, manche nutzen Kommentarzeichen für mehrere Zeilen, manche beides. Wenn Kommentarzeichen für mehrere Zeilen nicht verfügbar sind, kann eine Auswahl nicht auskommentiert werden, deren letzte Zeile nicht vollständig in die Auswahl einbezogen ist.</para>

<para
>Wenn Kommentarzeichen für einzelne Zeilen definiert sind, werden diese bevorzugt eingesetzt, dies hilft, Probleme mit eingebetteten Kommentaren zu vermeiden.</para>

<para
>Wenn Sie Kommentarzeichen entfernen, sollte nur kommentierter Text ausgewählt sein. Wenn mehrzeilige Kommentare entfernt werden, werden Leerzeichen und Tabulatoren (whitespaces) außerhalb der Kommentarzeichen ignoriert.</para>

<para
><indexterm
><primary
>Kommentar</primary
></indexterm
> Um Kommentarzeichen einzufügen, wählen Sie im Menü <menuchoice
><guimenu
>Extras</guimenu
><guimenuitem
>Kommentar</guimenuitem
></menuchoice
> oder das Tastenkürzel, hier standardmäßig <keycombo action="simul"
>&Ctrl;<keycap
>D</keycap
></keycombo
>.</para>

<para
><indexterm
><primary
>Kommentar entfernen</primary
></indexterm
> Zum Entfernen von Kommentarzeichen wählen Sie im Menü <menuchoice
><guimenu
>Bearbeiten</guimenu
><guimenuitem
>Kommentar entfernen</guimenuitem
></menuchoice
> oder das Tastenkürzel, hier standardmäßig <keycombo action="simul"
>&Strg;&Umschalt;<keycap
>D</keycap
></keycombo
>.</para>

</sect1>

<sect1 id="advanced-editing-tools-commandline">
<title
>Die integrierte Befehlszeile im Editor</title>

<para
>&kate;s Editor hat eine interne Befehlszeile, von der aus Sie verschiedene Aktionen ausführen können. Die Befehlszeile ist ein Texteingabefeld am unteren Rand des Editorbereichs. Sie können diese einblenden, indem Sie im Menü <menuchoice
><guimenu
>Ansicht</guimenu
><guimenuitem
>Auf Befehlszeile umschalten</guimenuitem
></menuchoice
> wählen oder das Tastenkürzel verwenden (standardmäßig ist <keycombo action="simul"
><keycap
>F7</keycap
></keycombo
> eingestellt). Der Editor stellt einige Befehle bereit, die nachfolgend beschrieben werden. Außerdem können Erweiterungen (Plugins) weitere Befehle bereitstellen.</para>

<para
>Um einen Befehl auszuführen, geben Sie diesen in die Befehlszeile ein und drücken Sie Eingabetaste. Der Befehl gibt aus, ob die Ausführung erfolgreich war, eventuell wird noch eine Mitteilung ausgegeben. Wenn Sie den Befehl durch Drücken des Tastenkürzels <keycap
>F7</keycap
> eingegeben haben, wird die Befehlszeile nach einigen Sekunden ausgeblendet. Um die Mitteilung zu löschen und einen neuen Befehl einzugeben, drücken Sie das Tastenkürzel <keycap
>F7</keycap
> noch einmal.</para>

<para
>Die Befehlszeile hat ein eingebautes Hilfesystem, das durch den Befehl <command
>help</command
> aufgerufen wird. Der Befehl <command
>help list</command
> zeigt eine Liste aller verfügbaren Befehle an, Hilfe zu einem speziellen Befehl erhalten Sie durch Eingabe von <command
>help <replaceable
>befehl</replaceable
></command
>.</para>

<para
>Die Befehlszeile hat eine eingebauten Verlaufsspeicher, so dass Sie bereits eingegebene Befehle wiederverwenden können. Um aus den bisherigen Befehlen auszuwählen, benutzen Sie die Tasten <keycap
>Nach oben</keycap
> und <keycap
>Nach unten</keycap
>. Wenn bisherige Befehle angezeigt werden, dann ist automatisch der Teil des Befehls, der die Argumente enthält, markiert, so dass Sie die Argumente sofort überschreiben können.</para>

<sect2 id="advanced-editing-tools-commandline-commands">
<title
>Standardbefehle der Befehlszeile</title>

<sect3 id="advanced-editing-tools-commandline-commands-configure">
<title
>Befehle zum Einrichten des Editors</title>

<para
>Diese Befehle werden von der Editorkomponente bereitgestellt und gestatten das Einrichten des Editors für die aktuelle Ansicht des aktuellen Dokuments. Dies ist hilfreich, wenn Sie von den Standardeinstellungen abweichende Einstellungen, &zb; für Einrückungen benutzen wollen. </para>

<variablelist>
<title
>Typen der Argumente</title>

<varlistentry>
<term
>BOOLEAN</term>
<listitem
><para
>Dieser Typ wird mit Befehlen benutzt, die Dinge ein- und ausschalten. Zulässige Werte sind <userinput
>on</userinput
>, <userinput
>off</userinput
>, <userinput
>true</userinput
>, <userinput
>false</userinput
>, <userinput
>1</userinput
> oder <userinput
>0</userinput
>.</para
></listitem>
</varlistentry>

<varlistentry>
<term
>INTEGER</term>
<listitem
><para
>Eine ganze Zahl</para
></listitem>
</varlistentry>

<varlistentry>
<term
>STRING</term>
<listitem
><para
>Eine Zeichenkette</para
></listitem>
</varlistentry>

</variablelist>

<variablelist>

<varlistentry>
<term
><cmdsynopsis
><command
>set-tab-width</command
><arg
>INTEGER Weite</arg
></cmdsynopsis
></term>
<listitem
><para
>Setzt die Tabulatorweite auf <userinput
>Weite</userinput
></para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-indent-width</command
><arg
>INTEGER Weite</arg
></cmdsynopsis
></term>
<listitem
><para
>Setzt die Einrückungsweite auf <userinput
>Weite</userinput
>. Dieser Wert wird nur benutzt, wenn Sie Leerzeichen zum Einrücken verwenden.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-word-wrap-column</command
><arg
>INTEGER Weite</arg
></cmdsynopsis
></term>
<listitem
><para
>Setzt die Zeilenlänge für den harten Zeilenumbruch auf <userinput
>Weite</userinput
>. Dieser Wert wird nur benutzt, wenn Sie den automatischen Zeilenumbruch benutzen.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-icon-border</command
><arg
>BOOLEAN enable</arg
> </cmdsynopsis
></term>
<listitem
><para
>Schaltet die Anzeige des Symbolrandes ein und aus.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-folding-markers</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Schaltet die Markierungen für die Code-Ausblendung ein und aus.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-line-numbers</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Schaltet die Zeilennummerierung ein und aus.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-replace-tabs</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Wenn eingeschaltet, werden Tab's durch Leerzeichen ersetzt. </para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-remove-trailing-space</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Wenn eingeschaltet, werden Leerzeichen und andere Zwischenräume am Zeilenanfang entfernt, wenn der Cursor eine Zeile verlässt.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-show-tabs</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Wenn eingeschaltet, werden Tab's und vorangestellte Leerzeichen durch kleine Punkte dargestellt.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-indent-spaces</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Wenn eingeschaltet, werden Leerzeichen in der mit <option
>indent-width</option
> eingestellten Anzahl für jedes Einrückungsniveau benutzt und nicht Tab's.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-mixed-indent</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Kate benutzt eine Mischung aus Tab's und Leerzeichen zum Einrücken wenn diese OPtion eingeschaltet ist. Jedes Einrückungsniveau ist <option
>indent-width</option
> breit, es werden möglichst viele Leerzeichen durch Tab's ersetzt.</para>
<para
>Wenn dieser Befehl ausgeführt wird, wird außerdem das Einrücken mit Leerzeichen eingeschaltet und wenn die Einrückungsbreite noch nicht festgelegt ist, dann wird diese auf die Hälfte von <option
>tab-width</option
> für dieses Dokument zum Ausführungszeitpunkt gesetzt.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-word-wrap</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Schaltet dynamischen Zeilenumbruch ein oder aus.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-replace-tabs-save</command
><arg
>BOOLEAN enable </arg
></cmdsynopsis
></term>
<listitem
><para
>Wenn eingeschaltet, werden Tab's durch Leerzeichen ersetzt, wenn das Dokument gespeichert wird.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-remove-trailing-space-save</command
><arg
>BOOLEAN enable</arg
></cmdsynopsis
></term>
<listitem
><para
>Wenn eingeschaltet, werden am Anfang der Zeile stehende Leerzeichen oder Tab's entfernt, wenn das Dokument gespeichert wird.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-indent-mode</command
><arg
>name</arg
></cmdsynopsis
></term>
<listitem
><para
>Setzt den Einrückungsmodus auf <userinput
>name</userinput
>. Wenn <userinput
>name</userinput
> nicht angegeben ist oder ein ungültiger Name verwendet wurde, wird der Modus 'Kein(none)' gesetzt. Verfügbare Modes sind: 'cstyle', 'csands', 'xml', 'python', 'varindent' und 'none'.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>set-highlight</command
><arg
>highlight</arg
></cmdsynopsis
></term>
<listitem
><para
>Setzt den Hervorhebungsmodus für das aktuelle Dokument. Das Argument muss ein gültiger Name für einen Hervorhebungsmodus sein. Die gültigen Modi findet man unter <menuchoice
><guimenu
>Extras</guimenu
><guisubmenu
>Hervorhebungen</guisubmenu
></menuchoice
>.Dieser Befehl zeigt eine Liste der möglichen Argumente an, wenn die ersten Zeichen des Argumentes eingegeben wurden.</para
></listitem>
</varlistentry>

</variablelist>

</sect3>

<sect3 id="advanced-editing-tools-commandline-commands-edit">
<title
>Befehle zum Bearbeiten</title>

<para
>Diese Befehle bearbeiten und verändern das aktuelle Dokument.</para>

<variablelist>
<varlistentry>
<term
><cmdsynopsis
><command
>indent</command
></cmdsynopsis
></term>
<listitem
><para
>Rückt markierten Text oder die aktuelle Zeile ein.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>unindent</command
></cmdsynopsis
></term>
<listitem
><para
>Hebt die Einrückung für die markierten Zeilen oder die aktuelle Zeile auf.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>cleanindent</command
></cmdsynopsis
></term>
<listitem
><para
>Setzt die Einrückungen in den markierten Zeilen oder in der aktuellen Zeile in den Grundzustand zurück. Hierzu werden die Einstellungen für das aktuelle Dokument verwendet. </para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>comment</command
></cmdsynopsis
></term>
<listitem
><para
>Setzt Kommentarzeichen um die markierten Zeilen oder die aktuelle Zeile zu Kommentaren zu machen. Es wird das Kommentarzeichen aus der Hervorhebungsdefinition für das aktuelle Textformat benutzt.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>uncomment</command
></cmdsynopsis
></term>
<listitem
><para
>Entfernt Kommentarzeichen von den markierten Zeilen oder der aktuellen Zeile. Es wird das Kommentarzeichen aus der Hervorhebungsdefinition für das aktuelle Textformat benutzt.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>kill-line</command
></cmdsynopsis
></term>
<listitem
><para
>Löscht die aktuelle Zeile</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>replace</command
><arg
>suchtext</arg
><arg
>replacement</arg
></cmdsynopsis
></term>
<listitem
><para
>Ersetzt den mit <userinput
>suchtext</userinput
> übereinstimmenden Text durch <userinput
>replacement</userinput
>. Wenn Sie Leerzeichen oder Tabulatoren im <userinput
>suchtext</userinput
> verwenden wollen, dann müssen Sie sowohl <userinput
>suchtext</userinput
> als auch <userinput
>replacement</userinput
> in einfache oder doppelte Anführungszeichen einschließen. Wenn Worte nicht in Anführungszeichen eingeschlossen sind, wird das erste Wort als <userinput
>suchtext</userinput
> und der Rest als <userinput
>replacement</userinput
> benutzt. Wenn <userinput
>replacement</userinput
> nicht angegeben ist, dann wird jedes Auftreten von <userinput
>suchtext</userinput
> gelöscht.</para>
<para
>Sie können bestimmte Einstellungen für die Suche vornehmen, indem Sie einen Doppelpunkt, gefolgt von einem oder mehreren Buchstaben - die die Einstellungen enthalten - anfügen. Die Form der Eingabe ist dann:  <userinput
>replace:options suchtext replacement</userinput
>. Folgende Einstellungen sind verfügbar: <variablelist>

<varlistentry>
<term
><userinput
>b</userinput
></term>
<listitem
><para
>Rückwärts suchen.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>c</userinput
></term>
<listitem
><para
>Suchen ab Cursorposition.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>e</userinput
></term>
<listitem
><para
>Suchen nur in markiertem Text.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>r</userinput
></term>
<listitem
><para
>Suche nach einem regulären Ausdruck. Wenn diese Einstellung verwendet wird, können Sie <userinput
>\N</userinput
> im replacement string verwenden, die Anzahl, wie oft der Suchtext gefunden wurde, wird dann in den replacement string eingefügt.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>s</userinput
></term>
<listitem
><para
>Suche unter Berücksichtigung von Groß- und Kleinschreibung.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>p</userinput
></term>
<listitem
><para
>Nachfragen vor Ersetzen des nächsten Auftretens.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>w</userinput
></term>
<listitem
><para
>Nur ganze Wörter erfüllen die Suchbedingung.</para
></listitem>
</varlistentry>

</variablelist>

</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>date</command
><arg
>format</arg
></cmdsynopsis
></term>
<listitem
><para
>Setzt das aktuelle Datum und die aktuelle Uhrzeit im durch <userinput
>format</userinput
> eingestellten Format ein. Wenn kein Format eingestellt wurde, wird das Format <quote
>yyyy-MM-dd hh:mm:ss</quote
> als Standard benutzt. Die folgenden Übersetzungen werden vorgenommen, wenn <userinput
>format</userinput
> ausgewertet wird: <informaltable
> <tgroup cols="2"
> <tbody>
<row
><entry
><literal
>d</literal
></entry
><entry
>Tag als Ziffer ohne führende Null (1-31).</entry
></row>
<row
><entry
><literal
>dd</literal
></entry
><entry
>Tag als Ziffer mit führender Null (01-31).</entry
></row>
<row
><entry
><literal
>ddd</literal
></entry
><entry
>Tag als abgekürzter Name in Landessprache (&zb; 'Mon'..'Son').</entry
></row>
<row
><entry
><literal
>dddd</literal
></entry
><entry
>Tag als langer Name in Landessprache (&zb; 'Montag'..'Sonntag').</entry
></row>
<row
><entry
><literal
>M</literal
></entry
><entry
>Monat als Ziffer ohne führende Null (1-12).</entry
></row>
<row
><entry
><literal
>MM</literal
></entry
><entry
>Monat als Ziffer mit führender Null (01-12).</entry
></row>
<row
><entry
><literal
>MMM</literal
></entry
><entry
>Monat als abgekürzter Name in Landessprache (&zb;'Jan'..'Dez').</entry
></row>
<row
><entry
><literal
>yy</literal
></entry
><entry
>Das Jahr als zweistellige Ziffer (00-99).</entry
></row>
<row
><entry
><literal
>yyyy</literal
></entry
><entry
>Das Jahr als vierstellige Ziffer (1752-8000).</entry
></row>
<row
><entry
><literal
>h</literal
></entry
><entry
>Stunde ohne führende Null (0..23 oder 1..12 wenn AM/PM verwendet wird).</entry
></row>
<row
><entry
><literal
>hh</literal
></entry
><entry
>Stunde mit führender Null (00..23 oder 00..12 wenn AM/PM verwendet wird).</entry
></row>
<row
><entry
><literal
>m</literal
></entry
><entry
>Minute ohne führende Null (0.59).</entry
></row>
<row
><entry
><literal
>mm</literal
></entry
><entry
>Minute mit führender Null (00..59).</entry
></row>
<row
><entry
><literal
>s</literal
></entry
><entry
>Sekunde ohne führende Null (0.59).</entry
></row>
<row
><entry
><literal
>ss</literal
></entry
><entry
>Sekunde mit führender Null (00.59).</entry
></row>
<row
><entry
><literal
>z</literal
></entry
><entry
>Millisekunden ohne führende Null (0..999).</entry
></row>
<row
><entry
><literal
>zzz</literal
></entry
><entry
>Millisekunden mit führender Null (000..999).</entry
></row>
<row
><entry
><literal
>AP</literal
></entry
><entry
>Benutze die Anzeige mit AM/PM AP wird entweder von "AM" oder "PM" ersetzt.</entry
></row>
<row
><entry
><literal
>ap</literal
></entry
><entry
>Benutze die Anzeige mit am/pm ap wird durch "am" oder "pm" ersetzt.</entry
></row>

</tbody>
</tgroup>
</informaltable>

</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>char</command
><arg
>identifier</arg
></cmdsynopsis
></term>
<listitem>
<para
>Dieser Befehl erlaubt das Einsetzen von Zeichen in Text durch die Eingabe Ihrer Kodierung in dezimaler, oktaler oder hexadezimaler Form. Rufen Sie die Befehlszeile auf, schreiben Sie in das Eingabefeld das Wort <userinput
>char:[nummer]</userinput
> und klicken Sie auf <guibutton
>OK</guibutton
>.</para>

<example>
<title
>Beispiele zu <command
>char</command
></title>

<para
>Eingabe: <userinput
>char:234</userinput
></para>
<para
>Ausgabe: <computeroutput
>&#234;</computeroutput
></para>
<para
>Eingabe: <userinput
>char:0x1234</userinput
></para>
<para
>Ausgabe: <computeroutput
>&#x1234;</computeroutput
></para>
</example>

</listitem>
</varlistentry>

<varlistentry>
<term>
<indexterm
><primary
>Ersetzen, sed-Stil</primary>
<secondary
>Suchen, sed-Stil</secondary
></indexterm>
<command
>s///[ig]</command
> <command
>%s///[ig]</command
></term>

<listitem>
<para
>Dieser Befehl führt Suchen/Ersetzen auf der aktuellen Zeile oder in der gesamten Datei aus (<command
>%s///</command
>).</para>

<para
>Kurz gesagt, der Text wird nach dem <emphasis
>Suchtext</emphasis
>, dem regulären Ausdruck zwischen dem ersten und dem zweiten Schrägstrich, durchsucht und wenn der <emphasis
>Suchtext</emphasis
> gefunden wurde, wird der übereinstimmende Teil des Textes durch den Ausdruck zwischen dem mittleren und dem hinterem Schrägstrich ersetzt. Runde Klammern im <emphasis
>Suchtext</emphasis
> erzeugen <emphasis
>Referenzen</emphasis
>, die dann später dazu benutzt werden, die Zeichenketten wiederzuverwenden. Diese Referenzen werden wie folgt aufgerufen: <userinput
>\1</userinput
> für die erste Referenz, <userinput
>\2</userinput
> für die zweite und so weiter.</para>

<para
>Um nach einem Sonderzeichen, <literal
>(</literal
> oder <literal
>)</literal
>, zu suchen, müssen Sie dieses durch einen Rückwärtsschrägstrich kenntlich machen. <userinput
>\(\)</userinput
></para>

<para
>Wenn Sie ein <userinput
>i</userinput
> an das Ende des Ausdruckes anhängen, wird beim Suchen nicht nach Groß- und Kleinbuchstaben unterschieden. Das Anhängen eines <userinput
>g</userinput
> legt fest, dass alle Vorkommen des Suchtextes ersetzt werden, normalerweise wird nur das erste Vorkommen ersetzt.</para>

<example>

<title
>Ersetzen von Text in der aktuellen Zeile</title>

<para
>Ihr lieber Computer verweigerte gerade die Ausführung eines Programms, mit der Bemerkung, dass die Klasse <classname
>myClass</classname
>, die in der Zeile 3902 im Quelltext verwendet wird, nicht definiert ist.</para>

<para
>&quot;Natürlich!&quot;, denken Sie, das muss <classname
>MyClass</classname
> heißen. Sie gehen zur Zeile 3092, rufen den Bearbeitungsbefehl auf, geben <userinput
>s/myclass/MyClass/i</userinput
> ein und klicken auf <guibutton
>OK</guibutton
>, Speichern die Datei und kompilieren &ndash; ohne Fehlermeldungen.</para>

</example>

<example>
<title
>Ersetzen von Text in der gesamten Datei</title>

<para
>Stellen Sie sich vor, Sie hätten eine Datei, in der eine <quote
>Miss Jensen</quote
> einige Male erwähnt wird. Jemand kommt zur Tür herein und erzählt Ihnen, dass sie gerade <quote
>Mr Jones</quote
> geheiratet hat. Sie stehen nun vor der Aufgabe, jedes <quote
>Miss Jensen</quote
> durch <quote
>Ms Jones</quote
> zu ersetzen.</para>

<para
>Rufen Sie die Befehlszeile auf, geben Sie <userinput
>%s/Miss Jensen/Ms Jones/</userinput
> ein drücken Sie die Eingabetaste - fertig.</para>

</example>

<example>
<title
>Ein etwas komplizierteres Beispiel</title>

<para
>Dieses Beispiel benutzt <emphasis
>Referenzen</emphasis
> und auch eine <emphasis
>Wortklasse</emphasis
> (wenn Sie nicht wissen, was das bedeutet, sehen Sie bitte in der unten angegebenen Dokumentation nach).</para>

<para
>Stellen Sie sich vor, Sie hätten folgende Zeile: <programlisting
>void MyClass::DoStringOps( String      &amp;foo, String &amp;bar String *p, int  &amp;a, int &amp;b )</programlisting>
</para>
<para
>Sie erkennen, dass dies nicht gut lesbar ist und entscheiden, das Schlüsselwort <constant
>const</constant
> für alle <quote
>address of</quote
>-Argumente zu verwenden (diese sind durch den vorangestellten Operator &amp; gekennzeichnet). Außerdem wollen Sie die Zwischenräume vereinfachen, so dass nur noch ein Leerzeichen zwischen den Wörtern steht.</para>

<para
>Rufen Sie den Bearbeitungsbefehl auf, geben Sie <userinput
>s/\s+(\w+)\s+(&amp;)/ const \1 \2/g</userinput
> und klicken Sie auf <guibutton
>OK</guibutton
>. Das <userinput
>g</userinput
> am Ende des regulären Ausdrucks bewirkt, dass der reguläre Ausdruck jedesmal neu kompiliert wird, um die <emphasis
>Referenz</emphasis
> zu sichern.</para>

<para
>Ausgabe: <computeroutput
>void MyClass::DoStringOps( const String &amp;foo, const String &amp;bar String *p, const int &amp;a, const int &amp;b )</computeroutput
></para>

<para
>Erledigt! Was passierte hier? Es wurde nach Leerzeichen (<literal
>\s+</literal
>) gefolgt von einem oder mehreren alphanumerischen Zeichen (<literal
>\w+</literal
>) gefolgt von einem oder mehreren Leerzeichen (<literal
>\s+</literal
>) gefolgt von einem Ampersand (&amp;) gesucht und dabei der alphanumerische Abschnitt und das Ampersand (&amp;) gesichert, um diese beim Ersetzen wiederzuverwenden. Dann haben wir den übereinstimmenden Teil der Zeile ersetzt durch ein Leerzeichen gefolgt von <quote
>const</quote
> gefolgt von einem Leerzeichen gefolgt vom gesicherten Abschnitt (<literal
>\1</literal
>) gefolgt von einem Leerzeichen gefolgt vom gesicherten Ampersand (&amp;) (<literal
>\2</literal
>).</para>

<para
>In einigen Fällen war war der gesicherte Abschnitt <quote
>String</quote
>, in einigen <quote
>int</quote
>, so dass das Benutzen der Wortklasse <literal
>\w</literal
> und des <literal
>+</literal
>-Zeichens zum Angeben von <quote
>ein oder mehrere</quote
> sich als wertvoll erwies.</para>

</example>

</listitem>

</varlistentry>

</variablelist>

</sect3>

<sect3 id="advanced-editing-tools-commandline-commands-navigation">
<title
>Befehle zur Bewegung im Dokument</title>

<variablelist>

<varlistentry>
<term
><cmdsynopsis
><command
>goto</command
><arg
>INT line</arg
></cmdsynopsis
></term>
<listitem
><para
>Dieser Befehl setzt den Cursor auf die angegebene Zeile.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>find</command
><arg
>Suchtext</arg
></cmdsynopsis
></term>
<listitem
><para
>Dieser Befehl setzt den Cursor auf das erste Auftreten des <userinput
>Suchtext</userinput
> entsprechend der Einstellungen. Weitere Fundstellen werden durch <menuchoice
><guimenu
>Bearbeiten</guimenu
> <guimenuitem
>Weitersuchen</guimenuitem
></menuchoice
> oder Drücken des Tastenkürzels (Standard ist  <keycap
>F3</keycap
>) gefunden.</para>
<para
>Der Befehl <userinput
>find</userinput
> kann durch das Anhängen eines Doppelpunktes und eines oder mehrerer Buchstaben in der Form <userinput
>find:options pattern</userinput
> ergänzt werden. Die folgenden Einstellungen sind verfügbar: <variablelist>

<varlistentry>
<term
><userinput
>b</userinput
></term>
<listitem
><para
>Rückwärts suchen.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>c</userinput
></term>
<listitem
><para
>Suchen ab Cursorposition.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>e</userinput
></term>
<listitem
><para
>Suchen nur in markiertem Text.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>r</userinput
></term>
<listitem
><para
>Suche nach einem regulären Ausdruck. Wenn diese Einstellung verwendet wird, können Sie <userinput
>\N</userinput
> im replacement string verwenden, die Anzahl, wie oft der Suchtext gefunden wurde, wird dann in den replacement string eingefügt.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>s</userinput
></term>
<listitem
><para
>Suche unter Berücksichtigung von Groß- und Kleinschreibung.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>w</userinput
></term>
<listitem
><para
>Nur ganze Wörter erfüllen die Suchbedingung.</para
></listitem>
</varlistentry>

</variablelist>

</para>

</listitem>

</varlistentry>

<varlistentry>
<term
><cmdsynopsis
><command
>ifind</command
><arg
>suchtext</arg
></cmdsynopsis
></term>
<listitem
><para
>Dieser Befehl sucht <quote
>schon beim Eingeben</quote
> nach dem Suchtext. Sie können auch hier die Suche durch Anhängen eines Doppelpunktes und eines oder mehrerer Buchstaben in ihrem Verhalten anpassen. Die Eingabe muss dann in der Form: <userinput
>ifind:options suchtext</userinput
> erfolgen. Die folgenden Einstellungen stehen zur Verfügung: <variablelist>
<varlistentry>
<term
><userinput
>b</userinput
></term>
<listitem
><para
>Rückwärts suchen.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>r</userinput
></term>
<listitem
><para
>Suche nach einem regulären Ausdruck.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>s</userinput
></term>
<listitem
><para
>Suche unter Berücksichtigung von Groß- und Kleinschreibung.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>c</userinput
></term>
<listitem
><para
>Suchen ab Cursorposition.</para
></listitem>
</varlistentry>

</variablelist>
</para
></listitem>
</varlistentry>

</variablelist>

</sect3>

</sect2>

</sect1>

<sect1 id="advanced-editing-tools-code-folding">
<title
>Benutzen von Code-Ausblendung</title>

<para
>Code-Ausblendung dient zum Verstecken von Teilen des Dokuments im Editor, so dass große Dokumente einfacher zu lesen sind. In &kate; werden die ausblendbaren Abschnitte unter Zugrundelegung der Hervorhebungsregeln ermittelt und demzufolge sind Code-Ausblendungen nur in manchen Formaten verfügbar. Dies sind besonders Quelltexte in Programmiersprachen, XML und Ähnliches. Die meisten Hervorhebungsregeln, die Code-Ausblendungen bereitstellen, lassen auch die manuelle Festlegung von ausblendbaren Abschnitten zu, üblicherweise werden dazu die Schlüsselwörter <userinput
>BEGIN</userinput
> und <userinput
>END</userinput
> benutzt.</para>

<para
>Um die Funktion Code-Ausblendung zu benutzen, wählen Sie im Menü <menuchoice
><guimenu
>Ansicht</guimenu
><guimenuitem
>Markierungen für Code-Ausblendungen anzeigen</guimenuitem
></menuchoice
>. Es wird dann am linken Rand des Editorfensters ein grauer Rand eingeblendet, der eine grafische Darstellung der ausblendbaren Abschnitte enthält. In diesen Markierungen sind Symbole enthalten, die die möglichen Operationen anzeigen. Wenn zum Beispiel ein - angezeigt wird, kann dieser Abschnitt ausgeblendet werden, ein + dagegen heisst, dass hier ein Abschnitt ausgeblendet wurde. Dieser kann durch Klicken auf das +-Zeichen eingeblendet werden.</para>

<para
>Vier Befehle sind im Menü enthalten, die die Code-Ausblendung beeinflussen, sehen Sie in der <link linkend="view-code-folding"
>Menü-Dokumentation</link
> für weitere Einzelheiten nach. </para>

<para
>Wenn Sie keine Code-Ausblendung benutzen wollen, dann können Sie die Funktion <guilabel
>Markierung für Code-Ausblendungen anzeigen, falls vorhanden</guilabel
> auf der Seite <link linkend="config-dialog-editor-appearance"
>Erscheinungsbild in den Einstellungen</link
> von &kate; komplett ausschalten.</para>

</sect1>

<sect1 id="advanced-editing-tools-scripting">

<title
>Scripting mit Javascript in der Editorkomponente</title>

<sect2 id="advanced-editing-tools-scripting-introduction">

<title
>Einführung</title>

<para
>Beginnend mit Version 2.5 unterstützt der Editor von &kate; das Scripting mit ECMA-Scripten, auch als JavaScript bekannt.</para>

<para
>Scripts können nur durch die <link linkend="advanced-editing-tools-commandline"
>eingebaute Befehlszeile</link
> benutzt werden. Folgende Voraussetzungen müssen erfüllt sein: das Script muss sich in einem Ordner befinden, in dem &kate; es finden kann, zusammen mit der eventuell vorhandenen .desktop-Datei, die die Eigenschaften definiert. Die gültigen Ordner sind mit <filename
>katepart/scripts</filename
> in den &kde; Datenordnern bezeichnet. Sie können herausfinden, welche Ordner dies sind, indem Sie den Befehl <command
>kde-config <option
>--path</option
> <parameter
>data</parameter
></command
> eingeben. Normalerweise existiert mindestens ein Systemordner und ein  persönlicher Datenordner. Scripts, die sich im Systemordner befinden, sind für alle Nutzer verfügbar, die im Persönlichen Ordner nur für den Eigentümer des Ordners.</para>

<note
><para
>Diese Funktionen sind noch im experimentellen Stadium und werden sich sicher während der Weiterentwicklung in der Zukunft noch ändern.</para>
<para
>Wir wissen, dass es Sie stört, dass Sie Ihre Scripts nicht zum Menü hinzufügen können und dass Sie den Scripts keine Kurzbefehle zuordnen können. Dies wird sicher in der Zukunft möglich sein.</para>
<para
>Es ist außerdem noch nicht möglich, den Scripten Argumente zu übergeben. Auch diese Funktion wird sicher in der Zukunft hinzugefügt werden.</para>
</note>

</sect2>

<sect2 id="advanced-editing-tools-scripting-reference">

<title
>Die Kate JavaScript API</title>

<para
>Hier wird der gesamte Befehlssatz von Funktionen und Eigenschaften aufgelistet, die in den <type
>document</type
> und <type
>view</type
>-Objekten verfügbar sind. Zusätzlich können Sie natürlich alle Standardobjekte wie <type
>Math</type
>, <type
>String</type
> <type
>Regex</type
> und so weiter benutzen.</para>

<para
>Wenn ein Script läuft, ist das Objekt <classname
>document</classname
> das aktuelle Dokument und das Objekt <classname
>view</classname
> ist die aktuelle Ansicht.</para>

<note
><para
>Die Argumenttypen sind derzeit in JavaScript nicht benutzt, diese dienen nur dazu, deutlich zu machen, welche Art Wert die Funktionen erwarten.</para
></note>

<variablelist id="advanced-editing-tools-scripting-global">
<title
>Globale Funktionen</title>
<varlistentry>
<term
><function
>debug( <parameter
><replaceable
>string</replaceable
></parameter
>) [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>string</parameter
> Die auszugebende Zeichenkette</para>
</listitem>
</itemizedlist>
<para
>Gibt die Zeichenkette auf die Standardausgabe <acronym
>STDERR</acronym
> unter Benutzung der Funktion <function
>kdDebug()</function
> aus. Es wird ein besonderer Bereich für die Ausgabe benutzt, die den Vorspann <computeroutput
>Kate (KJS Scripts):</computeroutput
> erhält. </para>
</listitem>
</varlistentry>
</variablelist>

<variablelist id="advanced-editing-tools-scripting-document">
<title
>Die <classname
>document</classname
>-API</title>

<varlistentry>
<term
><function
>document.attribute( <parameter
><replaceable
>line</replaceable
> </parameter
>, <parameter
><replaceable
>column</replaceable
></parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>uint line</parameter
> Die Zeilennummer der Position, deren Eigenschaften gefunden werden sollen.</para
></listitem>
<listitem
><para
><parameter
>uint column</parameter
> Die Spaltennummer der Position, deren Eigenschaften gefunden werden sollen.</para
></listitem>
</itemizedlist>
<para
>Gibt die numerische ID der Eigenschaft des Textes an der Position [<parameter
>line</parameter
>,<parameter
>column</parameter
>] zurück. Die Eigenschaft enthält das Erscheinungsbild oder den Stil des Textes und wird auch dazu benutzt, die Hervorhebungssyntax für einen bestimmten Teil des Textes in gemischten Formaten wie HTML oder PHP zu berechnen.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.canBreakAt( <parameter
>Char c</parameter
>, <parameter
>uint attribute</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>c</parameter
> Das zu testende Zeichen</para
></listitem>
<listitem
><para
><parameter
>attribute</parameter
> Die Eigenschaften an der Position des <parameter
>c</parameter
>.</para
></listitem>
</itemizedlist>
<para
>Gibt zurück, ob die Zeile am Zeichen c mit der Eigenschaft <parameter
>attribute</parameter
> umgebrochen werden darf. Das Ergebnis ergibt sich aus der Abfrage, für welche Zeichen die Hervorhebungseigenschaft das Umbrechen zuläßt.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.canComment( <parameter
>uint start_attribute</parameter
>, <parameter
>uint end_attribute</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>start_attribute</parameter
> Die Eigenschaft am Beginn eines Bereiches, die diesen als Kommentar kennzeichnet.</para
></listitem>
<listitem
><para
><parameter
>end_attribute</parameter
> Die Eigenschaft am Ende eines Bereiches, die diesen als Kommentar kennzeichnet.</para
></listitem>
</itemizedlist>
<para
>Gibt zurück, ob die Anfangseigenschaft (start_attribute) und die Endeigenschaft (end_attribute) zum gleichen Hervorhebungssystem gehören. Wenn das der Fall ist, dann ist das in Ordnung. </para>
<example>
<title
>Benutzen von canComment</title>
<programlisting
>if ( document.canComment( document.attribute(1,0), document.attribute(5,0) ) ) {
    // 1,0 and 5,0 belongs to the same syntax highlighting system
}
</programlisting>
</example>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.clear(); [function]</function
></term>
<listitem
><para
>Löscht den Inhalt des aktuellen Dokuments.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.commentStart( <parameter
>uint attribute</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>attribute</parameter
> Die Eigenschaft des Textes, für den die Zeichenkette für commentStart abgefragt werden soll.</para
></listitem>
</itemizedlist>
<para
>Gibt die Zeichenkette zurück, die den Anfang eines mehrzeiligen Kommentars kennzeichnet, oder eine leere Zeichenkette, falls mehrzeilige Kommentare im Format für diesen Text nicht unterstützt werden.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.commentMarker( <parameter
>uint attribute</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>attribute</parameter
> Die Eigenschaft des Textes, für den die Zeichenkette für commentMarker abgefragt werden soll.</para
></listitem>
</itemizedlist>
<para
>Gibt die Zeichenkette zurück, die den Rest einer Zeile als Kommentar kennzeichnet, oder eine leere Zeichenkette, falls einzeilige Kommentare im Format für diesen Text nicht unterstützt werden.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.commentEnd( <parameter
>uint attribute</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>attribute</parameter
> Die Eigenschaft des Textes, für den die Zeichenkette für commentEnd abgefragt werden soll.</para
></listitem>
</itemizedlist>
<para
>Gibt die Zeichenkette zurück, die das Ende eines mehrzeiligen Kommentars kennzeichnet, oder eine leere Zeichenkette, falls mehrzeilige Kommentare im Format für diesen Text nicht unterstützt werden.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.editBegin(); [function]</function
></term>
<listitem>
<para
>Beginnt eine Editiergruppe. Alle Aktionen, die bis zum Aufruf von editEnd() werden zu einer Rückgängig-Aktion zusammengefasst.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.editEnd(); [function]</function
></term>
<listitem>
<para
>Beendet eine Editiergruppe.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.highlightMode; [property:read only]</function
></term>
<listitem>
<para
>Der Name des für das Dokument benutzten Hervorhebungsmodus, wie zum Beispiel JavaScript oder C++. Wenn kein Hervorhebungsmodus gesetzt ist, wird <literal
>None</literal
> zurückgegeben. Beachten Sie, dass Sie den englischen Namen, benutzen müssen, wenn der übersetzte Name anders als der englische ist.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.indentMode; [property:read only]</function
></term>
<listitem>
<para
>Der Name des Einrückungsmodus, wie zum Beispiel <literal
>normal</literal
> oder <literal
>cstyle</literal
>. Beachten Sie, dass der Wert <literal
>none</literal
> ist, wenn kein Einrückungsmodus gesetzt wurde. </para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.indentWidth; [property:read only]</function
></term>
<listitem>
<para
>Setzt die Einrückungsweite auf für das Dokument. Dieser Wert wird nur benutzt, wenn Sie Leerzeichen zum Einrücken verwenden.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.insertLine( <parameter
>uint line</parameter
>, <parameter
>string text</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>line</parameter
> Zeilennummer des Dokuments</para>
</listitem>
<listitem
><para
><parameter
>text</parameter
> einzusetzender Text</para
></listitem>
</itemizedlist>
<para
>Fügt eine neue Zeile mit dem Text <parameter
>text</parameter
> in die Zeile <parameter
>line</parameter
> ein.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.insertText( <parameter
>uint line</parameter
>, <parameter
>uint column</parameter
>, <parameter
>string text</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>line</parameter
> Zeilennummer</para
></listitem>
<listitem
><para
><parameter
>column</parameter
> Spaltennummer</para
></listitem>
<listitem
><para
><parameter
>text</parameter
> einzusetzender Text</para
></listitem>
</itemizedlist>
<para
>Fügt den Text <parameter
>text</parameter
> in die Zeile <parameter
>line</parameter
> und Spalte <parameter
>column</parameter
> ein.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>document.length(); [function]</term>
<listitem>
<para
>Gibt die Größe des Dokumentes in Bytes zurück.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.lines(); [function]</function
></term>
<listitem>
<para
>Gibt die Zeilenanzahl des Dokumentes zurück.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>document.mixedIndent; [property:read only]</term>
<listitem>
<para
>Eine Boolescher Wert, der angibt, ob für das Dokument der gemischte Modus im Emacs-Stil bei der Einrückung mit Leerzeichen benutzt wird. Wenn ja, dann werden Leerzeichen und Tabulatoren optimal verteilt, wie diese auch der Editor Emacs benutzt.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>document.removeLine( <parameter
>uint line</parameter
> ); [function]</term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>line</parameter
> Zeilennummer</para
></listitem>
</itemizedlist>
<para
>Löscht die Zeile <parameter
>line</parameter
></para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.removeText( <parameter
>uint startLine</parameter
>, <parameter
>uint startColumn</parameter
>, <parameter
>uint endLine</parameter
>, <parameter
>uint endColumn</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>startLine</parameter
> gibt die Zeilennummer an, an der begonnen werden soll</para
></listitem>
<listitem
><para
><parameter
>startColumn</parameter
> gibt die Spaltennummer an, an der begonnen werden soll</para
></listitem>
<listitem
><para
><parameter
>endLine</parameter
> gibt die Zeilennummer an, an der die Funktion beendet werden soll</para
></listitem>
<listitem
><para
><parameter
>endColumn</parameter
> gibt die Spaltennummer an, an der die Funktion beendet werden soll</para
></listitem>
</itemizedlist>
<para
>Entfernt den Text im Bereich von Zeile <parameter
>startLine</parameter
> und Spalte <parameter
>startColumn</parameter
> bis zur Zeile <parameter
>endLine</parameter
> und Spalte <parameter
>endColumn</parameter
>. </para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.setText( <parameter
>string text</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>text</parameter
> Dokumententext</para
></listitem>
</itemizedlist>
<para
>Setzt den Inhalt des gesamten Dokumentes <parameter
>text</parameter
>.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.spaceIndent; [property:read only]</function
></term>
<listitem>
<para
>Eine Boolescher Wert, der angibt, ob für das Dokument Leerzeichen als Einrückung benutzt werden. Wenn ja, dann werden indentWidth Leerzeichen je Ebene benutzt, wenn nicht, dann wird ein Tabulatorzeichen je Ebene benutzt.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.textFull(); [function]</function
></term>
<listitem>
<para
>Gibt den gesamten Text des Dokumentes zurück. Wenn der Text mehrere Zeilen enthält, ist das Zeilenendezeichen <constant
>\n</constant
>.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.textLine( uint line ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>line</parameter
> Zeile</para
></listitem>
</itemizedlist>
<para
>Gibt den Text der Zeile <parameter
>line</parameter
> zurück.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>document.textRange( <parameter
>uint startLine</parameter
>, <parameter
>uint startColumn</parameter
>, <parameter
>uint endLine</parameter
>, <parameter
>uint endColumn</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>startLine</parameter
> gibt die Zeilennummer an, an der begonnen werden soll</para
></listitem>
<listitem
><para
><parameter
>startColumn</parameter
> gibt die Spaltennummer an, an der begonnen werden soll</para
></listitem>
<listitem
><para
><parameter
>endLine</parameter
> gibt die Zeilennummer an, an der die Funktion beendet werden soll</para>
</listitem>
<listitem
><para
><parameter
>endColumn</parameter
> gibt die Spaltennummer an, an der die Funktion beendet werden soll</para
></listitem>
</itemizedlist>
<para
>Gibt den Text des angegebenen Bereiches zurück. Wenn der Text mehrere Zeilen enthält, ist das Zeilenendezeichen <constant
>\n</constant
>.</para>
</listitem>
</varlistentry>

</variablelist
><!--/ document API -->

<variablelist id="advanced-editing-tools-scripting-view">
<title
>Die <classname
>view</classname
> API</title>

<varlistentry>
<term
><function
>view.clearSelection(); [function]</function
></term>
<listitem>
<para
>Hebt die Auswahl für den gesamten Text auf.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.cursorColumn(); [function]</function
></term>
<listitem>
<para
>Gibt die aktuelle Spalte des Cursors zurück. (Tabulatoren werden in einzelne Spalten umgerechnet)</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.cursorColumnReal(); [function]</function
></term>
<listitem>
<para
>Gibt die reale aktuelle Spalte des Cursors zurück. (Tabulatoren als je eine Spalte gerechnet)</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.cursorLine(); [function]</function
></term>
<listitem>
<para
>Gibt die aktuelle Zeile des Cursors zurück.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.hasSelection(); [function]</function
></term>
<listitem>
<para
>Gibt <constant
>true</constant
> zurück, wenn die Ansicht ausgewählten Text enhält, sonst <constant
>false</constant
>.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.removeSelectedText(); [function]</function
></term>
<listitem>
<para
>Entfernt den ausgewählten Text, wenn die Ansicht eine Auswahl hat.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.selectAll(); [function]</function
></term>
<listitem>
<para
>Wählt den gesamten Text aus.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.selection(); [function]</function
></term>
<listitem>
<para
>Gibt den ausgewählten Text zurück. Wenn die Auswahl mehrere Zeilen enthält, ist das Zeilenendezeichen <constant
>\n</constant
>.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.selectionEndColumn; [property:read only]</function
></term>
<listitem>
<para
>Gibt die Spalte des Endes der Auswahl zurück.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.selectionEndLine; [property:read only]</function
></term>
<listitem>
<para
>Gibt die Zeilennummer der Zeile zurück in der die Auswahl endet.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.selectionStartColumn; [property:read only]</function
></term>
<listitem>
<para
>Gibt die Spaltennummer der Spalte zurück in der die Auswahl beginnt.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.selectionStartLine; [property:read only]</function
></term>
<listitem>
<para
>Gibt die Zeilennummer der Zeile zurück in der die Auswahl beginnt.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.setCursorPosition( <parameter
>uint line</parameter
>, <parameter
>uint column</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>line</parameter
> Gibt die Zeile für den Cursor an.</para
></listitem>
<listitem
><para
><parameter
>column</parameter
> Gibt die Spalte für den Cursor an.</para
></listitem>
</itemizedlist>
<para
>Setzt den Eingabecursor auf die Position [<parameter
>line</parameter
>, <parameter
>col</parameter
>] in der aktuellen Ansicht. Die Cursorposition wird nach der Ansicht gesetzt, das heisst, das das Tabulatorzeichen bis zu <replaceable
>tabwidth</replaceable
> Spalten zählt, abhängig von dessen Position innerhalb der Zeile. Die Cursorposition wird sichtbar gemacht. Beide die Zeilen und die Spaltenposition zählen von 0 beginnend.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.setCursorPositionReal( <parameter
>uint line</parameter
>, <parameter
>uint column</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>line</parameter
> Gibt die Zeile für den Cursor an.</para
></listitem>
<listitem
><para
><parameter
>column</parameter
> Gibt die Spalte für den Cursor an.</para
></listitem>
</itemizedlist>
<para
>Setzt den Eingabecursor auf die Position [<parameter
>line</parameter
>, <parameter
>col</parameter
>] in der aktuellen Ansicht. Die Cursorposition wird nach der Zeicheanzahl gesetzt, das heisst, das das Tabulatorzeichen ein Zeichen zählt, unabhängig von dessen Position innerhalb der Zeile. Die Cursorposition wird sichtbar gemacht. Beide die Zeilen und die Spaltenposition zählen von 0 beginnend.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
><function
>view.setSelection( <parameter
>uint startLine</parameter
>, <parameter
>uint startColumn</parameter
>, <parameter
>uint endLine</parameter
>, <parameter
>uint endColumn</parameter
> ); [function]</function
></term>
<listitem>
<itemizedlist>
<title
>Parameter</title>
<listitem
><para
><parameter
>startLine</parameter
> gibt die Zeilennummer an, an der begonnen werden soll</para
></listitem>
<listitem
><para
><parameter
>startColumn</parameter
> gibt die Spaltennummer an, an der begonnen werden soll</para
></listitem>
<listitem
><para
><parameter
>endLine</parameter
> gibt die Zeilennummer an, an der die Funktion beendet werden soll</para
></listitem>
<listitem
><para
><parameter
>endColumn</parameter
> gibt die Spaltennummer an, an der die Funktion beendet werden soll</para
></listitem>
</itemizedlist>
<para
>Setzt eine Auswahl beginnend an Zeile <parameter
>startLine</parameter
> und Spalte <parameter
>startColumn</parameter
> bis zur Zeile <parameter
>endLine</parameter
> und Spalte <parameter
>endColumn</parameter
>.</para>
</listitem>
</varlistentry>

</variablelist>

<example id="advanced-editing-tools-scripting-example">

<title
>Ein Beispielscript</title>
<para
>Als Beispiel soll hier ein kleines Script erstellt werden, das die Auswahl in Großbuchstaben umwandelt. Es ist einleuchtend, dass zuerst geprüft werden muss, ob eine Auswahl existiert. Wenn dies der Fall ist, dann wird der Text geholt, in Großbuchstaben umgewandelt und die Auswahl mit dem Ergebnis ersetzt. Eine Umsetzung könnte wie folgt aussehen:</para>

<programlisting
>if ( view.hasSelection() )
{
  // uppercase selection
  column = view.selectionStartColumn;
  line = view.selectionStartLine;

  selection = view.selection().toUpperCase();

  document.editBegin();
  view.removeSelectedText();
  document.insertText( line, column, selection );
  document.editEnd();
}
</programlisting>

<para
>Um alle Aktionen zu einer Editiergruppe zusammenzufassen, so dass diese mit einem einzelnen <guimenuitem
>Rückgängig</guimenuitem
> aufgehoben werden können, werden die Zeilen <programlisting
>view.removeSelectedText()</programlisting
> und <programlisting
>document.insertText()</programlisting
> mit <programlisting
>document.editBegin()</programlisting
> und <programlisting
>document.editEnd()</programlisting
> eingeschlossen.</para>

</example>

<example id="advanced-editing-tools-desktop-example">
<title
>Eine Beispiel für eine <filename
>.desktop</filename
>-Datei</title>

<para
>Hier ist ein Beispiel für eine .desktop-Datei, die zu diesem Script gehört.</para>

<programlisting
># Example of a .desktop file
[Desktop Entry]
Encoding=UTF-8
Name=Kate Part JavaScript Uppercase
Comment=Script to uppercase the selection
X-Kate-Command=uppercase-selection
X-Kate-Help=&lt;p&gt;Usage: &lt;code&gt;uppercase-selection&lt;/code&gt;&lt;/p&gt;
</programlisting>

<para
>Wie sie sehen, können Sie hier die Kodierung, den Namen, einen Kommentar, einen Hilfetext unter Benutzung von X-Kate-Help und den Befehlszeilennamen unter Benutzung von X-Kate-Command festlegen. Die Einträge unter Name, Kommentar und X-Kate-Help werden automatisch von den KDE-Übersetzerteams in andere Sprachen übersetzt, wenn die Dateien im SVN-Repository KDE sind.</para>

</example>

<sect3>
<title
>Zusammensetzen</title>

<para
>&kate; durchsucht die Scriptordner (sehen Sie <link linkend="advanced-editing-tools-scripting-introduction"
>oben für weitere Informationen nach</link
>) nach Dateien mit der Endung <filename
>.js</filename
>. Für jede gefundene Datei wird geprüft, ob es eine dazugehörige Datei mit der Endung <filename
>.desktop</filename
> gibt, &zb; für uppercase.js die Datei uppercase.desktop. </para>
<para
>Wenn die zugehörige <filename
>.desktop</filename
>-Datei nicht gefunden wird, dann wird das Script in der Befehlszeile von Katepart ohne die Endung .js registriert, in unserem besispiel wäre das <literal
>uppercase</literal
>. Wenn Ihnen der Befehlsname ausreicht und Sie die zusätzlichen Möglichkeiten, die eine <filename
>.desktop</filename
>-Datei bietet, nicht brauchen, dann brauchen Sie keine <filename
>.desktop</filename
>-Datei. </para>
<para
>Wenn eine <filename
>.desktop</filename
>-Datei existiert, dann liest Katepart den Namen, unter dem das Script vom Eintrag X-Kate-Command in der .desktop-Datei registriert wird, zum Beispiel X-Kate-Command=uppercase-selection.</para>

</sect3>

</sect2>

</sect1>

</chapter>

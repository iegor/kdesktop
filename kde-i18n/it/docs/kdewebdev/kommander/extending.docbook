<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="extending">
<chapterinfo>
<title
>Estendere &kommander;</title>
<authorgroup>
<author
><firstname
></firstname
> <surname
></surname
> </author>

<othercredit role="translator"
><firstname
>Samuele</firstname
><surname
>Kaplun</surname
><affiliation
><address
><email
>kaplun@aliceposta.it</email
></address
></affiliation
><contrib
>Traduzione del documento</contrib
></othercredit
> 

</authorgroup>
</chapterinfo>

<title
>Estendere &kommander;</title>

<!-- (OPTIONAL, BUT RECOMMENDED) This chapter should list all of the
application windows and their menubar and toolbar commands for easy reference.
Also include any keys that have a special function but have no equivalent in the
menus or toolbars. This may not be necessary for small apps or apps with no tool
or menu bars. -->

<sect1 id="create-widgets">
<title
>Creare i Widget di &kommander;</title>
<para
>Con Kommander puoi creare nuovi widget non basati su &kommander; stesso in maniera semplice. L'approccio è quello di derivare la tua nuova classe di &kommander; dal widget &Qt;/&kde; che desideri integrare in &kommander; assieme alla classe KommanderWidget. Fare l'override dei metodi di questa classe dà al widget di &kommander; le proprie funzionalità. </para>
<para
>La maggior parte del codice di un widget di &kommander; è solo codice modello. Perciò puoi usare la finestra di dialogo widgetgenerator.kmdr di &kommander; per generare la maggior parte del codice del widget di &kommander; per te. Tutto quello che devi fare è riempire le parti importanti relative al tuo widget come qualsiasi informazione di stato, testo del widget, ecc. </para>
<para
>Per esempio, supponiamo di voler creare un nuovo widget di tipo casella di testo per &kommander; basato sul widget KLineEdit di &kde;. Utilizzando la finestra di dialogo di generazione dei widget, otteniamo qualcosa di simile a quanto contenuto in questo file header: </para>
</sect1>

</chapter>

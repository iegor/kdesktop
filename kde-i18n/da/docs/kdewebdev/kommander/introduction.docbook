<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="introduction">
<chapterinfo>
<title
>Indledning</title>
<authorgroup>
<author
><firstname
>Eric</firstname
> <surname
>Laffoon</surname
> <affiliation
> <address
><email
>sequitur@kde.org</email
></address>
</affiliation>
</author>

&rune.laursen.role; 

</authorgroup>
</chapterinfo>

<title
>Indledning</title>

<para
>&kommander; er et visuelt dialogbygningsværktøj som kan udvides til at bygge fuldstændige programmer. Dets primære mål er at oprette så meget funktionalitet som muligt, uden at bruge scriptsprog. Dette medfører følgende funktioner: </para>

<itemizedlist>


  <listitem
><para
>Specielle foranstilles med et <quote
>@</quote
> sådan her @widgetText. De tilbyder specielle funktioner som værdien af en kontrol, funktioner, aliasser, globale variable osv.</para
></listitem>


<listitem
><para
>&DCOP;-integration tillader &kommander;-dialoger at kontrollere og blive kontrolleret af interaktioner med andre &kde;-programmer. Det er en meget kraftfuld egenskab.</para
></listitem>

<listitem
><para
>Signaler og slot er lidt mindre intuitivt for en ny bruger. Det er under bearbejdelse hvordan vi skal gå videre med dette i den første større udgivelse. Signaler og slot tilbyder en begrænset begivenhedsmodel til når der trykkes på en knap eller en kontrol ændres. I kombination med <quote
>BefolkningsTekst</quote
> er det dog ret kraftfuldt.</para
></listitem>
</itemizedlist>

<para
>Nøglefacilitet i &kommander;-dialoger er at du kan binde tekst (&kommander; Text) til en kontrol. Så hvis du har en @kontrol1 og @kontrol2 og de er linjeeditorer, kan du sætte &kommander; til at vise deres indhold ved at skrive @kontrol1Tekst i deres &kommander; Text område. Så skriver du Hej i @kontrol1 og verden i @kontrol2. En knap kan have strengen Mit første @kontrol1 @kontrol2 program, i &kommander;. Kører du så denne dialog fra en konsol udskrives Mit første Hej verden program, i &kommander; </para>

<para
>Forhåbentlig begynder du at kunne se en del af potentialet. &kommander; tilbyder en meget hurtigere designmodel for simple programmer fordi det lader dig koncentrere dig om mere grundlæggende og naturlige koncepter istedet for programmeringssproget. I computere er sprog en måde at definere koncepter og som sådan er det et lag mellem koncept og implementering og som kan hæmme fremskridt. &kommander; forsøger at minimere dette lag. </para>

<para
>&kommander; forsøger også at bygge videre på standarder. Det er lavet med et &Qt;-grundlag og opretter *.ui-filer som omdøbes til *.kmdr. Det kan let importere en hvilken som helst &kde;-kontrol og dette kan gøres med plugin uden at skulle rekompilere &kommander;. </para>

<para
>&kommander;s anden markante faktor er måden hvorpå behovet for sprog håndteres. Computersprog kan være vidunderlige, men de har tendens til at have deres egne dogmer og fanatikere, der ofte forsøger at give det en fordel for &GUI; i et integreret udviklingsmiljø. Ironisk nok er modtagelsen af den slags &IDE;'er begrænset af antallet af mennesker der er villige til at begynde at arbejde med et nyt sprog.for at få adgang til ny og eftertragtet funktionalitet. Det er ikke rimeligt at forvente at man er nødt til at skifte mellem dusinvis af sprog for at få adgang til forskellige funktionaliteter. Ved at være sprogneutral og ved at tillade en &kommander;-dialog at blive udvidet vha. scriptsprog, sætter &kommander; sig i en unik situation for en bredspektret modtagelse. Der kan benyttes flere scriptsprog i en enkelt dialog og applikationer kan overtages af mennesker der benytter et andet rpogrammeringssprog end den oprindelige forfatter, så det gradvis kan konverteres og udvides. Nye kontroller og funktioner kan på ingen tid laves i alle tilgængelige sprog. </para>

<para
>Vi håber &kommander; får den udviklerstøtte og anerkendelse der skal til for at nå det potentiuale den rummer. Vores slutmål er at gøre &kommander; brugbar for nybegyndere så de kan udvide og flette deres appliktioner sammen. På samme tid skulle det gerne blive til et godt værktøj til fremstilling af prototyper. Det åbner også døren for open source på en ny måde. Vi ved at mennesker kan udvide vores GPL-licenserede programmer, men det er stadig et faktum at meget få har evnerne. Med &kommander; skulle det antal gerne multipliceres. Nogle applikationer er måske mest logiske som en &kommander;-applikation. Vi bruger den allerede på nogle områder for at give mulighed for udvidbarhed i &quantaplus; </para>

<para
>Vi håber du får glæde af &kommander;. Hjælp os gerne med fejlrapporteringer og  eksempeldialoger ,såvel som hvilke som helst ønsker du hr. Du kan melde dig til vore brugerliste for at hjælpe med at udvikle &kommander;-applikationer på http://mail.kdewebdev.org/mailman/listinfo/kommander </para>

<para
>Bedste hilsner fra &kommander; udviklingsholdet.</para>

</chapter>

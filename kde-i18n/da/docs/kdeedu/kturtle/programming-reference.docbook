<!--Dear translator: please NEVER translate the id or anything inside the tags as they are needed in english by the application
     Thanks a lot in advance.-->
<chapter id="reference">
<title
>&kturtle;'s &logo; programmeringsreference</title>
<para
>Dette er en reference til &kturtle;s &logo;. I dette kapitel næver vi kort alle <link linkend="different-instructions"
>forskellige instruktionstyper</link
>. Derefter forklares alle <link linkend="commands"
>kommandoer</link
> i en af gangen. Herefter følger forklaringer af <link linkend="containers"
>beholdare</link
>, <link linkend="math"
>math</link
>, <link linkend="questions"
>spørgsmål</link
> og <link linkend="controlling-execution"
>kommandoer til at styre kørslen</link
>. Tilsidst vises hvordan du kan oprette dine egne kommandoer med <link linkend="learn"
>learn</link
>.</para>

<sect1 id="different-instructions">
<title
>Forskellige instruktionstyper</title>
<para
>Som i alle sprog har Logo forskellige typer af ord og symboler. Her forklares kortfattet forskellen mellem typerne.</para>

<sect2 id="command">
<title
>Kommandoer</title>
<para
>Ved brug af kommandoerne beder du &kturtle; om at gøre noget. Nogle kommandoer har brug for inddata, nogle giver uddata. <screen
># forward er en kommando som behøver inddata, i dette tilfælde tallet 100:
forward 100
</screen>
</para>
<para
>For en detaljeret oversigt over alle kommandoer som &kturtle; understøtter, se <link linkend="commands"
>her</link
>.</para>
</sect2>

<sect2 id="number">
<title
>Tal</title>
<para
>Formodentlig ved du allerede en hel del om tal. Måden som tal bruges i &kturtle; er ikke særlig anderledes end i sprog eller matematik. </para>
<para
>Vi har de såkaldte naturlige tal: <userinput
>0</userinput
>, <userinput
>1</userinput
>, <userinput
>2</userinput
>, <userinput
>3</userinput
>, <userinput
>4</userinput
>, <userinput
>5</userinput
>, osv. De negative tal: <userinput
>-1</userinput
>, <userinput
>-2</userinput
>, <userinput
>-3</userinput
>, osv. Og tal med decimaler eller decimaltal, for eksempel: <userinput
>0,1</userinput
>, <userinput
>3,14</userinput
>, <userinput
>33,3333</userinput
>, <userinput
>-5,05</userinput
>, <userinput
>-1,0</userinput
>. </para>
<para
>Tal kan bruges i <link linkend="math"
>matematiske beregninger</link
> og <link linkend="questions"
>spørgsmål</link
>. De kan også placeres i <link linkend="containers"
>containere</link
>.</para>
<para
>Tal er <glossterm
>fremhævede</glossterm
> med blåt i <link linkend="the-code-editor"
>kodeditoren</link
>.</para>
</sect2>

<sect2 id="string">
<title
>Strenge</title>
<para
>Først et eksempel: <screen>
skriv "Goddag, jeg er en streng."
</screen
> I dette eksempel er <userinput
>print</userinput
> en kommando, mens <userinput
>"Goddag, jeg er en streng."</userinput
> er en streng. Strenge begynder og slutter med tegnet <userinput
>"</userinput
>. Det er disse tegn som gør at &kturtle; véd at det er en streng.</para>
<para
>Strenge kan placeres i <link linkend="containers"
>containere</link
>, men de kan ikke bruges i <link linkend="math"
>matematiske beregninger</link
> eller i <link linkend="questions"
>spørgsmål</link
>.</para>
<para
>Strenge <glossterm
>fremhæves</glossterm
> med mørkerødt i <link linkend="the-code-editor"
>kodeditoren</link
>.</para>
</sect2>


<sect2 id="name">
<title
>Navne</title>
<para
>Når du bruger programsproget &logo; laver du nye ting. Hvis du skriver et program har du ofte brug for <link linkend="containers"
>containere</link
> og sommetider har du brug for <link linkend="learn"
>learn</link
> for at oprette nye kommandoer. Når du laver en <link linkend="containers"
>container</link
> eller en ny kommando med <link linkend="learn"
>learn</link
> skal du angive et navn.</para>
<para
>Du kan vælge et hvilket som helst navn, under forudsætning af at det ikke allerede har en betydning. Du kan for eksempel ikke navngive en container <link linkend="forward"
>forward</link
>, eftersom dette navn allerede bruges til en kommando, og allerede har en betydning. <screen>
# Her bruges forward som en container, men det har allerede en betydning,
# altså forårsager dette et fejl:
forward = 20

# Dette virker:
forward 20
</screen
> Navne kan kun indeholde bogstaver, tal og understregninger (_), og de skal begynde med et bogstav. </para>
<para
>Læs gerne dokumentationen om <link linkend="containers"
>containere</link
> og kommandoen <link linkend="learn"
>learn</link
> for en bedre forklaring og flere eksempler. </para>
</sect2>

<sect2 id="assignment">
<title
>Tilknytninger</title>
<para
>Tilknytninger udføres med tegnet <userinput
>=</userinput
>. I programmeringssprog er det bedre ikke at udtale et enkelt <userinput
>=</userinput
> som 'er lig med' men som 'bliver'. Udtrykket 'er lig med' er m ere passende for <userinput
>==</userinput
>, som er et <link linkend="questions"
>spørgsmål</link
>.</para>
<para
>Tilknytninger bruges i almindelighed af to grunde: (1) for at tilføje indhold til <link linkend="containers"
>containere</link
>, og (2) for at ændre indholdet i en beholder. For eksempel: <screen
>x = 10
# Containeren x indeholder nu tallet 10.
W = "Min alder er: "
# Containeren W indeholder nu "Min alder er: ".
# Dette udskriver ud containerne 'W' og 'x' på kanvassen
print W + x
</screen>
</para>
<para
>For flere eksempler, se afsnittet om <link linkend="containers"
>containere</link
>.</para>
</sect2>

<sect2 id="math-symbols">
<title
>Matematiske symboler</title>
<para
>&kturtle; understøtter alle grundlæggende matematiske symboler: addere (<userinput
>+</userinput
>), subtrahere (<userinput
>-</userinput
>), multiplicere (<userinput
>*</userinput
>), dividere (<userinput
>/</userinput
>) og parenteser <userinput
>(</userinput
> og <userinput
>)</userinput
>.</para>
<para
>For en fuldstændig forklaring og flere eksempler, se afsnittet om <link linkend="math"
>matematiske beregninger</link
>.</para>
</sect2>

<sect2 id="question">
<title
>Spørgsmål</title>
<para
>Vi kan stille enkle spørgsmål hvor svaret er 'sand' eller 'falsk'.</para>
<para
>At bruge spørgsmål beskrives udførligt i afsnittet om <link linkend="questions"
>spørgsmål</link
>.</para>
</sect2>

<sect2 id="questions-glue">
<title
>Spørgsmål klister-ord</title>
<para
>Spørgsmål kan klistres sammen med såkaldte 'klisterord'. Klisterordene er <userinput
>og</userinput
>, <userinput
>eller</userinput
>, og det specielle klisterord <userinput
>ikke</userinput
>.</para>
<para
>Brug af klisterord i spørgsmål forklares i afsnittet om <link linkend="question-glue"
>klisterord i spørgsmål</link
>.</para>
</sect2>


<sect2 id="comment">
<title
>Kommentarer</title>
<para
>Kommentarer er linjer som begynder med tegnet <userinput
>#</userinput
>. For eksempel: <screen>
# Dette er en kommentar!
print "Dette er ikke en kommentar"
# Foregående linje er ikke en kommentar, men den næste linje er det:
# print "Dette er ikke en kommentar"
</screen
> Vi kan tilføje kommentarer til koden, som vi selv og andre kan læse. Kommentarer bruges for at: (1) tilføje en kort beskrivelse af programmet, (2) forklare hvordan et kodeafsnit virker hvis det er svært at forstå, og (3) til at 'kommentere væk' kodelinjer som (midlertidigt) skal ignoreres (se sidste linje i eksemplet).</para>
<para
>Kommentarlinjer er <glossterm
>fremhævede</glossterm
> med mørkegult i <link linkend="the-code-editor"
>kodeditoren</link
>.</para>
</sect2>

</sect1>


<sect1 id="commands">
<title
>Kommandoer</title>
<para
>Ved brug af kommandoerne beder du &kturtle; om at gøre noget. Nogle kommandoer har brug for inddata, nogle giver uddata. I dette afsnit forklarer vi alle kommandoerne der kan bruges i &kturtle;. Bemærk venligst at alle indbyggede kommandoer som vi diskuterer her er <glossterm
>fremhævede</glossterm
> med mørkegrønt i <link linkend="the-code-editor"
>kodeeditoren</link
>. Dette kan hjælpe dig med at se dem.</para>

<sect2 id="moving-the-turtle">
<title
>Flyt skildpadden</title>
<para
>Der er adskillige kommandoer til at flytte skildpadden rundt på skærmen.</para>
  
<sect3 id="forward">
  <title
>forward (fw)</title>
  <variablelist>
    <varlistentry
> 
      <term
>forward</term>
      <listitem
><para
><screen
>forward X</screen>
<userinput
>forward</userinput
> flytter skildpadden X pixels fremad. Når pennen er nede vil skildpadden efterlade et spor. <userinput
>forward</userinput
> kan forkortes til <userinput
>fw</userinput
></para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="backward">
  <title
>backward (bw)</title>
  <variablelist>
    <varlistentry
>  
      <term
>backward</term>
      <listitem
><para
><screen
>backward X</screen>
<userinput
>backward</userinput
> flytter skildpadden X pixels tilbage. Når pennen er nede vil skildpadden efterlade et spor. <userinput
>backward</userinput
> kan forkortes til <userinput
>bw</userinput
></para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="turnleft">
  <title
>turnleft (tl)</title>
  <variablelist>
    <varlistentry
> 
      <term
>turnleft</term>
      <listitem
><para
><screen
>turnleft X</screen>
<userinput
>turnleft</userinput
> beder skildpadden om at dreje X grader til venstre. <userinput
>turnleft</userinput
> kan forkortes til <userinput
>tl</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="turnright">
  <title
>turnright (tr)</title>
  <variablelist>
    <varlistentry
> 
      <term
>turnright</term>
      <listitem
><para
><screen
>turnright X</screen>
<userinput
>turnright</userinput
> beder skildpadden om at dreje X grader til højre. <userinput
>turnleft</userinput
> kan forkortes til <userinput
>tr</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="direction">
  <title
>direction (dir)</title>
  <variablelist>
    <varlistentry
> 
      <term
>direction</term>
      <listitem
><para
><screen
>direction X</screen>
<userinput
>direction</userinput
> sætter skildpaddens retning til X grader talt ud fra nul, og således ikke relativ til skildpaddens tidligere retning. <userinput
>direction</userinput
> kan forkortes til <userinput
>dir</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="center">
  <title
>center</title>
  <variablelist>
    <varlistentry
> 
      <term
>center</term>
      <listitem
><para
><screen
>center</screen>
<userinput
>center</userinput
> flytter skildpadden til centrum for kanvassen.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="go">
  <title
>go</title>
  <variablelist>
    <varlistentry
> 
      <term
>go</term>
      <listitem
><para
><screen
>go X,Y</screen>
<userinput
>go</userinput
> beder skildpadden om at gå til et betsemt sted på kanvassen. Dette sted er X <glossterm linkend="pixels"
>pixels</glossterm
> fra venstre side af kanvassen, og Y <glossterm linkend="pixels"
>pixels</glossterm
> fra toppen af kanvassen. Bemærk at ved brug af <userinput
>go</userinput
> kommandoen vil skildpadden ikke tenge en linje.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="gox">
  <title
>gox</title>
  <variablelist>
    <varlistentry
> 
      <term
>gox</term>
      <listitem
><para
><screen
>gox X</screen>
<userinput
>gox</userinput
> brug af denne kommando vil få skildpadden til at flytte til X <glossterm linkend="pixels"
>pixels</glossterm
> fra venstre side af kanvassen mens den forbliver på samme højde.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="goy">
  <title
>goy</title>
  <variablelist>
    <varlistentry
> 
      <term
>goy</term>
      <listitem
><para
><screen
>goy Y</screen>
<userinput
>goy</userinput
> brug af denne kommando vil få skildpadden til at flytte til X <glossterm linkend="pixels"
>pixels</glossterm
> fra toppen af kanvassen mens afstanden til venstre side er uforandret.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
</sect2>

<sect2 id="pen">
<title
>Skildpadden har en pen</title>
<para
>Skildpadden har en pen, der tegner en linje når skildpadden flyttes. Der er nogle  få kommandoer til at kontrollere pennen. I dette afsnit forklarer vi disse kommandoer.</para>
<sect3 id="penup">
  <title
>penup (pu)</title>
  <variablelist>
    <varlistentry
> 
      <term
>penup</term>
      <listitem
><para
><screen
>penup</screen>
<userinput
>pendown</userinput
> trykker pennen ned på kanvassen. Når pennen er <quote
>down</quote
> på kanvassen vil en linje blive tegnet når skildpadden bevæger sig. Se også  <userinput
>penup</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="pendown">
  <title
>pendown (pd)</title>
  <variablelist>
    <varlistentry
> 
      <term
>pendown</term>
      <listitem
><para
><screen
>pendown</screen>
<userinput
>pendown</userinput
> trykker pennen ned på kanvassen. Når pennen er <quote
>down</quote
> på kanvassen vil en linje blive tegnet når skildpadden bevæger sig. Se også  <userinput
>penup</userinput
>. <userinput
>pendown</userinput
> kan forkortes til <userinput
>pd</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="setpenwidth">
  <title
>penwidth (pw)</title>
  <variablelist>
    <varlistentry
> 
      <term
>penwidth</term>
      <listitem
><para
><screen
>penwidth X</screen>
<userinput
>penwidth</userinput
> sætter pennens bredde (linjebredden) til mængden X <glossterm linkend="pixels"
>pixels</glossterm
>. <userinput
>penwidth</userinput
> kan forkortes til <userinput
>pw</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="setfgcolor">
  <title
>pencolor (pc)</title>
  <variablelist>
    <varlistentry
> 
      <term
>pencolor</term>
      <listitem
><para
><screen
>pencolor R,G,B</screen>
<userinput
>pencolor</userinput
> sætter pennens farve. <userinput
>pencolor</userinput
> tager en <glossterm linkend="rgb"
>RGB kombination</glossterm
> som inddata. <userinput
>pencolor</userinput
> kan forkortes til <userinput
>pc</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
</sect2>

<sect2 id="canvas">
<title
>Kommandoer til at kontrollere kanvassen</title>
<para
>Der er adskillige kommandoer til at kontrollere kanvassen.</para>
<sect3 id="resizecanvas">
  <title
>canvassize (cs)</title>
  <variablelist>
    <varlistentry>
      <term
>canvassize</term>
      <listitem
><para
><screen
>canvassize X,Y</screen>
Med kommandoen <userinput
>canvassize</userinput
> kan du sætte størrelsen af kanvassen. Den  tager X og Y som inddata, hvor X er den nye kanvas' bredde i <glossterm linkend="pixels"
>pixels</glossterm
>, og Y den nye højde for kanvassen i <glossterm linkend="pixels"
>pixels</glossterm
>. <userinput
>canvassize</userinput
> kan forkortes til <userinput
>cs</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="setbgcolor">
  <title
>canvascolor (cc)</title>
  <variablelist>
    <varlistentry
> 
      <term
>canvascolor</term>
      <listitem
><para
><screen
>canvascolor R,G,B</screen>
<userinput
>canvascolor</userinput
> sætter farven for kanvassen. <userinput
>canvascolor</userinput
> tager en <glossterm linkend="rgb"
>RGB combination</glossterm
> som inddata. <userinput
>canvascolor</userinput
> kan forkortes til <userinput
>cc</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="wrapon">
  <title
>wrapon</title>
  <variablelist>
    <varlistentry
> 
      <term
>wrapon</term>
      <listitem
><para
><screen
>wrapon</screen>
Med kommandoen <userinput
>wrapon</userinput
> kan du slå <glossterm linkend="wrapping"
>ombrydning</glossterm
> <quote
>til</quote
> for kanvassen. Se venligst ordforklaringen hvis du ønsker at vide hvad <glossterm linkend="wrapping"
>ombrydning</glossterm
> er.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="wrapoff">
  <title
>wrapoff</title>
  <variablelist>
    <varlistentry
> 
      <term
>wrapoff</term>
      <listitem
><para
><screen
>wrapoff</screen>
Med kommandoen <userinput
>wrapoff</userinput
> kan du slå <glossterm linkend="wrapping"
>ombrydning</glossterm
> <quote
>fra</quote
> for kanvassen. Dette betyder at skildpadden kan flytte væk fra kanvassen og fare <quote
>vild</quote
>. Se venligst  ordforklaringen hvis du ønsker at vide hvad <glossterm linkend="wrapping"
>ombrydning</glossterm
> er.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
</sect2>

<sect2 id="clean">
<title
>Kommandoer til at rydde op</title>
<para
>Der er to kommandoer til at rydde op på kanvassen efter du har rodet.</para>
<sect3 id="clear">
  <title
>clear (cr)</title>
  <variablelist>
    <varlistentry
> 
      <term
>clear</term>
      <listitem
><para
><screen
>clear</screen>
Med <userinput
>clear</userinput
> kan du rydde alle tegninger væk fra  kanvassen. Alt andet forbliver: positionen og vinklen for skildpadden, kanvasfarven, skildpaddens synlighed og kanvassens størrelse. <userinput
>clear</userinput
> kan forkortes til <userinput
>cr</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="reset">
  <title
>reset</title>
  <variablelist>
    <varlistentry
> 
      <term
>reset</term>
      <listitem
><para
><screen
>reset</screen>
<userinput
>reset</userinput
> rydder meget mere gennemgribende op end kommandoen <userinput
>clear</userinput
>. Efter en <userinput
>reset</userinput
> kommando er alt som lige efter du netop startede &kturtle;. Skildpadden er lige i midten af skærmen, kanvasfarven er hvis og skildpadden tegner en sort linje på kanvassen.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
</sect2>

<sect2 id="sprites">
<title
>Skildpadden er en sprite</title>
<para
>Først en kort forklaring af hvad en sprite er: en sprite er et lille billede der kan flyttes rundt på skærmen, ligesom vi man ofte ser i computer-spil. For mere info se ordforklaringen om <glossterm linkend="sprites"
>sprite</glossterm
>). </para>
<para
>Herefter vil du finde et fuldt overblik over alle kommandoer til at arbejde med sprite.</para>
<para
>[Denne udgave af &kturtle; understøtter endnu ikke brugen af sprite bortset fra skildpadden. I fremtidige udgaver vil du kunne ændre skildpadden til noget du selv har designet.]</para>
<sect3 id="spriteshow">
  <title
>show</title>
  <variablelist>
    <varlistentry
> 
      <term
>show (ss)</term>
      <listitem
><para
><screen
>show</screen>
<userinput
>show</userinput
> gør skildpadden synlig igen efter den har været skjult. <userinput
>show</userinput
> kan forkortes til <userinput
>ss</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="spritehide">
  <title
>hide (sh)</title>
  <variablelist>
    <varlistentry
> 
      <term
>hide</term>
      <listitem
><para
><screen
>hide</screen>
<userinput
>hide</userinput
> skjuler skildpadden. Dette kan bruges hvis skildpadden ikke passer ind i din tegning. <userinput
>hide</userinput
> kan forkortes til <userinput
>sh</userinput
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
</sect2>

<sect2 id="writing">
<title
>Kan skildpadderne skrive?</title>
<para
>Svaret er: <quote
>ja</quote
>. Skildpaddenkan skrive, han skiver næsten alt det du beder den om at skrive.</para>
<sect3 id="print">
  <title
>print</title>
  <variablelist>
    <varlistentry
> 
      <term
>print</term>
      <listitem
><para
><screen
>print X</screen>
<userinput
>print</userinput
>-kommandoen bruges til atbede skildpadden om at skrive noget på kanvassen. <userinput
>print</userinput
> tager tal og strenge som inddata. Du kan <userinput
>print</userinput
> forskellige tal og strenge ved at bruge <quote
>+</quote
>-symbolet. Se et lille eksempel her: <screen
>year = 2003
author = "Cies"
print author + " startede KTurtle-projektet i " + year + " og nyder stadig at arbejde med det!"
</screen>
      </para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="fontsize">
  <title
>fontsize</title>
  <variablelist>
    <varlistentry
> 
      <term
>fontsize</term>
      <listitem
><para
><screen
>fontsize X</screen>
<userinput
>fontsize</userinput
> sætter skriftens størrelse der bruges af <userinput
>print</userinput
>. <userinput
>fontsize</userinput
> tager  inddata der skal være et tal. Størrelsen sættes i <glossterm linkend="pixels"
>pixels</glossterm
>.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
</sect2>

<sect2 id="random">
<title
>En kommando der ruller en terning for dig</title>
<para
>Der er en kommando som ruller terninger for dig. Den kaldes <userinput
>random</userinput
>, og er meget nyttig til at få uforudsete resultater.</para>
  <variablelist>
    <varlistentry
> 
      <term
>tilfældig</term>
      <listitem
><para
><screen
>random X,Y</screen>
<userinput
>random</userinput
> er en kommando der bruger inddata og giver uddata. Som inddata kræves to tal, det første (X) sætter minimum for uddata, det andet (Y) sætter maksimum. Uddata er et tilfældigt valgt tal der er større end eller lig med minimum og mindre end eller lig med maksimum. Her er el lille eksempel: <screen>
      repeat 500 [
        x = random 1,20
        forward x
        turnleft 10 - x
      ]
      </screen
> Brug af random-kommandoen kan tilføje lidt kaos til dit program.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect2>

<sect2 id="dialogs">
<title
>Input og tilbagemelding gennem dialoger</title>
<para
>En dialog er et lille vindue der giver noget tilbagemelding eller beder om noget input. &kturtle; har to kommandoer for dialoger, nemlig: <userinput
>message</userinput
> og <userinput
>inputwindow</userinput
></para>
<sect3 id="message">
  <title
>message</title>
  <variablelist>
    <varlistentry
> 
      <term
>message</term>
      <listitem
><para
><screen
>message X</screen>
<userinput
>message</userinput
>-kommandoen tager en <link linkend="string"
>streng</link
> som input. Den viser en dialog der indeholder teksten fra <link linkend="string"
>strengen</link
>. <screen
>year = 2003
author = "Cies"
print author + " startede KTurtle-projektet i " + year + " og nyder stadig at arbejde med det!"
</screen>
      </para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
<sect3 id="inputwindow">
  <title
>inputwindow</title>
  <variablelist>
    <varlistentry
> 
      <term
>inputwindow</term>
      <listitem
><para
><screen
>inputwindow X</screen>
<userinput
>inputwindow</userinput
> tager en <link linkend="string"
>streng</link
> som input. Det viser en dialog der indeholder teksten fra strengen, ligesom <link linkend="message"
>message</link
>. Men derudover er der også et inddatafelt i dialogen. Gennem dette  inddatafelt kan brugeren indtaste et <link linkend="number"
>tal</link
> eller en <link linkend="string"
>streng</link
> som kan opbevares i en <link linkend="containers"
>container</link
>. For eksempel <screen>
in = inputwindow "Hvor gammel er du?"
out = 2003 - in
print "I 2003 var du " + out + " år gammel på et tidspunkt."
</screen
> Når en bruger annullere dialogen, eller ikke indtaster noget over hovedet, bliver <link linkend="containers"
>containeren</link
> tømt.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect3>
</sect2>

</sect1>



<sect1 id="containers">
<title
>Containere</title>
<para
>Containere er bogstaver eller ord der kan bruges af programmører til at opbevare et tal eller en tekst. Containere der indeholder et tal kaldes <link linkend="variables"
>variabler</link
>, containere der indeholder tekst kaldes <link linkend="string"
>streng</link
>.</para>

<para
>Containere der ikke bruges indeholder ingenting. Et eksempel: <screen>
print N
</screen
> Dette vil ingenting udskrive. Hvis vi prøver at udføre <link linkend="math"
>math</link
> med tomme containere vil vi få fejl. </para>

<sect2 id="variables">
<title
>Variabler: antal containere</title>
<para
>Lad os starte med et eksempel: <screen>
x = 3
print x
</screen
> I den første linje gøres bogstavet <userinput
>x</userinput
> til en  variable (tal-container). Som du ser bliver værdien af den variable <userinput
>x</userinput
> sat til 3. På den anden linje bliver værdien udskrevet.</para>
<para
>Bemærk at hvis vi ønskede at udskrive et <quote
>x</quote
> så skulle vi have skrevet <screen
>print "x"
</screen>
</para>
<para
>Det var nemt, nu til et lidt sværere eksempel: <screen>
A = 2004
B = 25
C = A + B

# den næste kommando udskriver "2029"
print C
backward 30
# den næste kommando udskriver "2004 plus 25"
print A + " plus " + B
backward 30
# den næste kommando udskriver "1979"
print A - B
</screen
> I de første to linjer bliver variablerne <userinput
>A</userinput
> og <userinput
>B</userinput
> sat til 2004 og 25. På den tredje linje bliver variablen <userinput
>C</userinput
> sat til <userinput
>A + B</userinput
>, som er 2029. Resten af eksemplet består af 3 <userinput
>print</userinput
> kommandoer med <userinput
>backward 30</userinput
> imellem. <userinput
>backward 30</userinput
> er der for at sørge for at hvert uddata er på en ny linje. I dette eksempel ser du også at variabler kan bruges i <link linkend="math"
>matematiske beregninger</link
>.</para>
</sect2>

<sect2 id="strings">
<title
>Containere som indeholder tekst (strenge)</title>
<para
>I programkode indledes og afsluttes almindelig tekst med citationstegn. Som vi allerede har set: <screen>
skriv "Hej, programmør!"
</screen
> Den almindelige tekst afgrænses af citationstegn. Denne almindelige tekst kalder vi en <link linkend="strings"
>streng</link
>.</para>
<para
>Strenge kan også opbevares i <link linkend="containers"
>containere</link
> ligesom <link linkend="number"
>tal</link
>Strenge er meget ligesom variabler. Den største forskel er at de indeholder tekst i stedet for tal. Derfor kan strenge ikke bruges i <link linkend="math"
>matematiske beregninger</link
> og  <link linkend="questions"
>spørgsmål</link
>. Et eksempel på brugen af strenge: <screen>
x = "Goddag "
name = inputwindow "indtast venligst dit navn..."
print x + name + ", hvordan går det?"
</screen
> I den første linje sættes strengen <userinput
>x</userinput
> til <quote
>Goddag</quote
>. I den anden linje sættes strengen <userinput
>name</userinput
> til uddata fra <userinput
>inputwindow</userinput
> kommandoen. På den tredje linje udskriver programmet en komposition af tre strenge på kanvassen.</para>
<para
>Dette program beder dig om at indtaste dit navn. Når du for eksempel indtaster navnet <quote
>Jesper</quote
>, udskriver programmet <quote
>Goddag Jesper, hvordan går det?</quote
>. Bemærk venligst at plusset (+) er det eneste matematiske symbol du kan bruge med strenge.</para>
</sect2>
</sect1>

<sect1 id="math">
<title
>Kan skildpadden lave matematik?</title>
<para
>Ja, &kturtle; kanlave matematik for dig. Du kan lægge sammen (+), trække fra (-), gange (*) og dividere (/). Her er et eksempel hvori vi bruger dem allesammen: <screen>
a = 20 - 5
b = 15 * 2
c = 30 / 30
d = 1 + 1
print "a: "+a+", b: "+b+", c: "+c+", d: "+d 
</screen
> Ved du hvilken værdi a, b, c og d har? Bemærk venligst brugen af <link linkend="assignment"
>tilknytnings</link
>symbolet <userinput
>=</userinput
>.</para>
<para
>Hvis du blot ønsker at en simpel beregning skal udføres kan du gøre noget i retning af dette: <screen
>print 2004-12
</screen
></para>
<para
>Nu et eksempel med parenteser: <screen>
print ( ( 20 - 5 ) * 2 / 30 ) + 1
</screen
> Det der er imellem parenteserne vil blive beregnet først. I dette eksepel, bliver 20-5 beregnet, så ganget med 2, divideret med 30, og derpå adderes 1 (hvilket giver 2).</para>
</sect1>

<sect1 id="questions">
<title
>Stille spørgsmål, få svar...</title>
<para
><link linkend="if"
><userinput
>if</userinput
></link
> og <link linkend="while"
><userinput
>while</userinput
></link
> er <link linkend="controlling-execution"
>udførselskontroller</link
> som vi vil diskutere i næste afsnit. I dette afsnit bruger vi  <link linkend="if"
><userinput
>if</userinput
></link
>-kommandoen til at forklare spørgsmål.</para>
<sect2 id="q">
<title
>Spørgsmål</title>
<para
>Et simpelt eksempel på et spørgsmål: <screen>
x = 6
if x &gt; 5 [
  print hello
]
</screen
> I  dette eksempel er spørgsmålet <userinput
>x &gt; 5</userinput
>, hvis svaret på dette spørgsmål er 'sand' så vil koden mellem parenteserne blive udført. Spørgsmål er en vigtig del af programmering og bruges ofte sammen med <link linkend="controlling-execution"
>udførselskontroller</link
>, såsom <link linkend="if"
><userinput
>if</userinput
></link
>. Alle tal og <link linkend="variables"
>variabler</link
> (tal-containere) kan sammenlignes med hianden med spørgsmål.</para>
<para
>Her er alle mulige spørgsmål: <table>
<title
>Typer af spørgsmål</title>
<tgroup cols="3">
<tbody>
<row>
<entry
><userinput
>a == b</userinput
></entry>
<entry
>er lig med</entry>
<entry
>svaret er <quote
>sand</quote
> hvis <userinput
>a</userinput
> er lig med <userinput
>b</userinput
></entry>
</row>
<row>
<entry
><userinput
>a != b</userinput
></entry>
<entry
>ikke lig med</entry>
<entry
>svaret er <quote
>sand</quote
> hvis <userinput
>a</userinput
> ikke er lig med <userinput
>b</userinput
></entry>
</row>
<row>
<entry
><userinput
>a &gt; b</userinput
></entry>
<entry
>større end</entry>
<entry
>svaret er <quote
>sand</quote
> hvis <userinput
>a</userinput
> er større end <userinput
>b</userinput
></entry>
</row>
<row>
<entry
><userinput
>a &lt; b</userinput
></entry>
<entry
>mindre end</entry>
<entry
>svaret er <quote
>sand</quote
> hvis <userinput
>a</userinput
> er mindre end <userinput
>b</userinput
></entry>
</row>
<row>
<entry
><userinput
>a &gt;= b</userinput
></entry>
<entry
>større end eller lig med</entry>
<entry
>svaret er <quote
>sand</quote
> hvis <userinput
>a</userinput
> er større end eller lig med  <userinput
>b</userinput
></entry>
</row>
<row>
<entry
><userinput
>a &lt;= b</userinput
></entry>
<entry
>mindre end eller lig med</entry>
<entry
>svaret er <quote
>sand</quote
> hvis <userinput
>a</userinput
> er mindre end eller lig med  <userinput
>b</userinput
></entry>
</row>
</tbody>
</tgroup>
</table>
</para>
<para
>Spørgsmål er <glossterm
>fremhævede</glossterm
> med lyseblåt i <link linkend="the-code-editor"
>kodeditoren</link
>.</para
> 
</sect2>

<sect2 id="question-glue">
<title
>Spørgsmålsklister</title>
<para
>Spørgsmålenes klisterord kan få nogle spørgsmål til at blive til et stort spørgsmål. <screen>
a = 1
b = 5
if a &lt; 5 and b == 5 [
  print goddag
]
</screen
>I dette eksempel bliver klister-ordet <userinput
>and</userinput
> brugt til at klistre 2 spørgsmål (<userinput
>a &lt; 5</userinput
>, <userinput
>b == 5</userinput
>) sammen. Hvis en side af <userinput
>and</userinput
> vil svare 'falsk' så vil hele spørgsmålet svare 'falsk', fordimed klister-ordet <userinput
>and</userinput
> skal begge sider være 'sand' for at svare 'sand'.  Glem endelig ikke parenteser rundt om spørgsmålene!</para>

<para
>Her er en skematisk oversigt, en mere detaljeret forklaring følger nedenfor: <table>
<title
>Spørgsmål klister-ord</title>
<tgroup cols="2">
<tbody>
<row>
<entry
><userinput
>and</userinput
></entry>
<entry
>Begge sider skal være 'sande' for at svaret er 'sand'</entry>
</row>
<row>
<entry
><userinput
>or</userinput
></entry>
<entry
>Hvis en af siderne er 'sand' så er svaret 'sand'</entry>
</row>
<row>
<entry
><userinput
>not</userinput
></entry>
<entry
>Specialtilfælde: virker kun for et spørgsmål. Ændrer 'sand' til 'falsk' og 'falsk' til 'sand'.</entry>
</row>
</tbody>
</tgroup>
</table>
</para>
<para
>Klisterord i spørgsmål er <glossterm
>fremhævede</glossterm
> med violet i <link linkend="the-code-editor"
>kodeditoren</link
>.</para>

<sect3 id="and">
<title
>and</title>
<para
>Når to spørgsmål klistres sammen med <userinput
>og</userinput
> skal begge sider af <userinput
>og</userinput
> være 'sande' for at resultatet skal være 'sandt'. Et eksempel: <screen>
a = 1
b = 5
if ((a &lt; 10) and (b == 5)) and (a &lt; b) [
  print "Hej"
]
</screen
> I dette eksempel ser du et spørgsmål klistret sammen med et andet spørgsmål.</para>
</sect3>

<sect3 id="or">
<title
>or</title>
<para
>Hvis et af de to spørgsmål som klistres sammen med <userinput
>eller</userinput
> er 'sandt' er resultatet 'sandt'. Et eksempel: <screen>
a = 1
b = 5
if ((a &lt; 10) or (b == 10)) or (a == 0) [
  print "Hej"
]
</screen
> I dette eksempel ser du et spørgsmål klistret  sammen med et andet spørgsmål.</para>
</sect3>

<sect3 id="not">
<title
>not</title>
<para
><userinput
>not</userinput
> er et specielt klisterord i spørgsmål eftersom det kun virker med et spørgsmål af gangen. <userinput
>not</userinput
> ændrer 'sand' til 'falsk' og 'falsk' til 'sand'. Et eksempel: <screen>
a = 1
b = 5
if not ((a &lt; 10) and (b == 5)) [
  print "Goddag"
]
else
[
  print "Farvel"
]
</screen
> I dette eksempel er det sammenklistrede spørgsmål 'sandt', men <userinput
>not</userinput
> ændrer det til 'falsk'. Altså skrives <userinput
>"Farvel"</userinput
> ud på <link linkend="the-canvas"
>kanvassen</link
>.</para>
</sect3>

</sect2>

</sect1>

<sect1 id="controlling-execution">
<title
>Udførselskontrol</title>
<para
>Udførselskontrol gør dig i stand til &mdash; som navnet antyder &mdash; at kontrollere udførslen.</para>
<para
>Kommandoer til at styre kørslen <glossterm
>fremhæves</glossterm
> med mørkegrønt og fed type. Kantede parenteser bruges som oftest sammen med kommandoer til at styre kørslen, og de er <glossterm
>fremhævet</glossterm
> med lysegrønt.</para>

<sect2 id="wait">
<title
>Lad skildpadden vente</title>
<para
>Hvis du har prøvet at programmere noget i &kturtle; har du måske bemærket at skildpadden kan være meget hurtig til at tegne. Denne kommando får skildpadden til at vente et givet stykke tid.</para>
  <variablelist>
    <varlistentry>
      <term
>wait</term>
      <listitem
><para
><screen
>wait X</screen>
<userinput
>wait</userinput
> lader skildpadden vente i X sekunder. <screen>
      repeat 36 [
        forward 5
        turnright 10
        wait 0.5
      ]
      </screen
> Denne kode tegne en cirkel, men skildpadden vil vente et halvt sekund ved hvert skridt. Dette giver indtrykket af en skildpadde der bevæger sig langsomt.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect2>

<sect2 id="if">
<title
>Udfør "if"</title>
  <variablelist>
    <varlistentry>
      <term
>if</term>
      <listitem
><para
><screen
>if <link linkend="questions"
>spørgsmål</link
> [ ... ]</screen>
Koden der er placeret på <quote
>...</quote
> vil kun blive udført hvis altså <userinput
>if</userinput
> svaret på <link linkend="questions"
>spørgsmålet</link
> er <quote
>sand</quote
>. Læs venligst mere om <link linkend="questions"
>spørgsmål</link
> i <link linkend="questions"
>spørgsmålsafsnittet</link
>. <screen>
      
      x = 6
      if x &gt; 5 [
        print "x er større end fem!"
      ]
      </screen
> På første linje sættes <userinput
>x</userinput
> til 6. På den anden linje stilles <link linkend="questions"
>spørgsmålet</link
> <userinput
>x &gt; 5</userinput
>. Da svaret på dette spørgsmål er <quote
>sand</quote
> vil udførselskontrollen <userinput
>if</userinput
> tillade koden mellem parenteserne at blive udført</para
></listitem>
    </varlistentry>
  </variablelist>
</sect2>

<sect2 id="while">
<title
>"while"-løkken</title>
  <variablelist>
    <varlistentry>
      <term
>while</term>
      <listitem
><para
><screen
>while <link linkend="questions"
>spørgsmål</link
> [ ... ]</screen>
Udførselskontrollen <userinput
>while</userinput
> er meget lige som <link linkend="if"
><userinput
>if</userinput
></link
>. Forskellen er at <userinput
>while</userinput
> bliver ved med at gentage (gå i løkke) koden mellem parenteserne indtil svaret på <link linkend="questions"
>spørgsmålet</link
> er <quote
>falsk</quote
>. <screen>
      x = 1
      while x &lt; 5 [
        forward 10
        wait 1
        x = x + 1
      ]
      </screen
> På den første linje sættes <userinput
>x</userinput
> til 1. På den anden linje stilles <link linkend="questions"
>spørgsmålet</link
> <userinput
>x &lt; 5</userinput
>. Da svaret på dette spørgsmål er <quote
>sand</quote
> starter udførselskontrollen <userinput
>while</userinput
> udførslen af koden mellem parenteserne indtil svaret på <link linkend="questions"
>spørgsmålet</link
> er <quote
>falsk</quote
>. I dette tilfælde vil koden mellem parenteserne blive udført 4 gange, fordi hver gang den femte linje udføres bliver <userinput
>x</userinput
> en større.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect2>

<sect2 id="else">
<title
>Hvis ikke, så med andre ord ellers: "else"</title>
  <variablelist>
    <varlistentry>
      <term
>else</term>
      <listitem
><para
><screen
>if spørgsmål [ ... ] else [ ... ]</screen>
<userinput
>else</userinput
> kan yderligere bruges i udførselskontrollen <link linkend="if"
><userinput
>if</userinput
></link
>. Koden mllem parenteserne efter <userinput
>else</userinput
> udføres kun hvis svaret på <link linkend="questions"
>spørgsmålet</link
> der stilles er <quote
>falsk</quote
>. <screen>
reset
x = 4
if x &gt; 5 [
  print "x er større end fem!"
]
else
[
  print "x er mindre end seks!"
]
      </screen
> Der <link linkend="questions"
>spørges</link
> om <userinput
>x</userinput
> er større end 5. Idet <userinput
>x</userinput
> er sat til 4 på den første linje er svaret på spørgsmålet <quote
>falsk</quote
>. Dette betyder at koden mellem parenteserne efter <userinput
>else</userinput
> bliver udført.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect2>

<sect2 id="for">
<title
>"for" løkken, en tælleløkke</title>
  <variablelist>
    <varlistentry>
      <term
>for</term>
      <listitem
><para
><screen
>for <userinput
>startpunkt</userinput
> til <userinput
>slutpunkt</userinput
> [ ... ]</screen>
<userinput
>for</userinput
> løkken er en <quote
>tælleløkke</quote
>, den tæller for dig. <screen>
      for x = 1 to 10 [
        print x * 7
        forward 15
      ]
      </screen
> Hver gang koden mellem parenteserne udføres bliver <userinput
>x</userinput
> et tal større, indtil x når tallet 10. Koden mellem parenteserne udskriver <userinput
>x</userinput
> ganget med 7. Efter dette program er færdigt vil du se syv-tabellen på kanvassen.</para
></listitem>
    </varlistentry>
  </variablelist>
</sect2>

</sect1>


<sect1 id="learn">
<title
>Lav dine egne kommandoer med <quote
>learn</quote
></title>
<para
><userinput
>learn</userinput
> er en meget speciel kommando, fordi den bruges til at lave dine egne kommandoer. Kommandoen du laver kan tage <glossterm linkend="input-output"
>inddata</glossterm
> og give <glossterm linkend="input-output"
>uddata</glossterm
> tilbage. Lad os kigge på hvordan en ny kommando laves. <screen>
learn circle x [
  repeat 36 [
    forward x
    turnleft 10
  ]
]
</screen
> Den nye kommando hedder <userinput
>circle</userinput
>. <userinput
>circle</userinput
> tager en <glossterm linkend="input-output"
>inddata</glossterm
>, et tal, til at sætte cirklens størrelse. <userinput
>circle</userinput
> giver ingen <glossterm linkend="input-output"
>uddata</glossterm
>. <userinput
>circle</userinput
> kommandoen kan nu bruges ligesom en normal kommando i resten af koden. Se dette eksempel: <screen
>learn circle X [
  repeat 36 [ 
    forward X 
    turnleft 10 
  ] 
] 

go 30,30 
circle 20

go 40,40 
circle 50  
</screen>
</para>
<para
>I det næste eksempel vil en kommando med en returværdi blive lavet. <screen>
reset

learn multiplyBySelf n [
  r = n * 1
  r = n * n
  return r
]
i = inputwindow "Indtast venligst et tal og tryk på o.k."
print i + " ganget med sig selv er: " + multiplyBySelf i
</screen
> I dette eksempel laves en ny kommando der hedder <userinput
>multiplyBySelf</userinput
>. Inddata for denne kommando bliver ganget med sig selv og derefter returneret, ved brug af <anchor id="return"/><userinput
>return</userinput
> kommandoen. <userinput
>return</userinput
> kommandoen er måden at få uddata fra en hjemmelavet funktion. </para>
</sect1>

</chapter>

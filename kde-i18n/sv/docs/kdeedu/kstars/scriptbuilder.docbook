<sect1 id="tool-scriptbuilder">
<title
>Verktyget Skriptbyggaren</title>
<indexterm
><primary
>Verktyg</primary>
<secondary
>Skriptbyggare</secondary>
</indexterm>

<para
>KDE-program kan styras externt från ett annat program, från en terminal, eller från ett skalskript med hjälp av protokollet för skrivbordskommunikation (Desktop COmmunication Protocol, <abbrev
>DCOP</abbrev
>). KStars utnyttjar den här funktionen för att tillåta att skapa skript med relativt komplicerade beteenden, som kan spelas upp när som helst. Detta kan till exempel användas för att skapa en demonstration i klassrummet för att illustrera astronomiska begrepp. </para>
<para
>Problemet med DCOP-skript är att skriva dem är lite grand som programmering, och kan verka vara en skrämmande uppgift för de som saknar programmeringsvana. Skriptbyggaren tillhandahåller ett grafiskt gränssnitt där man kan peka och klicka för att skapa KStars DCOP-skript, vilket gör det mycket enkelt att skapa komplexa skript. </para>

<sect2 id="sb-intro">
<title
>Introduktion till skriptbyggaren</title>

<para
>Innan förklaringen av hur skriptbyggaren används, följer en mycket kort inledning till alla grafiska komponenter: För mer information, använd funktionen "Vad är det här?". </para>

<screenshot>
<screeninfo
>Verktyget Skriptbyggare </screeninfo>
<mediaobject>
  <imageobject>
    <imagedata fileref="scriptbuilder.png" format="PNG"/>
  </imageobject>
  <textobject>
    <phrase
>Verktyget Skriptbyggare</phrase>
  </textobject>
</mediaobject>
</screenshot>

<para
>Skriptbyggaren visas i skärmbilden ovanför. Rutan till vänster är <firstterm
>Aktuellt skript</firstterm
>. Den visar listan med kommandon som utgör det aktuella arbetsskriptet. Rutan till höger är <firstterm
>Funktionsbläddraren</firstterm
>. Den visar listan med tillgängliga skriptfunktioner. Under funktionsbläddraren finns en liten ruta som visar kortfattad dokumentation av skriptfunktionen som är markerad i funktionsbläddraren. Panelen under rutan Aktuellt skript är rutan <firstterm
>Funktionsargument</firstterm
>. När en funktion är markerad i rutan Aktuellt skript, visar rutan objekt för att ange värden för alla argument som den markerade funktionen kräver. </para
><para
>Längs fönstrets överkant finns en rad knappar som gäller skriptet som helhet. Från vänster till höger är de: <guibutton
>Nytt skript</guibutton
>, <guibutton
>Öppna skript</guibutton
>, <guibutton
>Spara skript</guibutton
>, <guibutton
>Spara skript som...</guibutton
> och <guibutton
>Testa skript</guibutton
>. Knapparnas funktion bör vara uppenbar, möjligen med undantag för den sista knappen. Genom att trycka på <guibutton
>Testa skript</guibutton
>, görs ett försök att köra aktuellt skript i KStars huvudfönster. Du bör flytta skriptbyggarens fönster ur vägen innan du trycker på knappen, så att du kan se resultatet. </para
><para
>I fönstrets mitt finns en kolumn med knappar som hanterar individuella funktioner i skriptet. Uppifrån och ner är de: <guibutton
>Lägg till funktion</guibutton
>, <guibutton
>Ta bort funktion</guibutton
>, <guibutton
>Kopiera funktion</guibutton
>, <guibutton
>Flytta upp</guibutton
> och <guibutton
>Flytta ner</guibutton
>. <guibutton
>Lägg till funktion</guibutton
> lägger till funktionen som för närvarande är markerad i Funktionsbläddraren i rutan Aktuellt skript (du kan också lägga till en funktion genom att dubbelklicka på den). Övriga knappar hanterar funktionen som är markerad i rutan Aktuellt skript, genom att antingen ta bort den, duplicera den eller ändra dess position i det aktuella skriptet. </para>
</sect2>

<sect2 id="sb-using">
<title
>Använda skriptbyggaren</title>
<para
>För att illustrera hur skriptbyggaren används, presenterar vi ett kort handledningsexempel, där vi skapar ett skript som följer månen medan klockan går med accelererad hastighet. </para
><para
>Om vi ska följa månen, måste vi först peka skärmen mot den. Funktionen <firstterm
>lookToward</firstterm
> används för att göra detta. Markera funktionen i funktionsbläddraren, och observera dokumentationen som visas i rutan under funktionsbläddraren. Tryck på knappen <guibutton
>Lägg till funktion</guibutton
> för att lägga till funktionen i rutan Aktuellt skript. Rutan Funktionsargument innehåller nu en kombinationsruta som heter <quote
>Riktning</quote
>. Detta är riktningen som skärmen ska peka. Kombinationsrutan innehåller bara kompassens kardinalpunkter, inte månen eller något annat objekt. Du kan antingen skriva in <quote
>Moon</quote
> i rutan för hand, eller trycka på knappen <guibutton
>Objekt</guibutton
> för att använda fönstret <guilabel
>Sök objekt</guilabel
>. Här kan du välja månen i listan med namngivna objekt. Observera att som vanligt aktiveras automatiskt följning vid centrering på ett objekt, så det finns inget behov av att lägga till funktionen <firstterm
>setTracking</firstterm
> efter lookToward. </para
><para
>När vi nu har tagit hand om pekningen mot månen, vill vi som nästa steg få tiden att gå med en accelererad hastighet. Använd funktionen <firstterm
>setClockScale</firstterm
> för detta. Lägg till den i skriptet genom att dubbelklicka på den i funktionsbläddraren. Rutan Funktionsargument innehåller nu inställning av tidssteg för att ange önskat tidssteg för simulatorklockan. Ändra tidssteget till 3 timmar. </para
><para
>Ja, nu har vi pekat på månen och accelererat klockan. Nu vill vi bara att skriptet ska vänta flera sekunder medan skärmen följer månen. Lägg till funktionen <firstterm
>waitFor</firstterm
> i skriptet, och använd panelen Funktionsargument för att ange att det ska vänta i 20 sekunder innan det fortsätter. </para
><para
>För att avsluta, låt oss återställa klockans tidssteg till det normala värdet 1 sekund. Lägg till ytterligare ett anrop till setClockScale, och ställ in värdet 1 sek. </para
><para
>I själva verket är vi inte riktigt klara än. Vi bör troligen försäkra oss om att skärmen använder ekvatoriella koordinater innan skriptet följer månen med ett accelererat tidssteg. Annars, om skärmen använder horisontella koordinater, roterar den mycket snabbt med stora vinklar när månen går upp eller går ner. Det kan vara mycket förvirrande, och kan undvikas genom att ställa in visningsalternativet <firstterm
>UseAltAz</firstterm
> till <quote
>0</quote
>. För att ändra något visningsalternativ, använd funktionen <firstterm
>changeViewOption</firstterm
>. Lägg till funktionen i skriptet, och titta på rutan Funktionsargument. Där finns en kombinationsruta som innehåller en lista med alla alternativ som kan justeras av changeViewOption. Eftersom vi vet att vi vill använda alternativet UseAltAz, kunde vi helt enkelt välja det i kombinationsrutan. Listan är dock rätt lång, och det finns ingen förklaring av vad varje alternativ är till för. Därför kan det vara enklare att trycka på knappen <guibutton
>Bläddringsträd</guibutton
>, som visar ett fönster med en trädvy av tillgängliga alternativ, organiserade enligt ämne. Dessutom har varje alternativ en kort förklaring av vad det gör, och datatyp för alternativets värde. Vi hittar UseAltAz i kategorin <guilabel
>Alternativ för himmelskartan</guilabel
>. Markera bara alternativet och tryck på <guibutton
>Ok</guibutton
>, så väljes det i kombinationsrutan i rutan Funktionsargument. Till sist, ställ in värdet till <quote
>0</quote
> eller <quote
>false</quote
>. </para
><para
>Ytterligare ett steg: Att ändra UseAltAz i slutet på skriptet gör ingen nytta. Vi måste ändra det innan någonting annat händer. Försäkra dig om att funktionen är markerad i rutan Aktuellt skript, och tryck på knappen <guibutton
>Flytta upp</guibutton
> till den är första funktionen. </para
><para
>Nu när vi är klara med skriptet, bör vi spara det på disk. Tryck på knappen <guibutton
>Spara skript</guibutton
>. Då visas först ett fönster där du kan ange ett namn på skriptet, och fylla i ditt namn som författare. Skriv in <quote
>Följa månen</quote
> som namn, och ditt namn som författare, och tryck på <guibutton
>Ok</guibutton
>. Därefter ser du &kde;:s vanliga dialogruta för att spara en fil. Ange skriptets filnamn, och tryck på <guibutton
>Ok</guibutton
> för att spara det. Observera att om filnamnet inte slutar med <quote
>.kstars</quote
>, läggs ändelsen automatiskt till. Om du är nyfiken, kan du titta på skriptet med vilken texteditor som helst. </para
><para
>När vi nu har ett fullständigt skript, kan vi köra det på ett antal olika sätt. Från en terminal kan du helt enkelt köra skriptet, under förutsättning att en instans av KStars för närvarande kör. Som ett alternativ kan du köra skriptet inne i KStars med alternativet <guimenuitem
>Kör skript...</guimenuitem
> i menyn <guimenu
>Arkiv</guimenu
>. </para>
</sect2>

<sect2 id="sb-indi">
  <title
>Enhetsautomatisering med INDI</title>
  <para
>Enhetsschemaläggning och automatisering stöds för alla enheter som följer <link linkend="what-is-indi"
>INDI</link
>. Du kan koordinera hur många enheter som helst för att utföra komplexa åtgärder med &kstars; <link linkend="sb-intro"
>skriptbyggare</link
>. Det kan åstadkommas genom att använda &kstars; INDI DCOP-gränssnitt. INDI DCOP-funktionerna kan delas upp i fem olika klasser. Det följande är en genomgång av funktionerna som stöds i Kstars och deras argument. Du rekommenderas att läsa igenom avsnittet <link linkend="indi-concepts"
>INDI-koncept</link
> eftersom vi utnyttjar nyckelbegrepp från INDI i hela den här handledningen.</para>
  <orderedlist>
    <listitem
><para
>Generella enhetsfunktioner: Funktioner för att upprätta eller stänga av enheter, etc.</para>
      <itemizedlist>
	<listitem
><para
><function
>startINDI (QString deviceName, bool useLocal)</function
>: Upprätta en INDI-enhet antingen i lokalläge eller serverläge.</para
></listitem>
	<listitem
><para
><function
>shutdownINDI (QString deviceName)</function
>: Stäng av en INDI-enhet.</para
></listitem>
	<listitem
><para
><function
>switchINDI(QString deviceName, bool turnOn)</function
>: Koppla upp eller koppla ner en INDI-enhet.</para
></listitem>
	<listitem
><para
><function
>setINDIPort(QString deviceName, QString port)</function
>: Ställ in INDI-enhetens anslutningsport.</para
></listitem>
	<listitem
><para
><function
>setINDIAction(QString deviceName, QString action)</function
>: Aktivera en INDI-åtgärd. Åtgärden kan vara vilket <emphasis
>element</emphasis
> som helst i en <emphasis
>omställningsegenskap</emphasis
>.</para
></listitem>
	<listitem
><para
><function
>waitForINDIAction(QString deviceName, QString action)</function
>: Gör paus i körning av skriptet till angiven <emphasis
>åtgärdsegenskap</emphasis
> returnerar med status Ok.</para
></listitem>
      </itemizedlist>
    </listitem>
    <listitem
><para
>Teleskopfunktioner: Funktioner för att styra teleskoprörelser och status.</para>
      <itemizedlist>
	<listitem
><para
><function
>setINDIScopeAction(QString deviceName, QString action)</function
>: Ställ in teleskopets läge eller åtgärd. Tillgängliga alternativ är SLEW, TRACK, SYNC, PARK och ABORT.</para
></listitem>
	<listitem
><para
><function
>setINDITargetCoord(QString deviceName, double RA, double DEC)</function
>: Ställ in teleskopets JNow-målkoordinater till <emphasis
>RA</emphasis
> och <emphasis
>DEC</emphasis
>.</para
></listitem>
	<listitem
><para
><function
>setINDITargetName(QString deviceName, QString objectName)</function
>: Ställ in teleskopets JNow-målkoordinater till koordinaterna för <emphasis
>objectName</emphasis
>. Kstars slår upp objektnamnet i sin databas och hämtar RA och DEC när de har hittats.</para
></listitem>
	<listitem
><para
><function
>setINDIGeoLocation(QString deviceName, double longitude, double latitude)</function
>: Ställ in teleskopets geografiska plats till longitud och latitud som anges. Longituden mäts österut från Greenwich, i Storbritannien. Även om det är vanligt att använda negativa longituder för västra halvklotet, kräver dock INDI logitudvärden mellan 0 och 360 grader. Om du har en negativ longitud, addera helt enkelt 360 grader för att få värdet som INDI förväntar sig. Till exempel har Calgary i Kanada följande koordinater i &kstars;: Longitud -114 04 58 och latitud 51 02 58. Alltså skulle INDI behöva longituden 360 - 114,083 = 245,917 grader.</para
></listitem>
	<listitem
><para
><function
>setINDIUTC(QString ddeviceName, QString UTCDateTime)</function
>: Ställ in teleskopets UTC-tid med ISO 8601-format. Formatet är ÅÅÅÅ/MM/DDTTT:MM:SS.(t.ex. 2004-07-12T22:05:32).</para
></listitem>
      </itemizedlist>
    </listitem>
    <listitem
><para
>Kamera/CCD-funktioner: Funktioner för att styra kamera/CCD-egenskaper och status.</para>
      <itemizedlist>
	<listitem
><para
><function
>setINDICCDTemp(QString deviceName, int temp)</function
>: Ställ in CCD-kretsens måltemperatur i grader Celsius.</para
></listitem>
	<listitem
><para
><function
>setINDIFrameType(QString deviceName, QString type)</function
>: Ställ in CCD-ramtyp. Tillgängliga alternativ är FRAME_LIGHT, FRAME_BIAS, FRAME_DARK och FRAME_FLAT.</para
></listitem>
	<listitem
><para
><function
>startINDIExposure(QString deviceName, int timeout)</function
>: Starta exponering med CCD eller kamera med längden som anges av <emphasis
>timeout</emphasis
> i sekunder.</para
></listitem>
      </itemizedlist>
    </listitem
>    
   <listitem
><para
>Fokuseringsfunktioner: Funktioner för att styra fokuseringsenhetens rörelse och status.</para>
      <itemizedlist>
      <listitem
><para
><function
>setINDIFocusSpeed(QString deviceName, QString action)</function
>: Ange fokuseringsenhetens hastighet. Tillgängliga alternativ är FOCUS_HALT, FOCUS_SLOW, FOCUS_MEDIUM och FOCUS_FAST.</para
></listitem>
      <listitem
><para
><function
>setINDIFocusTimeout(QString deviceName, int timeout)</function
>: Ställ in tidsgränsen i sekunder för alla följande startINDIFocus-åtgärder.</para
></listitem>
      <listitem
><para
><function
>startINDIFocus(QString deviceName, int focusDir)</function
>: Flytta antingen fokuseringsenheten inåt (focusDir = 0) eller utåt (focusDir = 1). Åtgärdens hastighet och varaktighet anges av funktionerna <function
>setINDIFocusSpeed()</function
> och <function
>setINDIFocusTimeout()</function
>.</para
></listitem>
    </itemizedlist>
    </listitem>
   <listitem
><para
>Filterfunktioner: Funktioner för att styra filterpositioner.</para>
      <itemizedlist>
      <listitem
><para
><function
>setINDIFilterNum(QString deviceName, int filter_num)</function
>: Ändra filterposition till <varname
>filter_num</varname
>. Användaren kan tilldela alias för filternummer i dialogrutan <guimenuitem
>Anpassa INDI</guimenuitem
> under menyn <guimenu
>Enheter</guimenu
> (t.ex. Filter 1 = Röd, Filter 2 = Grön, etc.).</para
></listitem>
    </itemizedlist>
    </listitem>
    
  </orderedlist>
  
<para
>Observera att enhetsnamnet är det första argumentet i alla INDI-funktioner. Det tillåter att olika kommandon som ska skickas till olika INDI-enheter blandas i ett och samma skript. Verktyget Skriptbyggare tillhandahåller två alternativ för att underlätta att skapa och redigera INDI-skript:</para>
<itemizedlist>
  <listitem
><para
><option
>Lägg till WaitForINDIAction efter alla INDI-åtgärder</option
>: Om markerad, lägger skriptbyggaren automatiskt till <function
>waitForINDIAction()</function
> efter varje åtgärd som känns igen. Om du till exempel lägger till funktionen <function
>switchINDI()</function
> i skriptet och alternativet är markerat, lägger skriptbyggaren till "waitForINDIAction CONNECTION" i skriptfilen precis efter <function
>switchINDI()</function
>. Det gör att skriptet gör paus efter <function
>switchINDI()</function
> har utförts till <function
>switchINDI()</function
> returnerar med ok status (dvs. anslutning till enheten lyckades). Det är ytterst viktigt att veta att skriptbyggaren inte automatiskt kan lägga till <function
>waitForINDIAction()</function
> för generella åtgärder som läggs till med funktionen <function
>setINDIAction()</function
>. Det beror på att Kstars inte kan avgöra överliggande egenskap för generella åtgärder. Därför måste du lägga till <function
>waitForINDIAction()</function
> för hand efter generella åtgärder när det önskas.</para>
  </listitem>
  <listitem
><para
><option
>Återanvänd INDI-enhetsnamn</option
>: Om markerad fylls fältet enhetsnamn i alla efterföljande funktioner automatiskt i med det senaste enhetsnamnet. Det senaste enhetsnamnet ställs in varje gång funktionen <function
>startINDI()</function
> läggs till i det nuvarande skriptet. Vid arbete med flera enheter rekommenderas att alternativet inaktiveras.</para>
  </listitem>
</itemizedlist>

<para
>Nur är vi redo att skapa ett demonstrationsskript som styr teleskopet LX200 GPS, förutom Finger Lakes CCD-kamera. Vår uppgift är enkel. Vi ber teleskopet att panorera till och följa Mars, och därefter ber vi kameran att ta tre bilder 10 sekunder vardera åtskilda med 20 sekunder.</para>
<important
><para
>Eftersom det inte finns någon direkt återmatning från INDI DCOP-gränssnittet om förloppet, värden eller status för enhetsåtgärder och parametrar (förutom <function
>waitForINDIAction()</function
>), är enhetsautomatisering i Kstars likt ett styrsystem med öppen krets. I ett sådant system finns det oftast ingen direkt återmatning för att mäta systemets tillstånd och korrigera fel. Följaktligen måste du konstruera dina skript för enhetsautomatisering med stor eftertanke. Alla automatiseringsskript måste utsättas för noggrann utprovning innan de används.</para
></important>

<screenshot>
  <screeninfo
>Verktyget Skriptbyggare </screeninfo>
  <mediaobject>
    <imageobject>
      <imagedata fileref="indiscript.png" format="PNG"/>
    </imageobject>
    <textobject>
      <phrase
>Verktyget Skriptbyggare</phrase>
    </textobject>
  </mediaobject>
</screenshot>

<para
>Demonstrationsskriptet visas på skärmbilden ovan. Observera att vi markerade <option
>"Lägg till WaitForINDIAction efter alla INDI-åtgärder"</option
> och avmarkerade <option
>"Återanvänd INDI-enhetsnamn"</option
>. Den första funktionen att lägga till är <function
>startINDI()</function
> som visas ovan. Vi vill köra våra enheter lokalt, så vi ändrar inte tjänstläget som tillhandahålls i funktionens argumentfönster. Vi skriver in vårt enhetsnamn, och börjar med teleskopet "LX200 GPS". Vi upprepar samma åtgärd igen för "FLI CCD". Funktionen <function
>waitFor()</function
> anges därefter. Det rekommenderas i allmänhet att använda funktionen <function
>waitFor()</function
> omedelbart efter <function
>startINDI()</function
> för att göra paus i skriptet 1-5 sekunder. Det säkerställer att alla egenskaper har byggts och är klara att ta emot kommandon. Det är också användbart för att styra fjärrenheter, eftersom det kan ta en viss tid att hämta och bygga egenskaper. I nästa funktion, <function
>switchINDI()</function
>, ansluter vi till alla enheter.</para>

<para
>Eftersom <option
>"Lägg till WaitForINDIAction efter alla INDI-åtgärder"</option
> är markerad, behöver vi inte lägga till <function
>waitForINDIAction()</function
> efter <function
>switchINDI()</function
> för att säkerställa att vi bara fortsätter att köra skriptet efter vi har anslutit med lyckat resultat. Det beror på att skriptbyggaren gör det automatiskt åt oss när vi sparar skriptet. Låt oss nu ställa in teleskopets läge till följning. Klicka på funktionen <function
>setINDIScopeAction()</function
> och välj TRACK. Observera att vi måste ställa in teleskopet till följning <emphasis
>innan</emphasis
> koordinaterna som det ska följa anges. Funktionen <function
>setINDIScopeAction()</function
> tillhandahålls av bekvämlighetsskäl, eftersom den bara utför den generella funktionen <function
>setINDIAction()</function
> följt av nyckelordet TRACK i det här exemplet. Dock är fördelen att använda <function
>setINDIScopeAction()</function
> att Kstars automatiskt kan lägga till <function
>waitForINDIAction()</function
> efteråt när det krävs. Detta är inte automatiskt tillgängligt för generella åtgärder, som vi tidigare beskrivit.</para>

<para
>Därefter använder vi funktionen <function
>setINDITargetName()</function
> och anger Mars. Till sist omfattar de sista få stegen att fånga en bild under 10 sekunder, vilket kan göras genom att använda funktionen <function
>startINDIExposure()</function
> och vänta 20 sekunder mellan anropen, vilket kan göras genom att använda funktionen <function
>waitFor()</function
> med värdet 20.</para>

<para
>Nu kan vi spara skriptet och köra det när som helst. Det sparade skriptet liknar det följande:</para>
<blockquote
><programlisting
>#!/bin/bash
    #KStars DCOP-skript: Demoskript
    #av Jasem Mutlaq
    #senaste ändring: Tor Jan 6 2005 09:58:26
    #
    KSTARS=`dcopfind -a 'kstars*'`
    MAIN=KStarsInterface
    CLOCK=clock#1
    dcop $KSTARS $MAIN  startINDI "LX200 GPS" true
    dcop $KSTARS $MAIN  startINDI "FLI CCD" true
    dcop $KSTARS $MAIN  waitFor 3
    dcop $KSTARS $MAIN  switchINDI "LX200 GPS" true
    dcop $KSTARS $MAIN  waitForINDIAction "LX200 GPS" CONNECTION
    dcop $KSTARS $MAIN  switchINDI "FLI CCD" true
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" CONNECTION
    dcop $KSTARS $MAIN  setINDIScopeAction "LX200 GPS" TRACK
    dcop $KSTARS $MAIN  waitForINDIAction "LX200 GPS" ON_COORD_SET
    dcop $KSTARS $MAIN  setINDITargetName "LX200 GPS" Mars
    dcop $KSTARS $MAIN  waitForINDIAction "LX200 GPS" EQUATORIAL_EOD_COORD
    dcop $KSTARS $MAIN  startINDIExposure "FLI CCD" 10
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" EXPOSE_DURATION
    dcop $KSTARS $MAIN  waitFor 20
    dcop $KSTARS $MAIN  startINDIExposure "FLI CCD" 10
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" EXPOSE_DURATION
    dcop $KSTARS $MAIN  waitFor 20
    dcop $KSTARS $MAIN  startINDIExposure "FLI CCD" 10
    dcop $KSTARS $MAIN  waitForINDIAction "FLI CCD" EXPOSE_DURATION
</programlisting>
</blockquote>

<note>
<para
>INDI-biblioteket tillhandahåller tåliga skriptverktyg som gör det möjligt för utvecklare att komponera mycket komplexa skript. För mer detaljerad information, se <ulink url="http://indi.sourceforge.net/manual/book1.html"
>INDI Developer Manual</ulink
>.</para>
</note>
</sect2>
</sect1>


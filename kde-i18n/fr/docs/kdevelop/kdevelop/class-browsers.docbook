<chapter id="class-browsers">
<title
>Les navigateurs de classes</title>
<indexterm zone="class-browsers"
><primary
>navigateur de classes</primary
></indexterm>

<para
>Quand vous travaillez sur un projet dans un langage orienté objet, votre attention ne se porte pas sur les fichiers sources et leurs noms, mais sur les classes et leurs relations. Afin de vous aider à naviguer dans l'espace des classes et des symboles définis, &kdevelop; offre divers navigateurs de classes qui visualisent la structure des classes de différentes manières. </para>

<sect1 id="classview">
<title
>Vue des classes</title>

<para
>Cette vue est affichée sur le côté gauche de la fenêtre principale et contient une liste linéaire de toutes les classes, variables et fonctions de votre projet. Elle est conçue sous la forme d'une vue arborescente. Si vous ouvrez un nœud de classe en cliquant dessus, une liste contenant toutes les méthodes et attributs de la classe respective est affichée. </para>

<figure id="screenshot-classview" float="1">
<title
>Une copie d'écran de la vue des classes</title>
<mediaobject>
<imageobject
><imagedata fileref="classview.png"/></imageobject>
</mediaobject>
</figure>

<para
>La vue des classes fonctionne dans deux modes différents. Par défaut, tous les symboles sont groupés en « classes », « structs », « fonctions », « variables » et « espaces de noms ». Dans le menu contextuel de la vue, vous pouvez choisir <guimenuitem
>Liste par espaces de noms</guimenuitem
>. Dans ce mode, la hiérarchie des espaces de noms est affichée et les symboles groupés dans l'espace de noms respectif où ils sont définis. Ce peut être plus utile dans les projets qui emploient intensivement les noms d'espaces (imbriqués), moins utile dans les projets sans espaces de noms. </para>

<para
>Vous pouvez également changer la manière dont les noms de classes sont affichés. Normalement, les noms des classes sont présentés sans l'espace de noms dans lequel ils sont définis. Cela signifie que vous ne pouvez pas distinguer immédiatement les classes du même nom dans des espaces de noms différents. Si vous laissez un laissez un instant votre souris sur un élément, le nom pleinement étendu s'affiche sous la forme d'une infobulle néanmoins. Vous pouvez décider de toujours afficher le nom de classe pleinement étendu en choisissant <guimenuitem
>Portées des identifiants complets</guimenuitem
> dans le menu contextuel. </para>

<para
>Cliquer sur une classe ou une méthode dans la vue des classes fait apparaître sa définition. Vous pouvez également passer directement à la déclaration d'une méthode en choisissant <guimenuitem
>Aller à la déclaration</guimenuitem
> dans le menu contextuel. Dans le menu contextuel pour les classes, se trouvent aussi les éléments <guimenuitem
>Ajouter une méthode...</guimenuitem
> et <guimenuitem
>Ajouter un attribut...</guimenuitem
>. Ceux-ci ouvrent des boîtes de dialogue où vous pouvez générer une nouvelle déclaration de méthode et de variable dans la classe respective, associée à une implémentation vide. </para>

</sect1
> <!-- classview -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<sect1 id="classtools">
<title
>Outils pour la gestion des classes</title>

<para
>La boîte de dialogue des outils pour la gestion des classes est activée dans la vue des classes et en choisissant <guimenuitem
>Outils pour la gestion des classes...</guimenuitem
>. </para>

</sect1
> <!-- classtools -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<sect1 id="classhierarchy">
<title
>Hiérarchie des classes</title>

<para
>(... à écrire ...) </para>

</sect1
> <!-- classhierarchy -->

</chapter
> <!-- class-browsers -->

<!-- ====================================================================== -->

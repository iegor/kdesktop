<!--Dear translator: please NEVER translate the id or anything inside the tags as they are needed in english by the application
     Thanks a lot in advance.-->
<chapter id="Glossary">
<title
>Glossaire</title>

<para
>Dans ce chapitre, vous trouverez une explication de la plupart des mots <quote
>difficiles</quote
> qui sont utilisés dans ce guide de l'utilisateur.</para>

<glosslist>
<glossentry id="degrees">
<glossterm
>degrés</glossterm>
<glossdef
><para
>Les degrés sont les unités de mesure des angles ou des tournants. Un tour complet est 360 degrés, un demi tour est 180 degrés et un quart de tour est 90 degrés. Les commandes <userinput
>tournegauche</userinput
>, <userinput
>tournedroite</userinput
> et <userinput
>direction</userinput
> demandent une entrée en degrés.</para
></glossdef>
</glossentry>

<glossentry id="input-output">
<glossterm
>entrée et sortie des commandes</glossterm>
<glossdef
><para
>Certaines commandes reçoivent une entrée, d'autres commandes donnent une sortie, certaines commandes reçoivent une entrée <emphasis
>et</emphasis
> donnent une sortie et d'autres commandes ne reçoivent pas d'entrée ni ne donnent de sortie.</para>
<para
>Voici des exemples de commandes qui ne reçoivent que des entrées : <screen>
avance 50
couleurcrayon 255,0,0
écris "Bonjour ! "
</screen
> La commande <userinput
>avance</userinput
> reçoit <userinput
>50</userinput
> comme entrée. <userinput
>avance</userinput
> a besoin de cette entrée pour savoir de combien de <glossterm linkend="pixels"
>pixels</glossterm
> la tortue doit avancer. <userinput
>couleurcrayon</userinput
> prend une couleur comme entrée et <userinput
>écris</userinput
> prend une chaîne de caractères (un bout de texte) comme entrée. Veuillez noter que l'entrée peut aussi être un conteneur. L'exemple suivant illustre cela : <screen
>x = 50
écris x
str = "Bonjour ! "
écris str
</screen
></para>

<para
>Maintenant quelques exemples de commandes qui donnent une sortie : <screen>
x = fenêtreentrée "Veuillez saisir quelque chose et faire Entrée... Merci ! "
r = hasard 1,100
</screen
> La commande <userinput
>fenêtreentrée</userinput
> reçoit une chaîne de caractères comme entrée et en sortie le nombre ou la chaîne qui est entrée. Comme vous pouvez le voir, la sortie de <userinput
>fenêtreentrée</userinput
> est stockée dans le conteneur <userinput
>x</userinput
>. La commande <userinput
>hasard</userinput
> donne aussi une sortie. Dans ce cas, la sortie est un nombre entre 1 et 100. La sortie de hasard est ensuite stockée dans un conteneur appelé <userinput
>r</userinput
>. Veuillez noter que les conteneurs <userinput
>x</userinput
> et <userinput
>r</userinput
> ne sont pas utilisés dans l'exemple de code ci-dessus.</para>

<para
>Il existe aussi des commandes qui ne reçoivent pas d'entrée et qui ne donnent pas de sortie. Voici quelques exemples : <screen
>nettoietout
lèvecrayon
enroule
cache
</screen>
</para
></glossdef>
</glossentry>

<glossentry id="intuitive-highlighting">
<glossterm
>coloration syntaxique</glossterm>
<glossdef
><para
>Ceci est une caractéristique de &kturtle; qui rend la programmation vraiment lus facile. Avec la coloration syntaxique, le code que vous écrivez prend une couleur qui indique de quel type de code il s'agit. Dans la liste suivante, vous trouverez les différents types de code ainsi que la couleur qu'ils auront dans <link linkend="the-code-editor"
>l'éditeur de code</link
>. <table>
<title
>Les différents types de code et leur coloration syntaxique</title>
<tgroup cols="3">
<tbody>
<row>
<entry
>commandes habituelles</entry>
<entry
>vert foncé</entry>
<entry
>Les commandes habituelles sont décrites <link linkend="commands"
>ici</link
>.</entry>
</row>
<row>
<entry
>contrôleurs d'exécution</entry>
<entry
>noir (gras)</entry>
<entry
>Pour en savoir plus sur les commandes spéciales des contrôleurs d'exécution, veuillez voir <link linkend="controlling-execution"
>ici</link
>.</entry>
</row>
<row>
<entry
>commentaires</entry>
<entry
>jaune foncé</entry>
<entry
>Les lignes qui sont commentées débutent par le caractère de commentaire (#). Ces lignes sont ignorées lorsque le code est exécuté. Les commentaires permettent au programmeur d'expliquer son code ou ils peuvent aussi être utilisés pour empêcher temporairement une partie du code d'être exécutée.</entry>
</row>
<row>
<entry
>crochets [, ]</entry>
<entry
>vert clair (gras)</entry>
<entry
>Les crochets sontutilisés pour grouper des portions de code. Les crochets sont souvent utilisés en conjonction avec <link linkend="controlling-execution"
>les contrôleurs d'exécution</link
>.</entry>
</row>
<row>
<entry
>la commande <link linkend="learn"
>apprends</link
></entry>
<entry
>vert clair (gras)</entry>
<entry
>La commande <link linkend="learn"
>apprends</link
> est utilisée pour créer de nouvelles commandes.</entry>
</row>
<row>
<entry
>nombres</entry>
<entry
>bleu</entry>
<entry
>Les nombres, il n'y a rien à dire sur eux.</entry>
</row>
<row>
<entry
>chaînes</entry>
<entry
>rouge foncé</entry>
<entry
>Il n'y a pas non plus grand-chose à dire sur les chaînes de caractère (texte) sauf qu'elles commentcent et finissent toujours avec des guillemets doubles (").</entry>
</row>
<row>
<entry
>caractères mathématiques</entry>
<entry
>gris</entry>
<entry
>Il s'agit des caractères mathématiques : +, -, *, /, (, et ). Voir <link linkend="math"
>ici</link
> pour en savoir plus.</entry>
</row>
<row>
<entry
>caractères pour les questions</entry>
<entry
>bleu (gras)</entry>
<entry
>Pour en savoir plus sur les questions, veuillez lire <link linkend="questions"
>ici</link
>.</entry>
</row>
<row>
<entry
>questions mot collant</entry>
<entry
>rose</entry>
<entry
>Pour en savoir plus sur les mots collants, veuillez lire (et, ou, non) <link linkend="question-glue"
>ici</link
>.</entry>
</row>
<row>
<entry
>texte normal</entry>
<entry
>noir</entry>
<entry
></entry>
</row>
</tbody>
</tgroup>
</table>
</para
></glossdef>
</glossentry>

<glossentry id="pixels">
<glossterm
>pixels</glossterm>
<glossdef
><para
>verrez que l'écran de votre moniteur utilise des pixels. Toutes les images sur l'écran sont construites avec ces pixels. Un pixel est la plus petite chose qui puisse être dessinée sur l'écran.</para>
<para
>Beaucoup de commandes demandent un nombre de pixels comme entrée. Ces commandes sont : <userinput
>avance</userinput
>, <userinput
>recule</userinput
>, <userinput
>va</userinput
>, <userinput
>vax</userinput
>, <userinput
>vay</userinput
>, <userinput
>taillecanevas</userinput
> et <userinput
>taillecrayon</userinput
>.</para
></glossdef>
</glossentry>

<glossentry id="rgb">
<glossterm
>Les combinaisons RGB (codes de couleur)</glossterm>
<glossdef
><para
>Les combinaisons RGB sont utilisées pour décrire les couleurs. Le <quote
>R</quote
> veut dire <quote
>rouge</quote
>, le <quote
>G</quote
> veut dire <quote
>vert</quote
> et le <quote
>B</quote
> signifie <quote
>bleu</quote
>. Un exemple d'une combinaison RGB est <userinput
>255,0,0</userinput
> : la première valeur (<quote
>rouge</quote
>) est 255 et les autres sont fixées à zéro, cela représente donc un rouge vif. Chaque valeur dans une combinaison RGB doit être comprise entre 0 et 255. Voici une courte liste des combinaisons RGB les plus souvent utilisées : <table frame="none">
<title
>Les combinaisons RGB les plus souvent utilisées</title>
<tgroup cols="2" colsep="5" rowsep="1">
<colspec colname="c1"/>
<tbody>
<row
><entry
><userinput
>0,0,0</userinput
></entry
><entry
>noir</entry
></row>
<row
><entry
><userinput
>255,255,255</userinput
></entry
><entry
>blanc</entry
></row>
<row
><entry
><userinput
>255,0,0</userinput
></entry
><entry
>rouge</entry
></row>
<row
><entry
><userinput
>150,0,0</userinput
></entry
><entry
>rouge foncé</entry
></row>
<row
><entry
><userinput
>0,255,0</userinput
></entry
><entry
>vert</entry
></row>
<row
><entry
><userinput
>0,0,255</userinput
></entry
><entry
>bleu</entry
></row>
<row
><entry
><userinput
>0,255,255</userinput
></entry
><entry
>bleu clair</entry
></row>
<row
><entry
><userinput
>255,0,255</userinput
></entry
><entry
>rose</entry
></row>
<row
><entry
><userinput
>255,255,0</userinput
></entry
><entry
>jaune</entry
></row>
</tbody>
</tgroup>
</table>
</para>
<para
>Pour trouver facilement la combinaison RGB correspondante à une couleur vous devriez utiliser le sélecteur de couleur ! Vous pouvez ouvrir le sélecteur de couleur en choisissant le menu <link linkend="tools-color-picker"
><menuchoice
><guimenu
>Outils</guimenu
><guimenuitem
>sélecteur de couleur</guimenuitem
></menuchoice
></link
>.</para>
<para
>Deux commandes ont besoin d'une combinaison RGB combination comme entrée : ces commandes sont <userinput
>couleurcanevas</userinput
> et <userinput
>couleurcrayon</userinput
>.</para
></glossdef>
</glossentry>

<glossentry id="sprite">
<glossterm
>lutin (<foreignphrase
>sprite</foreignphrase
>)</glossterm>
<glossdef
><para
>Un lutin est une petite image qui peut bouger sur l'écran. Notre chère tortue, par exemple, est un lutin.</para>
<para
>Note : dans cette version de &kturtle; le lutin ne peut changer de tortue en quelque chose d'autre. Dans les versions futures de &kturtle;, ce sera possible.</para
></glossdef>
</glossentry>

<glossentry id="wrapping">
<glossterm
>Le bouclage</glossterm>
<glossdef
><para
>Le bouclage est ce qui arrive lorsque la tortue dessine quelque chose de trop gros pour tenir sur le canevas et lorsqu'enrouler est choisi. <screenshot
> <screeninfo
>Voici ce qui arrive lorsqu'enrouler est choisi</screeninfo
> <mediaobject
> <imageobject
> <imagedata fileref="wrapping.png" format="PNG"/> </imageobject
> <textobject
> <phrase
>Le bouclage dans un exemple</phrase
> </textobject
> </mediaobject
> </screenshot
> Lorsque la tortue sort du bord du canevas, elle revient instantanément sur l'autre bord pour pouvoir continuer son dessin. De cette façon la tortue restera toujours sur l'écran pendant qu'elle bouge. Cela est le résultat de la configuration enroule.</para>
<para
>Le bouclage peut être choisi avec les commandes <userinput
>enrouler</userinput
> et <userinput
>dérouler</userinput
>. Lorsque &kturtle; démarre, le bouclage est choisi par défaut.</para
></glossdef>
</glossentry>

</glosslist>

</chapter>
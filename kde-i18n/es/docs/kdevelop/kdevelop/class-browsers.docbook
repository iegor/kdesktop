<chapter id="class-browsers">
<title
>Los navegadores de clases</title>
<indexterm zone="class-browsers"
><primary
>navegador de clases</primary
></indexterm>

<para
>Cuando esté trabajando en un proyecto con un lenguaje orientado a objetos, su atención no estará centrada en los archivos de código fuente y en sus nombres, sino en las clases y en sus relaciones. Para ayudarle a navegar por el espacio de las clases y símbolos definidos, &kdevelop; incluye varios navegadores de clases que visualizan su estructura de diferentes modos. </para>

<sect1 id="classview">
<title
>Vista de clases</title>

<para
>Esta vista se muestra a la izquierda de la ventana principal y contiene una lista lineal de todas las clases, variables y funciones de su proyecto. Ha sido diseñada como una vista en árbol. Si abre el nodo de una clase pulsando sobre él, se mostrará una lista con todos los métodos y atributos de dicha clase. </para>

<figure id="screenshot-classview" float="1">
<title
>Una captura de la vista de clases</title>
<mediaobject>
<imageobject
><imagedata fileref="classview.png"/></imageobject>
</mediaobject>
</figure>

<para
>La vista de clases funciona en dos modos distintos. De manera predeterminada, todos los símbolos están agrupados en <quote
>clases</quote
>, <quote
>estructuras</quote
>, <quote
>funciones</quote
>, <quote
>variables</quote
> y <quote
>espacios de nombres</quote
>. En el menú de contexto de la vista puede seleccionar <guimenuitem
>Listar por espacios de nombres</guimenuitem
>. En este modo se muestra la jerarquía de espacios de nombres, y los símbolos están agrupados bajo los espacios de nombres en los que están definidos. Esto puede ser más útil en proyectos que hacen un uso extensivo de espacios de nombres (anidados). No será tan útil en los proyectos que no manejan espacios de nombres. </para>

<para
>También puede cambiar el modo en el que se muestran los nombres de las clases. Normalmente, se muestran sin el espacio de nombres en el que están definidas. Esto significa que no podrá distinguir inmediatamente entre clases que tengan el mismo nombre en diferentes espacios de nombres. Si deja unos segundos el cursor del ratón sobre un elemento de la lista de clases, se mostrará el nombre completo de la clase (incluyendo su alcance) como ayuda emergente. Puede optar por mostrar siempre este nombre completo seleccionando en el menú <guimenuitem
>Alcances de identificadores completos</guimenuitem
>. </para>

<para
>Al pulsar sobre una clases o sobre uno de sus métodos se muestra su definición. También puede saltar a la declaración de un método seleccionando <guimenuitem
>Ir a declaración</guimenuitem
> en el menú de contexto. En el menú de contexto de las clases también encontrará <guimenuitem
>Añadir método...</guimenuitem
> y <guimenuitem
>Añadir atributo...</guimenuitem
>. Estas opciones abren diálogos donde puede generar nuevos métodos y declarar variables en la clase respectiva, junto a una implementación vacía. </para>

</sect1
> <!-- classview -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<sect1 id="classtools">
<title
>Herramientas de clases</title>

<para
>El diálogo de herramientas de clases se activa al pulsar sobre una clase de la vista de clases con el botón derecho del ratón y seleccionando la opción <guimenuitem
>Herramienta de clases...</guimenuitem
> </para>

</sect1
> <!-- classtools -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<sect1 id="classhierarchy">
<title
>Jerarquía de clases</title>

<para
>(... pendiente de escribir ...) </para>

</sect1
> <!-- classhierarchy -->

</chapter
> <!-- class-browsers -->

<!-- ====================================================================== -->

<article lang="&language;" id="fish">
<title
>fish</title>
<articleinfo>
<authorgroup>
<author
>&Joerg.Walter; &Joerg.Walter.mail;</author>
<author
>&Brad.Hards; &Brad.Hards.mail;</author>
<othercredit role="translator"
> <firstname
>Marcos</firstname
> <surname
>Fouces Lago</surname
> <affiliation
><address
><email
>mfouces@yahoo.es</email
></address
></affiliation
> <contrib
>Traductor</contrib
> </othercredit
> 
</authorgroup>

<date
>2005-02-29</date>
<releaseinfo
>1.1.2</releaseinfo>

</articleinfo>

<para
>Le permite acceder a archivos de otros ordenadores utilizando el protocolo SEcure Shell (<acronym
>SSH</acronym
>). El ordenador remoto necesita que se esté ejecutando el demonio <acronym
>SSH</acronym
>, pero el resto del protocolo utiliza herramientas estándar de la línea de órdenes, tal y como se comentará a continuación.</para>

<para
>Utilice este kioslave de la siguiente manera: <userinput
>fish://<replaceable
>nombreservidor</replaceable
></userinput
> o <userinput
>fish://<replaceable
>nombreusuario</replaceable
>@<replaceable
>nombreservidor</replaceable
></userinput
></para>

<note
><para
>Necesitará utilizar dobles barras.</para
></note>

<para
>Puede omitir el <replaceable
>nombre del usuario</replaceable
> (y el siguiente símbolo @) si tiene el mismo nombre de usuario en ambos ordenadores.</para>

<para
>Podrá dar también su contraseña así: <userinput
>fish://<replaceable
>nombreusuario</replaceable
>:<replaceable
>contraseña</replaceable
>@<replaceable
>nombreservidor</replaceable
></userinput
> aunque no es necesario porque el sistema se la preguntará si no lo hace.</para>

<para
>Si está ejecutando el demonio <acronym
>SSH</acronym
> en un puerto no estándar, puede especificar este puerto utilizando la sintaxis normal de &URL;: <userinput
>fish://<replaceable
>nombreservidor</replaceable
>:<replaceable
>númeropuerto</replaceable
></userinput
>.</para>

<para
>Fish debería funcionar en cualquier ordenador remoto basado en &UNIX; y que sea más o menos compatible con <acronym
>POSIX</acronym
>. Utiliza las órdenes <command
>cat</command
>, <command
>chgrp</command
>, <command
>chmod</command
>, <command
>chown</command
>, <command
>cp</command
>, <command
>dd</command
>, <command
>env</command
>, <command
>expr</command
>, <command
>grep</command
>, <command
>ls</command
>, <command
>mkdir</command
>, <command
>mv</command
>, <command
>rm</command
>, <command
>rmdir</command
>, <command
>sed</command
>, y <command
>wc</command
>. Fish inicia <command
>/bin/sh</command
> como intérprete de órdenes y presupone que este sea un intérprete Bourne (o compatible, como <command
>bash</command
>). Si las órdenes <command
>sed</command
> y <command
>file</command
> están disponibles, así como un archivo <filename
>/etc/apache/magic</filename
> con las firmas de tipos &MIME;, se utilizarán para intentar determinar los tipos &MIME;. </para>

<para
>Si <application
>Perl</application
> está disponible en la máquina remota, será utilizado en su lugar. Entonces sólo serán necesarios <command
>env</command
> y <command
>/bin/sh</command
>. El uso de <application
>Perl</application
> tiene la ventaja adicional de ser más rápido.</para>

<para
>Fish podría funcionar incluso en máquinas &Windows;, si se instalan herramientas como <application
>Cygwin</application
>. Todas las utilidades antes mencionadas deben estar en la ruta predeterminada del sistema (<envar
>PATH</envar
>), y el intérprete de órdenes inicial debe ser capaz de procesar la orden <command
>echo FISH:;/bin/sh</command
> correctamente.</para>

</article>

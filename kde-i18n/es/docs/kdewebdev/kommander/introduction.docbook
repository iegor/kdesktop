<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="introduction">
<chapterinfo>
<title
>Introducción</title>
<authorgroup>
<author
><firstname
>Eric</firstname
> <surname
>Laffoon</surname
> <affiliation
> <address
><email
>sequitur@kde.org</email
></address>
</affiliation>
</author>

<othercredit role="translator"
><firstname
>Juan Manuel</firstname
> <surname
>García Molina</surname
> <affiliation
><address
><email
>juanma@superiodico.net</email
></address
></affiliation
><contrib
>Traductor</contrib
></othercredit
> 

</authorgroup>
</chapterinfo>

<title
>Introducción</title>

<para
>&kommander; es una herramienta visual para construir cuadros de diálogo, que se puede expandir para crear aplicaciones de ventana principal completas. El primer objetivo es crear tanta funcionalidad como sea posible sin usar un lenguaje de guiones. Se proporcionan las siguientes características: </para>

<itemizedlist>


  <listitem
><para
>Los especiales vienen precedidos de una <quote
>@</quote
>, como @widgetText. Los especiales también ofrecen otras características como el valor de un widget, funciones, aliases, variables globales y demás.</para
></listitem>


<listitem
><para
>La integración con &DCOP; permite a los cuadros de diálogo de &kommander; controlar y ser controlados en las interacciones con otras aplicaciones de &kde;. Esta característica es muy poderosa.</para
></listitem>

<listitem
><para
>Las señales y los slots son menos intuitivos para los usuarios noveles. Se está revisando cómo procesar las cosas en la próxima versión principal. Ofrecen un modelo de eventos limitados para cuando se pulse un botón o cambie un widget. En combinación con el <quote
>Texto de la población</quote
>, son bastante poderosos.</para
></listitem>
</itemizedlist>

<para
>La característica clave de los cuadros de diálogo de &kommander; es que puede enlazar texto (&kommander; Text) a un widget. Así, si tiene @widget1 y @widget2 y son líneas de edición, puede definir que &kommander; muestre su contenido introduciendo @widgetText en el área de texto de &kommander;. Luego introduzca hola en @widget1 y mundo en @widget2. Un botón puede tener la cadena Mi primer programa @widget1 @widget2 en &kommander;. Si ejecuta este cuadro de diálogo desde una consola, la salida que obtendrá será Mi primer programa hola mundo en &kommander;. </para>

<para
>Con suerte, comenzará a ver una tenue luz de todo el potencial. &kommander; le permite un modelo de desarrollo muy rápido para aplicaciones sencillas porque le evita pensar demasiado en el lenguaje e invertir todas esas energías en un modelo conceptual más básico y natural. En los lenguajes de programación, se pretende definir conceptos y poner una capa entre los conceptos y la implementación que impida progresar sin tener en cuenta las minucias. &kommander; pretende minimizar esta capa. </para>

<para
>&kommander; también pretende construirse según los estándares. Se construye con el entorno de trabajo &Qt; Designer y crea archivos *.ui que renombra a *.kmdr. Puede importar de forma sencilla widgets de &kde; y puede hacer todo esto sin tener que recompilar &kommander;, usando complementos. </para>

<para
>Otro factor significativo de &kommander; es cómo afronta los requisitos del lenguaje. Los lenguajes de programación pueden ser cosas maravillosas, pero tienden a tener sus propios dogmas y los zelotas a menudo consiguen proporcionar un avance al diseño de &GUI; en un entorno de desarrollo integrado. Irónicamente, la aceptación de ese &IDE; es limitado, porque hay mucha gente deseando adoptar un lenguaje todavía más nuevo que tenga acceso a una característica deseada. Ciertamente, no es razonable esperar que la gente tenga que cambiar una docena de ves entre lenguajes para tener acceso a varios juegos de características. Al ser neutrales en cuanto al lenguaje y permitir que un cuadro de diálogo se pueda extender usando cualquier lenguaje de guiones, &kommander; se posiciona como una opción de amplio espectro. Se pueden usar varios lenguajes de guiones en un mismo cuadro de diálogo y las aplicaciones se pueden modificar usando un lenguaje diferente al que empleó originalmente el desarrollador e ir convirtiéndolo y extendiéndolo gradualmente. Los nuevos widgets y características están disponibles de forma inmediata para todos los lenguajes disponibles. </para>

<para
>Esperamos que &kommander; comience a obtener el soporte de los desarrolladores y el reconocimiento necesario para alcanzar el potencial que ofrece. Nuestro objetivo final es hacer que &kommander; sea útil para que los usuarios noveles extiendan y creen sus aplicaciones. Al mismo tiempo, debería ser una buena herramienta para crear prototipos. También abre la puerta a la promesa del código abierto con una nueva vía. Sabemos que la gente puede ampliar los programas GPL, pero el hecho es que muy pocos tienen las habilidades necesarias. Con &kommander;, ese número se multiplicará por un factor muy grande. Algunas aplicaciones pueden ser más lógicas como una aplicación de &kommander;. Ya lo estamos usando en algunas áreas que permiten la capacidad de extensión en &quantaplus;. </para>

<para
>Esperamos que disfrute de &kommander;. Haga el favor de ayudarnos, enviando informes de errores y cuadros de diálogo de ejemplo, así como cualquier petición que considere oportuna. Puede apuntarse a nuestra lista de usuarios para obtener ayuda en el desarrollo de aplicaciones de &kommander; enhttp://mail.kdewebdev.org/mailman/listinfo/kommander </para>

<para
>Los mejores deseos de parte del equipo de desarrollo de &kommander;.</para>

</chapter>

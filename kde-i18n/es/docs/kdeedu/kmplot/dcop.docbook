<chapter id="dcop">
	<title
>Script en &kmplot;</title>
	
	<para
>Una nueva funcionalidad en KDE 3.4 es que puede escribir scripts para &kmplot; con &DCOP;. Por ejemplo, si desea definir una nueva función <userinput
>f(x)=2sin x+3cos x</userinput
>, ajustar el ancho de línea a 20 y dibujarla, puede teclear en una consola:</para>
	<para
><command
>dcop kmplot-PID Parser addFunction "f(x)=2sin x+3cos x"</command
> Como resultado, se devolverá el número de identificador de la función, o -1 si la función no se pudo definir.</para>
	<para
><command
>
>dcop kmplot-PID Parser setFunctionFLineWidth 20 ID</command
> Esta orden cambia el valor del ancho de la línea a 20 para la función cuyo número de identificación es ID.</para>
	<para
><command
>
>dcop kmplot-PID View drawPlot</command
> Esta orden redibuja la ventana para que la función se haga visible.</para>
<para
>Veamos una lista con las funciones disponibles: <variablelist>
		<varlistentry>
			<term
>KmPlotShell fileOpen &amp;url </term>
			<listitem>
				<para
>Carga el archivo <parameter
>url</parameter
>.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg isModified </term>
			<listitem>
				<para
>Devuelve true (verdadero) si se ha producido algún cambio.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg editColors </term>
			<listitem>
				<para
>Abre el diálogo de edición de color.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg editAxes </term>
			<listitem>
				<para
>Abre el diálogo de edición del sistema de coordenadas.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg editScaling </term>
			<listitem>
				<para
>Abre el diálogo de edición del escalado.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg editFonts </term>
			<listitem>
				<para
>Abre el diálogo de edición de tipos de letra.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg editConstants </term>
			<listitem>
				<para
>Abre el diálogo para editar las constantes.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg newFunction </term>
			<listitem>
				<para
>Abre el diálogo de dibujar nueva función.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg newParametric </term>
			<listitem>
				<para
>Abre el diálogo para dibujar una función paramétrica nueva.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg newPolar </term>
			<listitem>
				<para
>Abre el diálogo para dibujar una nueva polar.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg toggleShowSlider0 </term>
			<listitem>
				<para
>Muestra u oculta el deslizador de parámetros de la ventana número 1.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg toggleShowSlider1 </term>
			<listitem>
				<para
>Muestra u oculta el deslizador de parámetros de la ventana número 2.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg toggleShowSlider2 </term>
			<listitem>
				<para
>Muestra u oculta el deslizador de parámetros de la ventana número 3.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
		  <term
>MainDlg toggleShowSlider3 </term>
		  <listitem>
		    <para
>Muestra u oculta el deslizador de parámetros de la ventana número 4.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotSave </term>
			<listitem>
				<para
>Guarda las funciones (abre el diálogo guardar si es un nuevo archivo).</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotSaveas </term>
			<listitem>
				<para
>Igual que seleccionando <menuchoice
><guimenu
>Archivo</guimenu
><guimenuitem
>Guardar como</guimenuitem
></menuchoice
> en el menú.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotEditPlots </term>
			<listitem>
				<para
>Abre el diálogo dibujar gráficos.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotPrint </term>
			<listitem>
				<para
>Abre el diálogo imprimir.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotExport </term>
			<listitem>
				<para
>Abre el diálogo exportar.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotSettings </term>
			<listitem>
				<para
>Abre el diálogo preferencias.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotNames </term>
			<listitem>
				<para
>Muestra una lista de funciones matemáticas predefinidas.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotCoord1 </term>
			<listitem>
				<para
>Sistema de coordenadas I.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotCoord2 </term>
			<listitem>
				<para
>Sistema de coordenadas II.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg slotCoord3 </term>
			<listitem>
				<para
>Sistema de coordenadas III.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg getYValue </term>
			<listitem>
				<para
>Produce el mismo efecto que seleccionar <menuchoice
><guimenu
>Herramientas</guimenu
><guimenuitem
>Obtener valor y...</guimenuitem
></menuchoice
> en el menú.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg findMinimumValue </term>
			<listitem>
				<para
>Produce el mismo efecto que seleccionar <menuchoice
><guimenu
>Herramientas</guimenu
><guimenuitem
>Buscar el valor mínimo...</guimenuitem
></menuchoice
> en el menú.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg findMaximumValue </term>
			<listitem>
				<para
>Produce el mismo efecto que seleccionar <menuchoice
><guimenu
>Herramientas</guimenu
><guimenuitem
>Buscar el valor máximo...</guimenuitem
></menuchoice
> en el menú.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>MainDlg graphArea </term>
			<listitem>
				<para
>Produce el mismo efecto que seleccionar <menuchoice
><guimenu
>Herramientas</guimenu
><guimenuitem
>Calcular integral...</guimenuitem
></menuchoice
> en el menú.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>Parser addFunction f_str </term>
			<listitem>
				<para
>Añade una nueva función con la expresión <parameter
>f_str</parameter
>. Si la expresión no contiene un nombre de función, se generará automáticamente. Se devolverá el número de identificador de la nueva función, o -1 si la función no pudiera ser definida.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>Parser delfkt id </term>
			<listitem>
				<para
>Elimina la función con el número de <parameter
>id</parameter
>. Si la función no puede borrarse, se devuelve false (falso), en cualquier otro caso devuelve true (verdadero).</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>Parser setFunctionExpression f_str id </term>
			<listitem>
				<para
>Asigna la expresión para la función con el número de identificador <parameter
>id</parameter
> para <parameter
>f_str</parameter
>. Devuelve true (verdadero) si se ha realizado con éxito, en cualquier otro caso devuelve false (falso).</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>Parser countFunctions </term>
			<listitem>
				<para
>Devuelve el número de funciones (las funciones paramétricas se calculan como dos).</para>
			</listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser listFunctionNames </term>
		  <listitem>
		    <para
>Devuelve una lista con todas las funciones.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser fnameToId f_str </term>
		  <listitem>
		    <para
>Devuelve el número de identificador de <parameter
>f_str</parameter
> o -1 si no se encontró el nombre de la función <parameter
>f_str</parameter
>.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser id x </term>
		  <listitem>
		    <para
>Calcula el valor <parameter
>x</parameter
> para la función con el identificador <parameter
>id</parameter
> o devuelve 0,0 si el identificador <parameter
>id</parameter
> no existe.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionFVisible id </term>
		  <listitem>
		    <para
>Devuelve true (verdadero) si la función con el identificador <parameter
>id</parameter
> se encuentra visible, en otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionF1Visible id </term>
		  <listitem>
		    <para
>Devuelve true (verdadero) si la primera derivada de la función con el identificador <parameter
>id</parameter
> se encuentra visible, en otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionF2Visible id </term>
		  <listitem>
		    <para
>Devuelve true (verdadero) si la segunda derivada de la función con el identificador <parameter
>id</parameter
> se encuentra visible, en otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionIntVisible id </term>
		  <listitem>
		    <para
>Devuelve true (verdadero) si la integral de la función con el identificador <parameter
>id</parameter
> se encuentra visible, en otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionFVisible visible id </term>
		  <listitem>
		    <para
>Muestra la función con el identificador <parameter
>id</parameter
> si <parameter
>visible</parameter
> vale true (verdadero). Si <parameter
>visible</parameter
> vale false (falso), la función se ocultará. Se devolverá true (verdadero) si la función existe, en cualquier otro caso devolverá false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionF1Visible visible id </term>
		  <listitem>
		    <para
>Muestra la primera derivada de la función con el identificador <parameter
>id</parameter
> si <parameter
>visible</parameter
> vale true (verdadero). Si <parameter
>visible</parameter
> vale false (falso), la función se ocultará. Se devolverá true (verdadero) si la función existe, en cualquier otro caso devolverá false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionF2Visible visible id </term>
		  <listitem>
		    <para
>Muestra la segunda derivada de la función con el identificador <parameter
>id</parameter
> si <parameter
>visible</parameter
> vale true (verdadero). Si <parameter
>visible</parameter
> vale false (falso), la función se ocultará. Se devolverá true (verdadero) si la función existe, en cualquier otro caso devolverá false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionIntVisible visible id </term>
		  <listitem>
		    <para
>Muestra la integral de la función con el identificador <parameter
>id</parameter
> si <parameter
>visible</parameter
> vale true (verdadero). Si <parameter
>visible</parameter
> vale false (falso), la función se ocultará. Se devolverá true (verdadero) si la función existe, en cualquier otro caso devolverá false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionStr id </term>
		  <listitem>
		    <para
>Devuelve la expresión de la función de aquella función con el identificador <parameter
>id</parameter
>. Si la función no existe, devuelve una cadena vacía.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionFColor id </term>
		  <listitem>
		    <para
>Devuelve el color de la función con el identificador <parameter
>id</parameter
>.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionF1Color id </term>
		  <listitem>
		    <para
>Devuelve el color de la primera derivada de la función con el identificador <parameter
>id</parameter
>.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionF2Color id </term>
		  <listitem>
		    <para
>Devuelve el color de la segunda derivada de la función con el identificador <parameter
>id</parameter
>.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionIntColor id </term>
		  <listitem>
		    <para
>Devuelve el color de la integral de la función con el identificador <parameter
>id</parameter
>.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionFColor color id </term>
		  <listitem>
		    <para
>Define el color de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>color</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionF1Color color id </term>
		  <listitem>
		    <para
>Define el color de la primera derivada de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>color</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionF2Color color id </term>
		  <listitem>
		    <para
>Define el color de la segunda derivada de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>color</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionIntColor color id </term>
		  <listitem>
		    <para
>Define el color de la integral de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>color</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionFLineWidth id </term>
		  <listitem>
		    <para
>Define el ancho de la línea de la función con el identificador <parameter
>id</parameter
>. Si la función no existe devuelve 0.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionF1LineWidth id </term>
		  <listitem>
		    <para
>Devuelve el ancho de línea de la primera derivada de la función con el identificador <parameter
>id</parameter
>. Si la función no existe, devuelve 0.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionF2LineWidth id </term>
		  <listitem>
		    <para
>Devuelve el ancho de línea de la primera derivada de la función con el identificador <parameter
>id</parameter
>. Si la función no existe, devuelve 0.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionIntLineWidth id </term>
		  <listitem>
		    <para
>Devuelve el ancho de línea de la integral de la función con el identificador <parameter
>id</parameter
>. si la función no existe, devuelve 0.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionFLineWidth linewidth id </term>
		  <listitem>
		    <para
>Establece el ancho de línea de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>linewidth</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionF1LineWidth linewidth id </term>
		  <listitem>
		    <para
>Asigna el ancho de línea para la primera derivada de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>linewidth</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionF2LineWidth linewidth id </term>
		  <listitem>
		    <para
>Asigna el ancho de línea para la segunda derivada de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>linewidth</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionIntLineWidth linewidth id </term>
		  <listitem>
		    <para
>Asigna el ancho de línea para la integral de la función con el identificador <parameter
>id</parameter
> con el valor <parameter
>linewidth</parameter
>. Devuelve true (verdadero) si la función existe, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionParameterList id </term>
		  <listitem>
		    <para
>Devuelve una lista con todos los valores de los parámetros para la función con el identificador <parameter
>id</parameter
>.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionAddParameter nuevo_parámetro id </term>
		  <listitem>
		    <para
>Añade el valor del parámetro <parameter
>nuevo_parámetro</parameter
> a la función con el identificador <parameter
>id</parameter
>. Devuelve true (verdadero) si la operación ha terminado correctamente, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionRemoveParameter parámetro_a_eliminar id </term>
		  <listitem>
		    <para
>Elimina el valor del parámetro <parameter
>parámetro_a_eliminar</parameter
> de la función con el identificador <parameter
>id</parameter
>. Devuelve true (verdadero) si la operación ha terminado correctamente, en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionMinValue id </term>
		  <listitem>
		    <para
>Devuelve el punto mínimo del rango de valores de la función con el identificador <parameter
>id</parameter
>. Si la función no existe o el valor mínimo no está definido, se devolverá una cadena vacía.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionMaxValue id </term>
		  <listitem>
		    <para
>Devuelve el punto máximo del rango de valores de la función con el identificador <parameter
>id</parameter
>. Si la función no existe o el valor mínimo no está definido, se devolverá una cadena vacía.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionMinValue min id </term>
		  <listitem>
		    <para
>Asigna al punto mínimo del rango de valores de la función con el identificador <parameter
>id</parameter
> el valor <parameter
>min</parameter
>. Si la función existe y la expresión es válida se devolverá true (verdadero), en cualquier otro caso se devolverá false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionMaxValue max id </term>
		  <listitem>
		    <para
>Asigna al punto máximo del rango de valores de la función con el identificador <parameter
>id</parameter
> el valor <parameter
>max</parameter
>. Si la función existe y la expresión es válida se devolverá true (verdadero), en cualquier otro caso se devolverá false (falso).</para>
		  </listitem>
		</varlistentry>
		
		<varlistentry>
		  <term
>Parser functionStartXValue id </term>
		  <listitem>
		    <para
>Devuelve el punto x inicial para la integral de la función con el identificador <parameter
>id</parameter
>. Si la función no existe o si x-point-expression no está definida, se devolverá una cadena vacía.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser functionStartYValue id </term>
		  <listitem>
		    <para
>Devuelve el punto y inicial para la integral de la función con el identificador <parameter
>id</parameter
>. Si la función no existe o si y-point-expression no está definida, se devolverá una cadena vacía.</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionStartXValue min id </term>
		  <listitem>
		    <para
>Asigna al punto inicial de x para la integral de la función con el identificador <parameter
>id</parameter
> el valor <parameter
>x</parameter
>. Si la función existe y la expresión es válida devolverá true (verdadero), en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term
>Parser setFunctionStartYValue max id </term>
		  <listitem>
		    <para
>Asigna al punto inicial de y para la integral de la función con el identificador <parameter
>id</parameter
> el valor <parameter
>y</parameter
>. Si la función existe y la expresión es válida devolverá el true (verdadero), en cualquier otro caso devuelve false (falso).</para>
		  </listitem>
		</varlistentry>
		<varlistentry>
			<term
>View stopDrawing </term>
			<listitem>
				<para
>Si &kmplot; se encuentra dibujando la función, el procedimiento se detendrá.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term
>View drawPlot </term>
			<listitem>
				<para
>Redibuja todas las funciones.</para>
			</listitem>
		</varlistentry>
	</variablelist>
</para>
</chapter>

<!--
    Local Variables:
    mode: sgml
    sgml-minimize-attributes:nil
    sgml-general-insert-case:lower
    sgml-indent-step:0
    sgml-indent-data:nil
    sgml-parent-document:("index.docbook" "BOOK" "CHAPTER")
    End:
    -->
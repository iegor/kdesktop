<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="introduction">
<chapterinfo>
<title
>Introdução</title>
<authorgroup>
<author
><firstname
>Eric</firstname
> <surname
>Laffoon</surname
> <affiliation
> <address
><email
>sequitur@kde.org</email
></address>
</affiliation>
</author>

<othercredit role="translator"
><firstname
>José</firstname
><surname
>Pires</surname
><affiliation
><address
><email
>jncp@netcabo.pt</email
></address
></affiliation
><contrib
>Tradução</contrib
></othercredit
> 

</authorgroup>
</chapterinfo>

<title
>Introdução</title>

<para
>O &kommander; é uma ferramenta visual de criação de janelas que poderá ser expandida para criar aplicações gráficas completas. O objectivo principal é criar tanta funcionalidade quanto possível com qualquer linguagem de 'scripting'. Isto é conseguido através das seguintes funcionalidades: </para>

<itemizedlist>


  <listitem
><para
>Os especiais são antecedidos com um <quote
>@</quote
> como o @textoElemento. Eles oferecem funcionalidades especiais como o valor de um elemento gráfico, funções, nomes alternativos, variáveis globais, entre outras coisas.</para
></listitem>


<listitem
><para
>A integração com o &DCOP; permite às janelas do &kommander; controlarem e serem controladas nas interacções com outras aplicações do &kde;. É uma funcionalidade muito poderosa!</para
></listitem>

<listitem
><para
>Os 'signals' e os 'slots' são uma forma um pouco menos intuitiva para um utilizador novo. Está em revisão a forma como se processam as coisas na primeira versão importante. Estes itens oferecem um modelo de eventos limitado para quando é carregado um botão ou um elemento gráfico mudou. Combinado com o <quote
>Texto de População</quote
> é bastante poderoso.</para
></listitem>
</itemizedlist>

<para
>A funcionalidade central das janelas do &kommander; é a possibilidade de associar texto (o Text do &kommander;) a um elemento gráfico. Por isso, se você tiver o @elemento1 e o @elemento2 e forem campos de texto, você poderá dizer ao &kommander; para mostrar o seu conteúdo, introduzindo o @widgetText na área de Text do &kommander;. Aí, escreva 'olá' no @elemento1 e 'mundo' no @elemento2. Um botão poderá então ter o texto 'O meu primeiro programa @widget1 @widget2' no &kommander; Se executar esta janela numa consola, ele irá mostrar 'O meu primeiro programa olá mundo' no &kommander; </para>

<para
>Felizmente, você começa a ver uma pequena amostra do potencial. O &kommander; possibilita um modelo de desenho muito mais rápido para as aplicações mais simples, porque permite-lhe parar de pensar tanto na linguagem e voltar ao modelo conceptual mais básico e natural. Nos computadores, a linguagem é uma forma de definir os conceitos e, como tal, é uma camada entre o conceito e a implementação, o que poderá impedir um progresso minucioso. O &kommander; procura minimizar essa camada. </para>

<para
>O &kommander; também procura basear-se em normas. É criado sobre a plataforma do &Qt; Designer e cria ficheiros *.ui, os quais muda de nome para *.kmdr. Ele poderá importar facilmente qualquer elemento gráfico do &kde; e isso poderá ser feito sem ter de recompilar o &kommander;, recorrendo a 'plugins'. </para>

<para
>O outro factor significante do &kommander; é como ele se ajusta aos requisitos da linguagem. As linguagens de programação podem ser coisas maravilhosas, mas tendem a ter os seus próprios dogmas e particularidades, procurando muitas vezes oferecer um avanço no desenho de &GUI;s num ambiente de desenvolvimento integrado. Ironicamente, a aceitação desses &IDE;s é limitada pelo número de pessoas que estão dispostas a adoptar uma nova linguagem para obter acesso a uma dada funcionalidade. Não é, de facto, razoável esperar que as pessoas necessitem de mudar para uma dúzia de novas linguagens para aceder aos vários conjuntos de funcionalidades. Sendo neutro em relação à linguagem e permitindo a uma janela do &kommander; ser extendida com qualquer linguagem de 'scripting', o &kommander; posiciona-se num nível único para uma adopção vasta. Podem ser usadas várias linguagens de 'scripting' numa única janela e as aplicações podem ser adquiridas por pessoas que utilizem uma linguagem diferente da que o programador original usou e convertê-la ou extendê-la gradualmente. Poderão ser utilizados novos elementos gráficos e funcionalidades por todas as linguagens disponíveis. </para>

<para
>Esperemos que o &kommander; comece a ter suporte do programador e o reconhecimento necessário para atingir o potencial que oferece. O objectivo final é tornar o &kommander; útil para os utilizadores novatos para extenderem e juntarem as suas aplicações. Ao mesmo tempo, deverá tornar-se uma boa ferramenta de prototipagem. Também abre a porta à promessa do código aberto de uma nova forma. Sabe-se que as pessoas podem extender os nossos programas em GPL, mas mantém-se o facto de muito poucas pessoas terem o conhecimento. Com o &kommander; estes números vêem um grande multiplicador! Algumas aplicações poderão ser mais lógicas se forem uma aplicação do &kommander;. Este já é usado nas áreas em que se pretende permitir alguma flexibilidade de &quantaplus;. </para>

<para
>Esperemos que goste do &kommander;. Por favor, ajude-nos com relatórios de erros e janelas de exemplo, assim como quaisquer pedidos que possa ter. Você poder-se-á juntar à nossa lista de utilizadores para ajudar a desenvolver aplicações para o &kommander; em http://mail.kdewebdev.org/mailman/listinfo/kommander </para>

<para
>Cumprimentos da equipa de desenvolvimento do &kommander;!</para>

</chapter>

/****************************************************************************
** ClassViewWidget meta object code from reading C++ file 'classviewwidget.h'
**
** Created: Tue Feb 26 11:31:34 2013
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.8   edited Feb 2 14:59 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "classviewwidget.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.8b. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *ClassViewWidget::className() const
{
    return "ClassViewWidget";
}

QMetaObject *ClassViewWidget::metaObj = 0;
static QMetaObjectCleanUp cleanUp_ClassViewWidget( "ClassViewWidget", &ClassViewWidget::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString ClassViewWidget::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "ClassViewWidget", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString ClassViewWidget::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "ClassViewWidget", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* ClassViewWidget::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = KListView::staticMetaObject();
    static const QUMethod slot_0 = {"slotNewClass", 0, 0 };
    static const QUMethod slot_1 = {"slotAddMethod", 0, 0 };
    static const QUMethod slot_2 = {"slotAddAttribute", 0, 0 };
    static const QUMethod slot_3 = {"slotOpenDeclaration", 0, 0 };
    static const QUMethod slot_4 = {"slotOpenImplementation", 0, 0 };
    static const QUMethod slot_5 = {"slotCreateAccessMethods", 0, 0 };
    static const QUMethod slot_6 = {"slotFollowEditor", 0, 0 };
    static const QUMethod slot_7 = {"slotProjectOpened", 0, 0 };
    static const QUMethod slot_8 = {"slotProjectClosed", 0, 0 };
    static const QUMethod slot_9 = {"refresh", 0, 0 };
    static const QUParameter param_slot_10[] = {
	{ "fileName", &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_10 = {"insertFile", 1, param_slot_10 };
    static const QUParameter param_slot_11[] = {
	{ "fileName", &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_11 = {"removeFile", 1, param_slot_11 };
    static const QUParameter param_slot_12[] = {
	{ "item", &static_QUType_ptr, "QListViewItem", QUParameter::In }
    };
    static const QUMethod slot_12 = {"slotExecuted", 1, param_slot_12 };
    static const QMetaData slot_tbl[] = {
	{ "slotNewClass()", &slot_0, QMetaData::Private },
	{ "slotAddMethod()", &slot_1, QMetaData::Private },
	{ "slotAddAttribute()", &slot_2, QMetaData::Private },
	{ "slotOpenDeclaration()", &slot_3, QMetaData::Private },
	{ "slotOpenImplementation()", &slot_4, QMetaData::Private },
	{ "slotCreateAccessMethods()", &slot_5, QMetaData::Private },
	{ "slotFollowEditor()", &slot_6, QMetaData::Private },
	{ "slotProjectOpened()", &slot_7, QMetaData::Private },
	{ "slotProjectClosed()", &slot_8, QMetaData::Private },
	{ "refresh()", &slot_9, QMetaData::Private },
	{ "insertFile(const QString&)", &slot_10, QMetaData::Private },
	{ "removeFile(const QString&)", &slot_11, QMetaData::Private },
	{ "slotExecuted(QListViewItem*)", &slot_12, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"ClassViewWidget", parentObject,
	slot_tbl, 13,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_ClassViewWidget.setMetaObject( metaObj );
    return metaObj;
}

void* ClassViewWidget::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "ClassViewWidget" ) )
	return this;
    if ( !qstrcmp( clname, "QToolTip" ) )
	return (QToolTip*)this;
    return KListView::qt_cast( clname );
}

bool ClassViewWidget::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: slotNewClass(); break;
    case 1: slotAddMethod(); break;
    case 2: slotAddAttribute(); break;
    case 3: slotOpenDeclaration(); break;
    case 4: slotOpenImplementation(); break;
    case 5: slotCreateAccessMethods(); break;
    case 6: slotFollowEditor(); break;
    case 7: slotProjectOpened(); break;
    case 8: slotProjectClosed(); break;
    case 9: refresh(); break;
    case 10: insertFile((const QString&)static_QUType_QString.get(_o+1)); break;
    case 11: removeFile((const QString&)static_QUType_QString.get(_o+1)); break;
    case 12: slotExecuted((QListViewItem*)static_QUType_ptr.get(_o+1)); break;
    default:
	return KListView::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool ClassViewWidget::qt_emit( int _id, QUObject* _o )
{
    return KListView::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool ClassViewWidget::qt_property( int id, int f, QVariant* v)
{
    return KListView::qt_property( id, f, v);
}

bool ClassViewWidget::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
